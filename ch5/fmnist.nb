(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    715528,      14303]
NotebookOptionsPosition[    707851,      14172]
NotebookOutlinePosition[    708204,      14188]
CellTagsIndexPosition[    708161,      14185]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<FashionMNIST\>\"", ",", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"testData", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"\"\<FashionMNIST\>\"", ",", "\"\<TestData\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.754943581202227*^9, 3.754943581211948*^9}, {
  3.7549452198055573`*^9, 3.7549452224750032`*^9}, {3.754945621915367*^9, 
  3.7549456289593163`*^9}, {3.7549870252201023`*^9, 3.7549870357690077`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"47c22f41-5950-49e5-a7a0-03c98cf7a033"],

Cell[BoxData[
 RowBox[{
  RowBox[{"validationData", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"testData", ",", " ", "2500"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754992201529586*^9, 3.7549922575340843`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a0319113-24c8-46cb-9d42-d6cbbf99a2a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistEncoder", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "28"}], "}"}], ",", 
     RowBox[{"\"\<ColorSpace\>\"", "\[Rule]", "\"\<Grayscale\>\""}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.754944161152378*^9, 3.754944161162321*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"5cd401c7-18c0-4a17-af22-f565de7b20b0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Image\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Image size\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              RowBox[{"{", 
                RowBox[{"28", ",", "28"}], "}"}], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Grayscale\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Color channels\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["1", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["None", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              TemplateBox[{"\"3-tensor\"", "\" \"", 
                StyleBox[
                 
                 TemplateBox[{
                  "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                   "\" \"", 
                   
                   TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                  "RowDefault"], 
                 GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
              "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7549441633734713`*^9, 3.754944180568482*^9}, 
   3.754944880399555*^9, 3.75494524854152*^9, 3.754945650842309*^9, 
   3.7549870550954247`*^9, 3.754992357546753*^9, 3.7550020348458557`*^9, 
   3.755006785389756*^9, 3.755006838781839*^9, 3.755010193180785*^9, 
   3.755010292739419*^9, 3.755011595290975*^9, 3.755014104909871*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"f9a7ff67-3098-4f2b-8ee4-950bf21e3976"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mnistDecoder", "=", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Class\>\"", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "9"}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549441083181334`*^9, 3.7549441083302298`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7fe5356d-52c6-4a11-b6bb-95551d7aa285"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Class\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              TagBox[
               RowBox[{"{", 
                 RowBox[{"0", ",", 
                   RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
                   "9"}], "}"}], Short[#, 0.1]& ], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Input depth\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["1", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetDecoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.754944112881287*^9, {3.7549441721955147`*^9, 3.7549441806155653`*^9}, 
   3.754944880465768*^9, 3.7549452488208303`*^9, 3.754945651041356*^9, 
   3.754987055306188*^9, 3.754992357765901*^9, 3.755002034947525*^9, 
   3.7550067856210737`*^9, 3.755006838997567*^9, 3.7550101933912477`*^9, 
   3.755010292963855*^9, 3.7550115954865437`*^9, 3.75501410513107*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"23186443-8d1a-406a-82f6-a5277340c8b0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.754944280887322*^9, 3.754944291484507*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"444194f5-1b1b-4ac6-8a0b-fee974fef16e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uninitializedLenet", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", "5"}], "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", "5"}], "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", " ", 
      RowBox[{"LinearLayer", "[", "500", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "10", "]"}], ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "mnistEncoder"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "mnistDecoder"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.754944305838101*^9, 3.754944308738082*^9}, 
   3.7549443688042803`*^9, {3.7550102683586693`*^9, 3.755010277899931*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"39abffc4-71f7-4219-857a-019bbdd07c61"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 1, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{50, 20, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 20, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{500, 800}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 500}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "InputDepth" -> 
                    1, "Dimensions" -> 10, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7549443713498173`*^9, 3.7549448805757217`*^9, 
  3.754945249320283*^9, 3.75494565119987*^9, 3.7549870554687*^9, 
  3.7549923579264517`*^9, 3.755002035139101*^9, 3.755006785788911*^9, 
  3.755006839126069*^9, 3.755010193514406*^9, 3.755010293149665*^9, 
  3.755011595602623*^9, 3.7550141053010683`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"951cba2b-38e5-4bc6-a299-6d4996d5a380"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetInitialize", "[", "uninitializedLenet", "]"}]}]], "Input",
 CellChangeTimes->{{3.754944383064683*^9, 3.754944383074561*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"a952d061-b077-45e9-98d3-5ae3db7bd9e2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{50}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 20, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 800}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "InputDepth" -> 
                    1, "Dimensions" -> 10, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7549443845191307`*^9, 3.7549448806308947`*^9, 
  3.754945249538232*^9, 3.7549456512754297`*^9, 3.754987055555385*^9, 
  3.754992357999091*^9, 3.755002035225013*^9, 3.755006785878558*^9, 
  3.7550068392688227`*^9, 3.755010193645055*^9, 3.755010293233047*^9, 
  3.7550115957219048`*^9, 3.755014105382807*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"f49c46dd-e458-4082-8a33-59c84694294c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingNet", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<lenet\>\"", "\[Rule]", "lenet"}], ",", 
      RowBox[{"\"\<loss\>\"", "\[Rule]", 
       RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}]}], 
     "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       RowBox[{"\"\<lenet\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<loss\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}], "\[Rule]", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<loss\>\"", ",", "\"\<Target\>\""}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.754944831878189*^9, 3.7549448318884573`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"51fab5bf-742b-421d-8891-5fa76de46f98"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"lenet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["lenet", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[12]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"CE\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CrossEntropyLossLayer", "[", 
                    RowBox[{"\"Index\"", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "10"}], ",", 
                    RowBox[{"\"Target\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Restricted", "[", 
                    RowBox[{"\"Integer\"", ",", "10"}], "]"}], "}"}]}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    HoldForm[
                    CrossEntropyLossLayer["Index", "Input" -> 10, "Target" -> {
                    Restricted["Integer", 10]}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"lenet\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    SubscriptBox["\"\[DoubleStruckCapitalN]\"", "10"], 
                    TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 
                    1.}, {-2., 1.0000000000000002`}, {6.123233995736766*^-17, 
                    1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 102.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "lenet"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[10]]], 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "lenet" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 20, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{50}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 50, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 800}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {500}, "$OutputSize" -> 
                    500, "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "loss" -> 
                    Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "TargetForm" -> "Index", "$InputDimensions" -> {}, 
                    "$Classes" -> 10], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[10]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"index\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"range\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"1", "\"..\"", "10"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.754944834357346*^9, 3.754944880680385*^9, 
  3.754945249638389*^9, 3.754945651375592*^9, 3.754987055666173*^9, 
  3.754992358109909*^9, 3.755002035340015*^9, 3.755006785987935*^9, 
  3.755006839379537*^9, 3.755010193757476*^9, 3.7550102933408337`*^9, 
  3.7550115958244047`*^9, 3.7550141054861298`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"025e90e0-18ec-49d7-87cf-9f82f7e0dea7"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainAssoc", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"Keys", "[", "trainingData", "]"}]}], ",", 
     RowBox[{"\"\<Target\>\"", "\[Rule]", 
      RowBox[{
       RowBox[{"Values", "[", "trainingData", "]"}], "+", "1"}]}]}], "|>"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"testAssoc", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"Keys", "[", "testData", "]"}]}], ",", 
     RowBox[{"\"\<Target\>\"", "\[Rule]", 
      RowBox[{
       RowBox[{"Values", "[", "testData", "]"}], "+", "1"}]}]}], "|>"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7549449028900843`*^9, 3.754944902899131*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"f7abf523-360c-4bac-8bbe-4f283285a042"],

Cell[BoxData[
 RowBox[{
  RowBox[{"validationAssoc", " ", "=", " ", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"Keys", "[", "validationData", "]"}]}], ",", 
     RowBox[{"\"\<Target\>\"", "\[Rule]", 
      RowBox[{
       RowBox[{"Values", "[", "validationData", "]"}], "+", "1"}]}]}], 
    "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549922880330887`*^9, 3.75499230670544*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"65cdbf70-936d-4c03-b2f0-8f050ebdcf47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"trainingNet", ",", "trainAssoc", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validationAssoc"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549449164233093`*^9, 3.754944916433937*^9}, 
   3.754992331438055*^9, {3.755006815063321*^9, 3.755006816805942*^9}, {
   3.755014087314865*^9, 3.755014087504177*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"7e23fee1-ae06-4104-b4d4-56f84ddaf68a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetTrainResultsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Total training time\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"51 min\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total rounds\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["20", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total batches\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["18760", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Batch size\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["64", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Method\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["\"ADAM\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Final round loss\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], 
                StyleBox["0.18008538182655195`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation loss\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["0.24724273809753358`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final round error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"6.83%\"", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"8.88%\"", "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8}}, "Rows" -> {{0.7}}}], 
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Loss evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox[
                 
                 TemplateBox[{"\"Error evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"]}, {
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJwtyw0s1HEcx/FLLM9jluQhMZpMz0Os+KRJ6kqr1oOHGHWlTiwRrohEFFaj
YdouSqrLehDydH+P507uweiRKDq6kFZ2Q6j8fr/tu99ee3+/NqGR+09osFgs
/Jv//8IzCkXHauOKkck64YLNePDvc8zyLVAQ56ZBksL5s/FCD3FRDkZjuhPO
7npLvD8X9vE3bO3b3xG/yYcy+fgpTt8HYv874O5Whx5K/0j8g48w8bffGc+o
N5RAbmDLDt/ZRxx9H6rOiQSj1f3ELx/gZpSufrDBJ2L1Q0xa3l1eoKJ2EyBm
EUtdnzBAzCvH2uw1MnYXub987Cly8w62BQWSfjnpGSzGXmg6WXwm5j9HdM70
eKwOdeML+AUvcRt3pf5SAaULP+5DP/XiSlhNpLoXtVLbVcHk2on4JCG1dzVK
DTOaIrhfiDmvIOWfW84tok6vQbezuZckirqsFm4+Il5mAbW4DloJT7iXUgeJ
VfWInTHV3zZIu54QHi7em3uqiGHKwMxBPmI3RvaZUganOdstrU8Sw7UR484R
kvkq2kWNsF710Eo2RfuRJhjMxTnlqGkfaYLmoxltbd0h0uObMbvjUPdwEDGj
0wKr+exNKiXthS0QNIS43LxCu2MrvNLWnWHyaa9thef6srN8Ne272/BYR3K7
qJf23jYwV9/3FPt9JZ0rAjPK7ZmrIsasCHsKr4f7sGnPagc/r7Smsob2FWJY
mDi8YbYqSS8X45ZWWYR/Je2eEpQLBFoiZ9plEkQfbs8IrKc9pAP21amBvIu0
T3SgIv5nwy8HYiS/hqGjW+TUFtqNO8E5lazkq2gv7sRWRtVqF037Rik0uX77
llKjWYrFQcqBg67DpB+QIXGiT48VQIwhGfZ68JahguyHuMuRdqvwuY2adH6K
HEvZjUlhXaQPSOSoS2wSlo2SvtJEAXOpvivnHnFIgAINzRka0/30vkSBo9/s
haJY4oHvCsT5npdmZw4L/wKIHKFe
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    
                    LineBox[{{938, -0.4343778177448772}, {
                    1876, -0.49707103067561254`}, {
                    2814, -0.5246166638206886}, {3752, -0.5465510689781669}, {
                    4690, -0.5497959996491035}, {5628, -0.5623852013690359}, {
                    6566, -0.5705558647120808}, {7504, -0.5862615349260983}, {
                    8442, -0.5875986771253867}, {9380, -0.5996888189633653}, {
                    10318, -0.5751751459240785}, {
                    11256, -0.6004362937486006}, {
                    12194, -0.6008673326721115}, {
                    13132, -0.608949605315904}, {
                    14070, -0.5880187175701287}, {
                    15008, -0.5954319147607942}, {
                    15946, -0.6180171148570353}, {
                    16884, -0.5853091018604648}, {
                    17822, -0.6066079427861073}, {
                    18760, -0.6068764554455853}}]}, {
                    AbsolutePointSize[3.], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{938, -0.4343778177448772}, {
                    1876, -0.49707103067561254`}, {
                    2814, -0.5246166638206886}, {3752, -0.5465510689781669}, {
                    4690, -0.5497959996491035}, {5628, -0.5623852013690359}, {
                    6566, -0.5705558647120808}, {7504, -0.5862615349260983}, {
                    8442, -0.5875986771253867}, {9380, -0.5996888189633653}, {
                    10318, -0.5751751459240785}, {
                    11256, -0.6004362937486006}, {
                    12194, -0.6008673326721115}, {
                    13132, -0.608949605315904}, {
                    14070, -0.5880187175701287}, {
                    15008, -0.5954319147607942}, {
                    15946, -0.6180171148570353}, {
                    16884, -0.5853091018604648}, {
                    17822, -0.6066079427861073}, {
                    18760, -0.6068764554455853}}]}}}, ImageSize -> {132, 82}, 
                  Frame -> True, Axes -> None, AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRange -> {{0, 18496}, {-1., 0.}},
                   GridLines -> {{1876, 3752, 5628, 7504, 9380, 11256, 13132, 
                    15008, 16884, 18760}, {{-1., 
                    GrayLevel[0.9]}, {-0.6989700043360187, 
                    GrayLevel[0.95]}, {-0.5228787452803375, 
                    GrayLevel[0.95]}, {-0.39794000867203755`, 
                    GrayLevel[0.95]}, {-0.30102999566398114`, 
                    GrayLevel[0.95]}, {-0.22184874961635626`, 
                    GrayLevel[0.95]}, {-0.1549019599857432, 
                    GrayLevel[0.95]}, {-0.09691001300805638, 
                    GrayLevel[0.95]}, {-0.04575749056067506, 
                    GrayLevel[0.95]}}}, PlotRangePadding -> {0, 
                    Scaled[0.05]}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"], 
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJwtzX0s1HEAx/Hz2Ew2zViTiOIPZSnjRuGjdohl87BCMg+pVeY0VumsB0xP
Hjaxwt12OQ5L4s7deazfeTpHuGPJU42e5mEiPc1jD77f3/bdb6+99/l+beO4
IQm6LBYL/87//9ZnGoe70ka5fsyQ95Z38vA0MWFhZL2HuDAbb4KjKo1FXcT8
fOx1dRC7W3UShxTi6ExS2Bqrg3jkCbKLRwWjG0riSAEGzm2qvbZTLwoxMjl7
tcCE+pAIJT28ibmTDHFKBVx1jEOOzb4kllVCx/d6psyO9t/VsBhfWIlqpd29
BuEmcrd88zZiXi24nCLR0Dvi29F1SH1U9qxmvpX4Vj08XRz8eeoWYqEELuma
a6t6tCulmLd7KznwlfYPDQi6UHizXNxMrCeHfe7+gjFL6n0K9Efx8o7UUXMa
wT8dk2n5oIn4fBOgSE6Tg/puM+r49uFLl6irWmB61s2ZbdNIrG6FuG6dzZIo
iOfaMO2vyVFl0G78Cn6pWptkPjEsGMSnN4mCJ+RbZsQMBOGG3zaEZA+2ElnH
uYoKb9pVSvjmvi91GiNGeDsW+dUTD+/RPtOOdaZ403eT9rQOLAd1eyg9aTfq
xOiSQvDLUUZ6SSeW83+m6fcSM45dMI9/wXoup72lC9Z5ZrPbwmgP7IbYSCme
mm4gfbIbX2IzBwK/EzOJKqgiGuyYH1LSN1Swrl/1aXOhPbcH0Rzr/oOudG+t
hoFud5mPCe21apyKDVSrNPR9714oVtaURTnkPmawF7G2zhrORbqP6UOpNEdX
+Jj2pT4Us3WqXSNpv/Mal7UpN9YY2nf0409WQI6NVEJ6WT9quLxdDVXEzOEB
RBdzZj2d6b5jAMNxNk5T+rSHDgIneCpD23rSPw1CZhBwhZtJeoyHBvqhXvFC
P9KFGRp0JjHj4zLSp3o1KHL5LLzvRPoeMy3ybLO1EQl0f0YLz93lVo1DdC/S
ojpLb/ijG/HUvBZsllAh0pV4/wWP2Xkp
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    LineBox[{{938, 0.1364}, {1876, 0.11960000000000001`}, {
                    2814, 0.11320000000000001`}, {3752, 0.1048}, {
                    4690, 0.1028}, {5628, 0.10200000000000001`}, {
                    6566, 0.1004}, {7504, 0.0932}, {8442, 0.0964}, {
                    9380, 0.09960000000000001}, {10318, 0.0952}, {
                    11256, 0.09040000000000001}, {12194, 0.0916}, {
                    13132, 0.0912}, {14070, 0.094}, {15008, 0.092}, {
                    15946, 0.0864}, {16884, 0.0912}, {
                    17822, 0.08560000000000001}, {18760, 0.0888}}]}, {
                    AbsolutePointSize[3.], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{938, 0.1364}, {1876, 0.11960000000000001`}, {
                    2814, 0.11320000000000001`}, {3752, 0.1048}, {
                    4690, 0.1028}, {5628, 0.10200000000000001`}, {
                    6566, 0.1004}, {7504, 0.0932}, {8442, 0.0964}, {
                    9380, 0.09960000000000001}, {10318, 0.0952}, {
                    11256, 0.09040000000000001}, {12194, 0.0916}, {
                    13132, 0.0912}, {14070, 0.094}, {15008, 0.092}, {
                    15946, 0.0864}, {16884, 0.0912}, {
                    17822, 0.08560000000000001}, {18760, 0.0888}}]}}}, 
                  ImageSize -> {132, 82}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, 
                  PlotRange -> {{0, 18496}, {0, 0.3158215487316608}}, 
                  GridLines -> {{1876, 3752, 5628, 7504, 9380, 11256, 13132, 
                    15008, 16884, 18760}, {{0.05, 
                    GrayLevel[0.9]}, {0.1, 
                    GrayLevel[0.9]}, {0.15, 
                    GrayLevel[0.9]}, {0.2, 
                    GrayLevel[0.9]}, {0.25, 
                    GrayLevel[0.9]}, {0.3, 
                    GrayLevel[0.9]}, {0.35000000000000003`, 
                    GrayLevel[0.9]}, {0.4, 
                    GrayLevel[0.9]}}}, PlotRangePadding -> {{0, 0}, {
                    Scaled[0.01], 0}}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{1}}, "Rows" -> {{1, 0.1}}}]}}, BaselinePosition -> 
           Automatic, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 1}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetTrainResultsObject[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.754945123897127*^9, 3.7549454636013203`*^9, 
  3.754945859555376*^9, 3.754987264468354*^9, 3.75499255735501*^9, 
  3.7550022324760942`*^9, 3.75500681170127*^9, 3.755007232412178*^9, 
  3.755010233822907*^9, 3.7550106814897633`*^9, 3.755011971779229*^9, 
  3.7550171655900917`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"c28036d5-a6e2-413e-a36f-22b37cc6b021"]
}, Open  ]],

Cell["*****************************************", "Text",
 CellChangeTimes->{{3.754986530685307*^9, 
  3.754986534444963*^9}},ExpressionUUID->"8b40ba76-0760-4a35-83c6-\
cf0b46d57d76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uninitializedNet2", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FlattenLayer", "[", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "512", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "128", "]"}], ",", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "10", "]"}], ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "mnistEncoder"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "mnistDecoder"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.754986539752145*^9, 3.7549866316455936`*^9}, {
  3.754986668094853*^9, 3.7549866691887836`*^9}, {3.7549876107232943`*^9, 
  3.754987633536584*^9}, {3.754987864870617*^9, 3.754987868817947*^9}, {
  3.7550101696884203`*^9, 3.755010173068161*^9}, {3.75501118952695*^9, 
  3.755011190758659*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"080a98a1-b8a1-4f6d-9b60-aa0178d8e08f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{512, 784}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 512}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 128}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "InputDepth" -> 
                    1, "Dimensions" -> 10, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7549866378938723`*^9, 3.754986671738659*^9, 
  3.754987264649069*^9, 3.754987636324479*^9, 3.754987872248816*^9, 
  3.754992557528496*^9, 3.75500223262525*^9, 3.755006811883954*^9, 
  3.7550072326065187`*^9, 3.755010233980009*^9, 3.7550106816714497`*^9, 
  3.755011971938838*^9, 3.755017166445085*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"4aa6614a-8dab-445c-973c-b13b5e7fa4d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net2", "=", 
  RowBox[{"NetInitialize", "[", "uninitializedNet2", "]"}]}]], "Input",
 CellChangeTimes->{{3.75498668845822*^9, 3.754986692396213*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2d9ead02-66f9-4151-b78d-4a69d2557fff"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "InputDepth" -> 
                    1, "Dimensions" -> 10, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7549866943243227`*^9, 3.754987264738572*^9, 
  3.754987638865182*^9, 3.754987876482768*^9, 3.754992557625894*^9, 
  3.7550022327014313`*^9, 3.755006811964485*^9, 3.755007232698327*^9, 
  3.755010234080015*^9, 3.755010681753044*^9, 3.755011972038685*^9, 
  3.755017166893325*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"34fa5b56-7f4b-420f-8c71-45e11ef0e12f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingNet2", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<net2\>\"", "\[Rule]", "net2"}], ",", 
      RowBox[{"\"\<loss\>\"", "\[Rule]", 
       RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}]}], 
     "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       RowBox[{"\"\<net2\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<loss\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}], "\[Rule]", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<loss\>\"", ",", "\"\<Target\>\""}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.754986720230345*^9, 3.7549867351508408`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"1441c2c4-9b5d-404e-bcea-f112e65e2d51"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"net2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["net2", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"CE\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CrossEntropyLossLayer", "[", 
                    RowBox[{"\"Index\"", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "10"}], ",", 
                    RowBox[{"\"Target\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Restricted", "[", 
                    RowBox[{"\"Integer\"", ",", "10"}], "]"}], "}"}]}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    HoldForm[
                    CrossEntropyLossLayer["Index", "Input" -> 10, "Target" -> {
                    Restricted["Integer", 10]}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"net2\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    SubscriptBox["\"\[DoubleStruckCapitalN]\"", "10"], 
                    TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 
                    1.}, {-2., 1.0000000000000002`}, {6.123233995736766*^-17, 
                    1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 102.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "net2"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[10]]], 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "net2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {512}, "$OutputSize" -> 
                    512, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {128}, "$OutputSize" -> 
                    128, "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "loss" -> 
                    Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "TargetForm" -> "Index", "$InputDimensions" -> {}, 
                    "$Classes" -> 10], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[10]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"index\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"range\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"1", "\"..\"", "10"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7549867475627832`*^9, 3.7549872648238707`*^9, {3.754987647641931*^9, 
   3.7549876516805353`*^9}, 3.7549878788280563`*^9, 3.7549925577028723`*^9, 
   3.755002232787477*^9, 3.7550068120506372`*^9, 3.7550072327970753`*^9, 
   3.755010234187277*^9, 3.7550106818363256`*^9, 3.7550119721372013`*^9, 
   3.755017167446168*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"34c10fd3-abd9-4329-a1f4-b3a4b4e7b96e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results2", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"trainingNet2", ",", "trainAssoc", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validationAssoc"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.754986767030031*^9, 3.754986770938596*^9}, {
   3.754986814772922*^9, 3.754986815276168*^9}, {3.75498686706332*^9, 
   3.754986867267169*^9}, {3.7549923365258827`*^9, 3.7549923385889606`*^9}, {
   3.75500201230189*^9, 3.7550020136072397`*^9}, {3.755008836771989*^9, 
   3.7550088522273893`*^9}, {3.7550090974454536`*^9, 3.755009101611052*^9}, {
   3.755009178401291*^9, 3.7550091799993*^9}, 3.755009326922447*^9, {
   3.7550095328958797`*^9, 3.755009562460957*^9}, 3.75500992165703*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"580f21d5-1c7c-4d46-8e7d-ef40fc79c59f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetTrainResultsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Total training time\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"6.9 min\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total rounds\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["20", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total batches\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["18760", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Batch size\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["64", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Method\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["\"ADAM\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Final round loss\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], 
                StyleBox["0.2644084919228013`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation loss\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["0.36144085071086884`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final round error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"9.96%\"", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"13.2%\"", "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8}}, "Rows" -> {{0.7}}}], 
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Loss evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox[
                 
                 TemplateBox[{"\"Error evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"]}, {
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJw1zAlIk3EcxvHllWKkYk7B7jIs7ZjVytHxiKXBTMJYZVLOgZK1WlBBaqEZ
Jh1DEoXwHM1lh5qaTU1rh3NT55yzPErNOTusjGlGo7BZ+f/3wsvLh+/veVcI
RDGJDgwGA3/ff9+5x1OAwJTHr355KRVz9kuDdiJ8MCHXSJx3DU7ZjcL3QT3E
RTlo+z5W6hD/kjgmD6IpJ5t5mrrvDsZHTwQcq+wlPlqM6iaNNTO4j9gqwWxL
BMvmSM2S4lg+j+OZ3098ToasTT6y5DHqp+VIVLu4scMHiG0PYBHoN14/SR1a
gfJ4cWyy4jVxWhU62woqXQuIM45XY2qeLcDR7w1xeg3GmSU12hFqSS16B9YG
mhTUqidYH2yKXiWjttSB21qRXeE/ROwox6MdX0Ou/vfqeiTU7W82pA8S722A
Q+PDQ3uKaE9qBNPAjZuRU2c/w/igzKXGcZj4fhOYw4lZaVHU7c1YOVMVd4rx
lvjzc3Bsptg1oHZXwG2yKzWlktyDqUTPzYzIYo+ROSvvKWFePnPx9DS5xzYV
/MOdgxouEyt1KlwTlYTZP9J+RI1RVayvi53ux9UIratXhZ2nPaUFA6Jl1hqG
mXQ3DbyUnOjTneQeBRqwPLwWCKx0v64VI76f+jfk0d7UCv7CBA1LR/dcLUST
qdE/zhBjSItSob6w1pl2oQ5NPVtzefNHSf+tg+QGe0KqoF3chpLadFbZWbpf
2o7kq2sPJHmTe2VVO4rsntI7u+h+dwfiXyw5Vc2je2MHnNwv3Fyyj3a+HlI9
rzs/hO4n9TjpJ/9mU9H/X+nEviBXuXYj7V4GvNmeupNtp/u7BjA2F0cufk57
SBe2WQrFVxbS3tKFKEN8DsfZQvpBI1b3fXh3aZb2d0Zk/FSXL+IT8zndKFvE
deP5kHtJZjcqXeuvzyqIzR3d2JVjj9AeJvfLvU1YFXrb/1Yj6fw4E7ZINRMS
Id1LTdixXpyZNY/uv5jwUj3LPh9mUfwB+/KdiQ==
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    
                    LineBox[{{938, -0.2543848330088704}, {
                    1876, -0.3016863009880677}, {2814, -0.3577741975069245}, {
                    3752, -0.3399691227493623}, {4690, -0.3846061020330748}, {
                    5628, -0.37857072271164993`}, {
                    6566, -0.37737974284684406`}, {
                    7504, -0.43081335405334975`}, {
                    8442, -0.4359047179302044}, {9380, -0.4334113435316755}, {
                    10318, -0.417466232693404}, {
                    11256, -0.43216546652658583`}, {
                    12194, -0.4342832339138191}, {
                    13132, -0.42093959662245506`}, {
                    14070, -0.43894382433036644`}, {
                    15008, -0.4189234548549053}, {
                    15946, -0.4336292980854896}, {
                    16884, -0.4113367918053113}, {
                    17822, -0.43484579228207104`}, {
                    18760, -0.44196276423856046`}}]}, {
                    AbsolutePointSize[3.], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{938, -0.2543848330088704}, {
                    1876, -0.3016863009880677}, {2814, -0.3577741975069245}, {
                    3752, -0.3399691227493623}, {4690, -0.3846061020330748}, {
                    5628, -0.37857072271164993`}, {
                    6566, -0.37737974284684406`}, {
                    7504, -0.43081335405334975`}, {
                    8442, -0.4359047179302044}, {9380, -0.4334113435316755}, {
                    10318, -0.417466232693404}, {
                    11256, -0.43216546652658583`}, {
                    12194, -0.4342832339138191}, {
                    13132, -0.42093959662245506`}, {
                    14070, -0.43894382433036644`}, {
                    15008, -0.4189234548549053}, {
                    15946, -0.4336292980854896}, {
                    16884, -0.4113367918053113}, {
                    17822, -0.43484579228207104`}, {
                    18760, -0.44196276423856046`}}]}}}, 
                  ImageSize -> {132, 82}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRange -> {{0, 18496}, {-1., 0.}},
                   GridLines -> {{1876, 3752, 5628, 7504, 9380, 11256, 13132, 
                    15008, 16884, 18760}, {{-1., 
                    GrayLevel[0.9]}, {-0.6989700043360187, 
                    GrayLevel[0.95]}, {-0.5228787452803375, 
                    GrayLevel[0.95]}, {-0.39794000867203755`, 
                    GrayLevel[0.95]}, {-0.30102999566398114`, 
                    GrayLevel[0.95]}, {-0.22184874961635626`, 
                    GrayLevel[0.95]}, {-0.1549019599857432, 
                    GrayLevel[0.95]}, {-0.09691001300805638, 
                    GrayLevel[0.95]}, {-0.04575749056067506, 
                    GrayLevel[0.95]}}}, PlotRangePadding -> {0, 
                    Scaled[0.05]}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"], 
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJwtzg1MzHEcx/ESs7pxoTXLRsks0eMyktVniJCkzHqS9LTSEWoWN1E4sqzQ
mvUwp3MpJaW66nL1r+6hq+uJSWseikO6zV8rw6yGvr//9t9/r72//9/35xCb
GpKwwMzMDP/e/9/5xzoWQcuSPc5Fv/Kb90ox0mb0Ii/eQC6Q4FfV0llvaTe5
JA8LD/KqJ7d15JACmBzdi2RzWvLwPYy8d7D27NOQI0pxOGmXTJ/BzEvRyhsf
Z0ypyR4yiOPvph06w5wmx34f41VfAXPjIxiqXeSJmV3kn5WoMU94+lbD7F0N
UYnt8sa3nWRxDe53Tyvu5JAvR9fCI9OFkwwzX6pD1CHf6JfWzNJnGM1UBW3W
dJA76lHqw8t3OLH+oQGKr3/SsypYt1BgcuR3kngf87omxKbMjtQFMPs3wzP3
4uKsQObEFkgl/YLacY58XQnXNYWJVhLmilak+ZTU548y65/DrcJKe+wK86QK
KR+jp3f2tpMF7TAK0rfb2ZNhy0F4zUvoVk7myjkEFa4SvTvB+pYOmMSvy9V7
Wdd1wMXBOFWYwHpYJ3QzcT4CdRv1iU4UjFsk8ULWz3fBq+xbRv47FXVLNYKb
g51qe2geRWoELJFY3jjFurMGY3ETisWDrLdqcPaF6vhdEev7tYjYYJVzqv85
9TdatLjb7AnnWRfpEHrAbOBmNeuzOvRWGhR1ZWTuVjeslUrhWWeax2o95pqz
Ixc6s16jhyFM29T1WUndrwdHvxS3Ne5m5w/0IDD9sHC3vJV6TC9SP3lXxTeR
ue+9uJC3sfHBerY/ywDHRSjR+7Lzl/Vh8kh+RnJtM/WyPkSFHy86XUz7OM9+
cJctNsGG/d/Vj8R03TXX1y3UQwewNgfnvniw+xkHEMTPPfyxlfbHbBvEjqns
4blc6tLsQZimQrYlLyGP9QwitGLGvzCQ5u1XDOFSwca2FRfp/JjIIZiHzWSZ
eLJUNoQGjOvsTpLHTEOQteROy6H0+wv9n3wb
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    LineBox[{{938, 0.2152}, {1876, 0.18760000000000002`}, {
                    2814, 0.16240000000000002`}, {3752, 0.1676}, {
                    4690, 0.1552}, {5628, 0.1572}, {6566, 0.1552}, {
                    7504, 0.1368}, {8442, 0.1336}, {9380, 0.1336}, {
                    10318, 0.13920000000000002`}, {
                    11256, 0.13520000000000001`}, {
                    12194, 0.13440000000000002`}, {13132, 0.1368}, {
                    14070, 0.134}, {15008, 0.14400000000000002`}, {
                    15946, 0.132}, {16884, 0.138}, {17822, 0.1348}, {
                    18760, 0.13240000000000002`}}]}, {
                    AbsolutePointSize[3.], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{938, 0.2152}, {1876, 0.18760000000000002`}, {
                    2814, 0.16240000000000002`}, {3752, 0.1676}, {
                    4690, 0.1552}, {5628, 0.1572}, {6566, 0.1552}, {
                    7504, 0.1368}, {8442, 0.1336}, {9380, 0.1336}, {
                    10318, 0.13920000000000002`}, {
                    11256, 0.13520000000000001`}, {
                    12194, 0.13440000000000002`}, {13132, 0.1368}, {
                    14070, 0.134}, {15008, 0.14400000000000002`}, {
                    15946, 0.132}, {16884, 0.138}, {17822, 0.1348}, {
                    18760, 0.13240000000000002`}}]}}}, ImageSize -> {132, 82},
                   Frame -> True, Axes -> None, AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, 
                  PlotRange -> {{0, 18496}, {0, 0.36727953250656126`}}, 
                  GridLines -> {{1876, 3752, 5628, 7504, 9380, 11256, 13132, 
                    15008, 16884, 18760}, {{0.05, 
                    GrayLevel[0.9]}, {0.1, 
                    GrayLevel[0.9]}, {0.15, 
                    GrayLevel[0.9]}, {0.2, 
                    GrayLevel[0.9]}, {0.25, 
                    GrayLevel[0.9]}, {0.3, 
                    GrayLevel[0.9]}, {0.35000000000000003`, 
                    GrayLevel[0.9]}, {0.4, 
                    GrayLevel[0.9]}}}, PlotRangePadding -> {{0, 0}, {
                    Scaled[0.01], 0}}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{1}}, "Rows" -> {{1, 0.1}}}]}}, BaselinePosition -> 
           Automatic, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 1}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetTrainResultsObject[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.755017583905262*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"37e5a1d7-398b-4d81-b222-7bee886ba385"]
}, Open  ]],

Cell["******************************", "Text",
 CellChangeTimes->{{3.755003720168571*^9, 
  3.755003723022996*^9}},ExpressionUUID->"4e4afe30-fd4d-44d6-82d1-\
93a0270d2db9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet2", " ", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{
    RowBox[{"NetExtract", "[", 
     RowBox[{
      RowBox[{"results2", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
      "\"\<net2\>\""}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", " ", "\[Rule]", " ", "mnistEncoder"}], ",", 
      " ", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", " ", "mnistDecoder"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.754996039338038*^9, 3.754996042534747*^9}, {
  3.75499635994106*^9, 3.7549964076008663`*^9}, {3.754996508971663*^9, 
  3.754996578005322*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"705dae28-815d-470f-b52c-7ce95717d35c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "6" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "InputDepth" -> 
                    1, "Dimensions" -> 10, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.754996376106083*^9, 3.7549964085170193`*^9}, 
   3.754996580354594*^9, 3.7550026069557943`*^9, 3.75500760319201*^9, 
   3.755011123354134*^9, 3.755017584351555*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"c14eb033-80ff-487c-9673-4efdb560ef87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedLenet", " ", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{
    RowBox[{"NetExtract", "[", 
     RowBox[{
      RowBox[{"results", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
      "\"\<lenet\>\""}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", " ", "\[Rule]", " ", "mnistEncoder"}], ",", 
      " ", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", " ", "mnistDecoder"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7549929133439493`*^9, 3.7549929166232967`*^9}, {
  3.754992962296088*^9, 3.754992977974093*^9}, {3.7549966306275187`*^9, 
  3.754996661188078*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"0d446b77-9170-4dcc-82d1-524e3ef32a03"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{50}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 20, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 800}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "InputDepth" -> 
                    1, "Dimensions" -> 10, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"50\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.754996642580422*^9, 3.754996662821979*^9}, 
   3.75500260704347*^9, 3.755007603294918*^9, 3.75501112343998*^9, 
   3.755017584803979*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"d3d7d772-96b9-4f13-a480-b3472dfbaa11"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"net2test", " ", "=", 
   RowBox[{"trainedNet2", "/@", " ", 
    RowBox[{"Keys", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"testData", ",", 
       RowBox[{"-", "7500"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7549967262377443`*^9, 3.754996796863433*^9}, {
  3.754996885875497*^9, 3.754996887455228*^9}, {3.754996997367628*^9, 
  3.7549970035878553`*^9}, {3.7549978287136173`*^9, 3.754997843018639*^9}, {
  3.754998570536167*^9, 3.75499860821745*^9}, {3.754998669328114*^9, 
  3.754998674694748*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"5acb5ca6-7dc4-4545-b4e1-0afe70ea98f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lenettest", " ", "=", 
   RowBox[{"trainedLenet", "/@", " ", 
    RowBox[{"Keys", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"testData", ",", " ", 
       RowBox[{"-", "7500"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.754996832450428*^9, 3.754996835390751*^9}, {
   3.754996888906495*^9, 3.75499689039079*^9}, {3.7549970059604807`*^9, 
   3.7549970122691383`*^9}, {3.754997854619246*^9, 3.754997859775823*^9}, {
   3.754998614771677*^9, 3.7549986410503607`*^9}, 3.754998672619759*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"fe0850c3-e720-405e-b24b-aaf015f12ca3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"groundtruth", " ", "=", 
   RowBox[{"Values", "[", 
    RowBox[{"Take", "[", 
     RowBox[{"testData", ",", " ", 
      RowBox[{"-", "7500"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.75499691005548*^9, 3.7549969177026453`*^9}, {
  3.7549970199864264`*^9, 3.754997024271967*^9}, {3.75499786896425*^9, 
  3.754997876874709*^9}, {3.754998661427383*^9, 3.754998680457906*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c1183cb4-3141-4cc3-b47b-639bebd87123"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net2Incorrests", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "\[NotEqual]", "0"}], ",", " ", "1", ",", " ", "0"}], 
      "]"}], " ", "&"}], " ", "/@", " ", 
    RowBox[{"(", 
     RowBox[{"net2test", "-", " ", "groundtruth"}], ")"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.75499791312608*^9, 3.7549980980698547`*^9}, {
  3.754998300913527*^9, 3.754998306899272*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"2f941668-3e8d-4c24-823f-061c3c6c3dad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lenetIncorrects", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "\[NotEqual]", "0"}], ",", " ", "1", ",", " ", "0"}], 
      "]"}], " ", "&"}], " ", "/@", " ", 
    RowBox[{"(", 
     RowBox[{"lenettest", "-", " ", "groundtruth"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7549981150493603`*^9, 3.7549981342478848`*^9}, {
  3.754998316177445*^9, 3.754998325116839*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"836c589b-d721-4f0c-8833-2b3c738b562a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net2CanHelps", " ", "=", 
  RowBox[{"Fold", "[", 
   RowBox[{"Plus", ",", "0", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "\[Equal]", 
         RowBox[{"-", "1"}]}], ",", " ", "1", ",", " ", "0"}], "]"}], " ", 
      "&"}], " ", "/@", 
     RowBox[{"(", 
      RowBox[{"net2Incorrests", " ", "-", " ", "lenetIncorrects"}], ")"}]}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.754997065920597*^9, 3.7549970758088217`*^9}, {
   3.7549971810390387`*^9, 3.754997288215028*^9}, 3.7549973690588703`*^9, {
   3.754997452736455*^9, 3.754997477936648*^9}, {3.754997540792762*^9, 
   3.7549976109599037`*^9}, {3.754997674433631*^9, 3.754997727805501*^9}, {
   3.754998153726577*^9, 3.754998158665434*^9}, {3.754998192717465*^9, 
   3.754998272980948*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"01022081-1cb6-4946-928b-1fa552e41ba1"],

Cell[BoxData["209"], "Output",
 CellChangeTimes->{
  3.7549976115620823`*^9, {3.754997693280965*^9, 3.754997729593751*^9}, 
   3.754998159438457*^9, {3.754998247056445*^9, 3.75499827416253*^9}, 
   3.754998329338997*^9, 3.7549986984364767`*^9, 3.755002613042951*^9, 
   3.7550076091086187`*^9, 3.755011129377462*^9, 3.7550175914419527`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ec99f375-8803-4e19-85d5-618c0e35955d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenetCanHelps", " ", "=", 
  RowBox[{"Fold", "[", 
   RowBox[{"Plus", ",", "0", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", "\[Equal]", "1"}], ",", " ", "1", ",", " ", "0"}], "]"}],
       " ", "&"}], " ", "/@", 
     RowBox[{"(", 
      RowBox[{"net2Incorrests", " ", "-", " ", "lenetIncorrects"}], ")"}]}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.754998284227065*^9, 3.754998291204255*^9}, {
  3.7549984672919188`*^9, 3.754998468316424*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"98c464b3-7de1-4f4b-9a30-d84342ca9374"],

Cell[BoxData["486"], "Output",
 CellChangeTimes->{3.7549982931024446`*^9, 3.754998331949534*^9, 
  3.754998472518498*^9, 3.754998700624071*^9, 3.755002613127804*^9, 
  3.755007609215036*^9, 3.75501112947996*^9, 3.755017591800313*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"8e3c775d-5a3e-40c5-97e4-e56f19c13efc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Fold", "[", 
    RowBox[{"Plus", ",", " ", "0", ",", " ", "lenetIncorrects"}], "]"}], " ", 
   "*", 
   RowBox[{"100", "/", "7500"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.754998379447021*^9, 3.754998424857821*^9}, {
  3.754998799002215*^9, 3.754998810463415*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e79560f6-53d6-4be3-bfde-7fbf9ba17302"],

Cell[BoxData["8.373333333333333`"], "Output",
 CellChangeTimes->{3.754998425666087*^9, 3.754998703633463*^9, 
  3.754998812923958*^9, 3.755002613216711*^9, 3.755007609370899*^9, 
  3.755011129580474*^9, 3.755017592198205*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"72bc29ec-ed66-4367-83b6-52a195b1bc18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Fold", "[", 
      RowBox[{"Plus", ",", " ", "0", ",", " ", "lenetIncorrects"}], "]"}], 
     " ", "-", " ", "net2CanHelps"}], ")"}], " ", "*", 
   RowBox[{"100", "/", " ", "7500"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.75499848380529*^9, 3.754998491319846*^9}, {
  3.75499881852037*^9, 3.754998819434523*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"a5b41950-e6b4-4ca2-89fe-77d5f91fd512"],

Cell[BoxData["5.586666666666667`"], "Output",
 CellChangeTimes->{3.754998493610145*^9, 3.754998706004541*^9, 
  3.75499882204353*^9, 3.755002613315276*^9, 3.755007609628563*^9, 
  3.755011129668462*^9, 3.7550175925962677`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"be602bd1-0035-445f-8779-559b7d1c9236"]
}, Open  ]],

Cell["*****************************************", "Text",
 CellChangeTimes->{{3.7549998632466*^9, 
  3.754999867027049*^9}},ExpressionUUID->"04bb010e-ca81-4758-97e0-\
16af3c05de1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compositeNet", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<net2\>\"", "\[Rule]", "trainedNet2"}], ",", 
      RowBox[{"\"\<lenet\>\"", "\[Rule]", "trainedLenet"}], ",", 
      RowBox[{"\"\<max\>\"", "\[Rule]", 
       RowBox[{"ThreadingLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"0.3", "#1"}], "+", 
          RowBox[{"0.7", "#2"}]}], "&"}], "]"}]}]}], "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<net2\>\""}], ",", " ", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<lenet\>\""}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<net2\>\"", ",", "\"\<Output\>\""}], "]"}], ",", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<lenet\>\"", ",", "\"\<Output\>\""}], "]"}]}], "}"}], 
       "\[Rule]", "\"\<max\>\""}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7549998740067673`*^9, 3.755000035258099*^9}, {
  3.75500007000163*^9, 3.755000093660677*^9}, {3.755000655243348*^9, 
  3.755000701327149*^9}, {3.755000829628871*^9, 3.75500091301054*^9}, {
  3.755000952695249*^9, 3.755001031374236*^9}, {3.755001485516309*^9, 
  3.755001486032329*^9}, {3.755001707962228*^9, 3.75500170898283*^9}, {
  3.75500175023944*^9, 3.7550017766097927`*^9}, {3.755001829131589*^9, 
  3.755001857524725*^9}, {3.755001888476952*^9, 3.755001892286501*^9}, {
  3.7550196570614843`*^9, 3.755019775279986*^9}, {3.755019809158494*^9, 
  3.755019839023429*^9}, {3.755019888449936*^9, 3.755019891118518*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"8c144e30-0c4a-476e-811e-fec95ade81c1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"lenet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["lenet", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[12]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.0000000000000002`}], 
                    Offset[{12, 12}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"net2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["net2", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], "+", 
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["max", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Shallow[0.3 # + 0.7 #2& , {4, 3}], "Inputs" -> {10, 10}]],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"lenet\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"net2\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"max\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-3., 1.0000000000000002`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 102.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "lenet"], 
                    NeuralNetworks`NetPath["Nodes", "net2"], 
                    NeuralNetworks`NetPath["Nodes", "max"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    Association[
                    "net2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {512}, "$OutputSize" -> 
                    512, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {128}, "$OutputSize" -> 
                    128, "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "lenet" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 20, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, "$InputSize" -> {\
28, 28}, "$OutputSize" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{50}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 50, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 800}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {500}, "$OutputSize" -> 
                    500, "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "max" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[5], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Times, 0.7, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[5] -> {Plus, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    NeuralNetworks`Private`ScalarSymbol[4]}]]]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.755000110193088*^9, 3.7550007035063753`*^9, 3.755000840564289*^9, {
   3.755000894347302*^9, 3.755000915476665*^9}, {3.7550009587283697`*^9, 
   3.75500103431142*^9}, 3.7550014882632732`*^9, 3.755001523752576*^9, 
   3.7550017112886*^9, 3.7550017870684233`*^9, {3.755001834004883*^9, 
   3.755001860481029*^9}, 3.7550018943087873`*^9, 3.755002613411677*^9, 
   3.755007609802842*^9, 3.7550111297661867`*^9, 3.755017593091137*^9, {
   3.755019662601027*^9, 3.755019714476098*^9}, 3.755019746771967*^9, {
   3.755019792777973*^9, 3.7550198140289707`*^9}, {3.755019872153754*^9, 
   3.755019892792286*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"348513f0-353e-4866-85d2-26bbdcaeac8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compositeNetwithencdec", " ", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{"compositeNet", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", " ", "\[Rule]", " ", "mnistEncoder"}], ",", 
      " ", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", " ", "mnistDecoder"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.755001056193027*^9, 3.755001080482263*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"614d0bd2-033f-4296-8d3d-11197e7d9c3e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"lenet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["lenet", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[12]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.0000000000000002`}], 
                    Offset[{12, 12}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"net2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["net2", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"max\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], "+", 
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["max", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[
                    Shallow[0.3 # + 0.7 #2& , {4, 3}], "Inputs" -> {10, 10}]],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"lenet\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"net2\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"max\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-3., 1.0000000000000002`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 102.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "lenet"], 
                    NeuralNetworks`NetPath["Nodes", "net2"], 
                    NeuralNetworks`NetPath["Nodes", "max"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "InputDepth" -> 
                    1, "Dimensions" -> 10, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    Association[
                    "net2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {512}, "$OutputSize" -> 
                    512, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {128}, "$OutputSize" -> 
                    128, "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "lenet" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 20, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{50}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 50, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 800}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {500}, "$OutputSize" -> 
                    500, "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "max" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1], 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[5], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Times, 0.7, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[5] -> {Plus, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    NeuralNetworks`Private`ScalarSymbol[4]}]]]], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7550010838188343`*^9, 3.7550014907681427`*^9, 3.7550017132616463`*^9, 
   3.755001789822234*^9, {3.755001836003145*^9, 3.7550018623186607`*^9}, 
   3.755001897053549*^9, 3.7550026136581306`*^9, 3.755007610006209*^9, 
   3.755011129903311*^9, 3.75501759364174*^9, {3.755019665162395*^9, 
   3.755019716350215*^9}, 3.755019749032866*^9, {3.755019795955799*^9, 
   3.75501981628196*^9}, {3.755019874484558*^9, 3.7550198943481607`*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"57f89922-6e50-45ab-a8b0-55b5ae7a3731"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"comptest", " ", "=", 
   RowBox[{"compositeNetwithencdec", "/@", " ", 
    RowBox[{"Keys", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"testData", ",", 
       RowBox[{"-", "7500"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7550011348953857`*^9, 3.7550011432836037`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"bfb0083b-e936-4138-9629-8f2cceb3e3bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"compIncorrests", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "\[NotEqual]", "0"}], ",", " ", "1", ",", " ", "0"}], 
      "]"}], " ", "&"}], " ", "/@", " ", 
    RowBox[{"(", 
     RowBox[{"comptest", "-", " ", "groundtruth"}], ")"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.755001165004312*^9, 3.75500117137665*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"bbcc2635-509f-4eb1-be6e-556c72a3db73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Fold", "[", 
    RowBox[{"Plus", ",", " ", "0", ",", " ", "compIncorrests"}], "]"}], " ", 
   "*", 
   RowBox[{"100", "/", "7500"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{3.755001195654014*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"1e33217e-9ae9-4dc0-89bb-e8bc210fc0a7"],

Cell[BoxData["7.906666666666666`"], "Output",
 CellChangeTimes->{
  3.755001198316556*^9, {3.755001501914489*^9, 3.755001504087104*^9}, 
   3.755001726670293*^9, 3.755001803366248*^9, {3.755001845857997*^9, 
   3.755001872395208*^9}, 3.755001904083411*^9, 3.755002619027487*^9, 
   3.7550076150412827`*^9, 3.7550111353524647`*^9, 3.7550175993469467`*^9, {
   3.755019676041559*^9, 3.7550197240506687`*^9}, 3.755019756325489*^9, {
   3.7550198042101*^9, 3.7550198230763597`*^9}, {3.755019885570621*^9, 
   3.755019901081859*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"4b487f7c-9b0e-4cfd-9593-de61910ee587"]
}, Open  ]],

Cell["*************************************************", "Text",
 CellChangeTimes->{{3.755002654390129*^9, 
  3.755002658841016*^9}},ExpressionUUID->"6360c352-af01-43bc-849c-\
bbd54b4db08a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compLayer", " ", "=", 
  RowBox[{"NetInitialize", "[", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DropoutLayer", "[", "]"}], ",", 
       RowBox[{"LinearLayer", "[", "10", "]"}], ",", " ", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", " ", "20"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.755002864251356*^9, 3.7550029080838747`*^9}, {
  3.7550029635557528`*^9, 3.755002967116143*^9}, {3.7550034563471937`*^9, 
  3.7550035351148977`*^9}, {3.7550050062805862`*^9, 3.755005034519206*^9}, {
  3.755005614118802*^9, 3.755005619040601*^9}, {3.755005718253725*^9, 
  3.7550057214755898`*^9}, {3.755008142876203*^9, 3.755008179179349*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"1088b6bc-ba54-487c-8976-bcf293e1558e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.755002889785027*^9, 3.7550029086739388`*^9}, 
   3.755002970722789*^9, {3.755003492723542*^9, 3.755003536544569*^9}, 
   3.755005036831709*^9, 3.755005622220724*^9, 3.755005724684074*^9, 
   3.755007615136204*^9, 3.755008181624893*^9, 3.755011135468964*^9, 
   3.7550175997451363`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"d98f64a1-e5fc-46c7-b15b-5334a9347de4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compositeLearningNet", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<net2\>\"", "\[Rule]", "trainedNet2"}], ",", 
      RowBox[{"\"\<lenet\>\"", "\[Rule]", "trainedLenet"}], ",", 
      RowBox[{"\"\<catenate\>\"", "\[Rule]", 
       RowBox[{"CatenateLayer", "[", "]"}]}], ",", 
      RowBox[{"\"\<comp\>\"", "\[Rule]", "compLayer"}]}], "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<net2\>\""}], ",", " ", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       "\"\<lenet\>\""}], ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<net2\>\"", ",", "\"\<Output\>\""}], "]"}], ",", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<lenet\>\"", ",", "\"\<Output\>\""}], "]"}]}], "}"}], 
       "\[Rule]", "\"\<catenate\>\""}], ",", " ", 
      RowBox[{
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<catenate\>\"", ",", "\"\<Output\>\""}], "]"}], "->", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<comp\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7550026886721277`*^9, 3.755002690918803*^9}, {
   3.755002800446083*^9, 3.755002809863929*^9}, 3.755002977125998*^9, {
   3.755003026882513*^9, 3.7550030276571283`*^9}, {3.75500354975836*^9, 
   3.755003697378111*^9}, {3.755003821787257*^9, 3.755003826834153*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"270df649-64b3-4dfc-a13d-970cbd760a47"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 2.4492935982947064`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{12, 12}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-3., 
                    1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"lenet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["lenet", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[12]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., 1.0000000000000002`}], 
                    Offset[{12, 12}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"net2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["net2", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"C\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"catenate\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["catenate", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer["Inputs" -> {10, 10}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-0.9999999999999999, 1.}], 
                    Offset[{12, 12}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"comp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["comp", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 2.4492935982947064`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"lenet\"", TraditionalForm], 
                    Offset[{0, -15}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"net2\"", TraditionalForm], 
                    Offset[{0, -15}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"catenate\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"comp\"", TraditionalForm], 
                    Offset[{0, -15}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"20\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-3., 
                    1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-4., 1.0000000000000002`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {276., 102.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "lenet"], 
                    NeuralNetworks`NetPath["Nodes", "net2"], 
                    NeuralNetworks`NetPath["Nodes", "catenate"], 
                    NeuralNetworks`NetPath["Nodes", "comp"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    Association[
                    "net2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {512}, "$OutputSize" -> 
                    512, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {128}, "$OutputSize" -> 
                    128, "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "lenet" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 20, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {24, 24}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{50}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 50, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 800}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {500}, "$OutputSize" -> 
                    500, "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "catenate" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]]], "comp" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 20, "$InputDimensions" -> {20}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7550030365571203`*^9, {3.755003649477319*^9, 3.755003700561326*^9}, 
   3.755003829184317*^9, 3.755005042785269*^9, 3.755005625479363*^9, 
   3.755005737271099*^9, 3.755007615246913*^9, 3.755008184031514*^9, 
   3.7550111355685883`*^9, 3.75501760019803*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"1f5c224b-f6b1-4403-8c45-e40972481366"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compositeTrainingNet", " ", "=", " ", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<compNet\>\"", "\[Rule]", "compositeLearningNet"}], ",", 
      RowBox[{"\"\<loss\>\"", "\[Rule]", 
       RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}]}], 
     "|>"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
       RowBox[{"\"\<compNet\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<loss\>\"", ",", "\"\<Input\>\""}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}], "\[Rule]", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<loss\>\"", ",", "\"\<Target\>\""}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7550038377444344`*^9, 3.755003897957418*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"d064752b-1ef4-464d-9a4c-766a32c88cb6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 1.}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    0.6}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3., 1.8369701987210297`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-2., 1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"compNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["compNet", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[4], 
                    Skeleton[6]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.9333333333333333, 0.5133333333333334, 
                    0.5133333333333334]], 
                    EdgeForm[
                    Hue[0, 0.7, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"CE\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CrossEntropyLossLayer", "[", 
                    RowBox[{"\"Index\"", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "10"}], ",", 
                    RowBox[{"\"Target\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Restricted", "[", 
                    RowBox[{"\"Integer\"", ",", "10"}], "]"}], "}"}]}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["loss", Bold], 
                    Style[
                    HoldForm[
                    CrossEntropyLossLayer["Index", "Input" -> 10, "Target" -> {
                    Restricted["Integer", 10]}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-3., 1.8369701987210297`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"compNet\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"loss\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-1.4, 
                    0.6}], {0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    SubscriptBox["\"\[DoubleStruckCapitalN]\"", "10"], 
                    TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-0.9999999999999999, 
                    1.}, {-2., 1.0000000000000002`}, {6.123233995736766*^-17, 
                    1.}}, NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {221., 102.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "compNet"], 
                    NeuralNetworks`NetPath["Nodes", "loss"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[10]]], 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], 
                    Association[
                    "compNet" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "net2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> -1],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "lenet" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 1, 
                    "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{50}]], 
                    "Parameters" -> Association[
                    "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 20, 
                    "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association["Type" -> "Pooling", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association["Type" -> "Flatten", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 800}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> Association[
                    "OutputDimensions" -> {500}, "$OutputSize" -> 500, 
                    "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "catenate" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]]], "comp" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association["1" -> 
                    Association["Type" -> "Dropout", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association["Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 20, "$InputDimensions" -> {20}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "3" -> 
                    Association["Type" -> "Softmax", "Arrays" -> 
                    Association[], "Parameters" -> Association["Level" -> -1],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "lenet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "net2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "catenate", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "net2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "catenate", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "lenet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "comp", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "catenate", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "comp", "Outputs", "Output"]}], "loss" -> 
                    Association[
                    "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "TargetForm" -> "Index", "$InputDimensions" -> {}, 
                    "$Classes" -> 10], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[10]]], "Outputs" -> 
                    Association[
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Loss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"index\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"range\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"1", "\"..\"", "10"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.755003888586214*^9, 3.755003899727871*^9}, 
   3.755005046866791*^9, 3.755005627091976*^9, 3.755005739989292*^9, 
   3.755007615347872*^9, 3.755008186543828*^9, 3.755011135686386*^9, 
   3.755017600791492*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"dcf759db-812f-4df5-a82f-3c7848a2c37b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"compTrainingResults", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"compositeTrainingNet", ",", "trainAssoc", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validationAssoc"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "10"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7550037407117434`*^9, 3.755003759017807*^9}, 
   3.755003912219165*^9, {3.755005053933823*^9, 3.755005055190023*^9}, {
   3.7550056304148684`*^9, 3.755005630806428*^9}, {3.755008687424768*^9, 
   3.755008694726727*^9}, {3.755009942970009*^9, 3.7550099472962093`*^9}, 
   3.755009985635345*^9, {3.7550101406234283`*^9, 3.75501014356448*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"e23abd49-5294-4357-b886-2c3e0c5fced7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetTrainResultsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Total training time\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"8.6 min\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total rounds\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["10", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total batches\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["9380", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Batch size\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["64", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Method\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["\"ADAM\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Final round loss\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], 
                StyleBox["0.7702931679963967`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation loss\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["0.3646762761123479`", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final round error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"29.2%\"", "SummaryItem"]}, {
                StyleBox[
                 
                 TemplateBox[{"\"Final validation error\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"10.3%\"", "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8}}, "Rows" -> {{0.7}}}], 
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Loss evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox[
                 
                 TemplateBox[{"\"Error evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"]}, {
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJwtzH8s1HEcx/HbkdJorUKoqKn7I221Yvyhe1FZCjtapc5CaZ2aqE70Q5KW
00J+T0mno7swd+d+uOPcj5bQ+nFIZcqvilU2NvmjjH7c+/vZPvvssef7815/
PCX6JJvFYuHf/f/ajnc0BB+lSQLvt1ybt57Bh/EMe6v4DVl2EUbvvIPPNd1k
XRaOrNSeOxvVQU68iWuz1rREmYU8KcI6KU+/PcNEFuZDxWOL+EIDeeEuJqu7
ijf56skhJdjiJdLuc9GRb5VBkl2XyVqiIb+oQG7iLgehQE1edg/xuf2l4UtV
5OgqxAR7cOZ1zeTyavhypybnDQpyshisHP2B8ZgGcmENVg3z2GFGpisfYdG1
Rqk8lel9EsR5zSQHucjIs7UQdcVZ0w7Ukt0eo2fkR3U6n3GgFN/bTy+svlRH
5suwvKjE+HNaQs58Atc/QfyxImb+YT1We4xWuu5+QLY0IMuht4efUE7+3IjY
3qrZ418LyYuakPe8cEgalUfmyPFh4k7waITI5us+CrxNTUh9pi4jaxRwyvLd
We6eYLI5VImxyIbgstIM8nslBq+v48Z75pAFzXDmvTgTE1JA/tWMjQ9T7Ke2
3SffViGp2O2CPrOY7KmGC08ZMLSmktyoxlVdY0VNvIQcpMGXdPfzVjnj1xqE
P77A9RHWkeO0eHV4z5hLp4w8rYU2ncM/eayJnN2Cxafeve7bXU9eocMV3uEc
eYCcLNGBN9IxrNzGeIceOQMho+MNzP8OPW74iT3YXKYfaoVzp5/9lExBnmhF
jUDlOpDAOKMNRZFODtlPm8mOBrw8WmlX4K8h3zMgT+ET4F/FeHM7zLedE9mx
WrKhHYXiuvwTbS3kCCMcuqKEod1q8pARc6nWcI9SZj7FhBn/nnG/wFabwTJj
/3a3R2USo83mvWYMdL/8/cbeQL3IjOSgweCCpjbqA2a481H7aS8ZGywQP1ni
HcahfebTFnx0tOOx1CbqKgvyFyb+fLtspj5nwXTbjbXD/QbTX14BdQ0=
                    
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    
                    LineBox[{{938, 0.003958793756323451}, {
                    1876, -0.12151291645622408`}, {
                    2814, -0.18297187202777487`}, {
                    3752, -0.23050932389905276`}, {
                    4690, -0.27676848708022495`}, {
                    5628, -0.31861889962809875`}, {
                    6566, -0.3634429356212207}, {7504, -0.3726979196677855}, {
                    8442, -0.42213698211513306`}, {
                    9380, -0.43809248864295947`}}]}, {
                    AbsolutePointSize[3.5], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{938, 0.003958793756323451}, {
                    1876, -0.12151291645622408`}, {
                    2814, -0.18297187202777487`}, {
                    3752, -0.23050932389905276`}, {
                    4690, -0.27676848708022495`}, {
                    5628, -0.31861889962809875`}, {
                    6566, -0.3634429356212207}, {7504, -0.3726979196677855}, {
                    8442, -0.42213698211513306`}, {
                    9380, -0.43809248864295947`}}]}}}, ImageSize -> {132, 82},
                   Frame -> True, Axes -> None, AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, 
                  PlotRange -> {{0, 9280}, {-0.6, 0.4}}, 
                  GridLines -> {{938, 1876, 2814, 3752, 4690, 5628, 6566, 
                    7504, 8442, 9380}, {{-1., 
                    GrayLevel[0.9]}, {0., 
                    GrayLevel[0.9]}, {-0.6989700043360187, 
                    GrayLevel[0.95]}, {-0.5228787452803375, 
                    GrayLevel[0.95]}, {-0.39794000867203755`, 
                    GrayLevel[0.95]}, {-0.30102999566398114`, 
                    GrayLevel[0.95]}, {-0.22184874961635626`, 
                    GrayLevel[0.95]}, {-0.1549019599857432, 
                    GrayLevel[0.95]}, {-0.09691001300805638, 
                    GrayLevel[0.95]}, {-0.04575749056067506, 
                    GrayLevel[0.95]}, {0.30102999566398114`, 
                    GrayLevel[0.95]}, {0.47712125471966244`, 
                    GrayLevel[0.95]}, {0.6020599913279623, 
                    GrayLevel[0.95]}, {0.6989700043360187, 
                    GrayLevel[0.95]}, {0.7781512503836435, 
                    GrayLevel[0.95]}, {0.8450980400142567, 
                    GrayLevel[0.95]}, {0.9030899869919434, 
                    GrayLevel[0.95]}, {0.9542425094393249, 
                    GrayLevel[0.95]}}}, PlotRangePadding -> {0, 
                    Scaled[0.05]}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"], 
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJwtzA0s1HEcx/GL3VqrjFSWFB2VxfSwim7i05Muo9oZNnrQAxlyCWVaaEnS
o+QpkXByHnJ0h4v4Xx7WGM1D5CGsm67GxsJKKZXf97f99ttr7+/3t+60ROyr
w+Px8O/+f+ePmRh/RkJzthz+7DjvLYEY9OtKi9QMMxdcQoF461F+yRBzVTQm
tu07ZWpNPhuLyiiv0jexg8xj8ZBpv+24KCCH3UWGa+CCmMPkPw9gGXRQOupG
3puEkk/R4gR7clwyZAXD7fy5j8zNqci8XX6voZ6s9xjxc7dGWw1pXvwExmcP
eEk7qKdkwdlMtPh4Nfl8NhrefK+3+jHAfP8ZnAMOCXW11MtyIA/p0WnPJnfm
osX7RthELXk6D+lrc/N8h2nfKB8hzYmKGA1513OMHhmOnHWmee8CNBUnOax5
RP2qDA47LQ9aK8lPC3G97sR4xv1+ZnURCoXH3oVsImuKcYe/T2VS2MfMfwFf
Ha3guCX1jaVYqaj8adbCeoyFHI6i2kiXANZjlHKc/u4vtRJSdyrDmEryNlbV
y9xTBvehyVuzEWT/cnD2/EZh3QfmmXIsbVEs9FpPTniJbcbNAxuiyasVODPY
F+cuJhcr0BqsP90d0MO8Wwm5LCQwwpbcpkRmeFDcnkjyyQpwcnNT5ybyRAXa
ZvJ9bpqQr1ViytcuvSiKvKwKOpcb1I5t3cy5VdD9mpolWEV9uwolwvjG5hnq
jSoYWO43NVORPV7BbuvU3eBf75m1rwC9gS9DUnJENTxERulZK8iLaiBqHLui
Se5iflwDW7dQJ54P2eo1xlOiNuacI9e8hsmDkc1KXbJrLcz7q/vDpeTBWigt
PB/aTXYyS+rgWWdzYW4DM3gc3B0M5rqyOubNiTgkG2Z4an4zI5HD+HSJRCuj
3stBJTKfsOKoC9SQVM1KUnTZf1yAGsbX05e0h1J/qYafjcuMUI/2f6mxvMFC
P03Q6fgXSPp13Q==
                    "]]}, {}}, {{
                    Hue[0.59, 0.5, 0.9], 
                    LineBox[{{938, 0.20720000000000002`}, {1876, 0.2088}, {
                    2814, 0.19440000000000002`}, {3752, 0.1824}, {
                    4690, 0.108}, {5628, 0.1164}, {
                    6566, 0.11040000000000001`}, {7504, 0.1192}, {
                    8442, 0.11080000000000001`}, {9380, 0.1032}}]}, {
                    AbsolutePointSize[3.5], 
                    Hue[0.59, 0.5, 0.76], 
                    
                    PointBox[{{938, 0.20720000000000002`}, {1876, 0.2088}, {
                    2814, 0.19440000000000002`}, {3752, 0.1824}, {
                    4690, 0.108}, {5628, 0.1164}, {
                    6566, 0.11040000000000001`}, {7504, 0.1192}, {
                    8442, 0.11080000000000001`}, {9380, 0.1032}}]}}}, 
                  ImageSize -> {132, 82}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, 
                  PlotRange -> {{0, 9280}, {0, 0.7667491426654178}}, 
                  GridLines -> {{938, 1876, 2814, 3752, 4690, 5628, 6566, 
                    7504, 8442, 9380}, {{0.2, 
                    GrayLevel[0.9]}, {0.4, 
                    GrayLevel[0.9]}, {0.6, 
                    GrayLevel[0.9]}, {0.8, 
                    GrayLevel[0.9]}, {1., 
                    GrayLevel[0.9]}}}, PlotRangePadding -> {{0, 0}, {
                    Scaled[0.01], 0}}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{1}}, "Rows" -> {{1, 0.1}}}]}}, BaselinePosition -> 
           Automatic, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 1}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetTrainResultsObject[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.755003771428646*^9, 3.755004804736555*^9, 
  3.755005278225195*^9, 3.7550057134681263`*^9, 3.755006176050453*^9, 
  3.755008051690867*^9, 3.755008633683515*^9, 3.755009983097323*^9, 
  3.7550101289684887`*^9, 3.755011565954664*^9, 3.755018122251402*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"e27a4394-a520-49c5-be06-54f37ba89596"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedCompNet", " ", "=", 
  RowBox[{"NetReplacePart", "[", 
   RowBox[{
    RowBox[{"NetExtract", "[", 
     RowBox[{
      RowBox[{"compTrainingResults", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
      "\"\<compNet\>\""}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", " ", "\[Rule]", " ", "mnistEncoder"}], ",", 
      " ", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", " ", "mnistDecoder"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.75500483625075*^9, 3.755004867217299*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"63020619-48a5-460f-aa72-8e6447381d98"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.3999999999999999, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 2.4492935982947064`*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{12, 12}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"lenet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["lenet", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[12]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., 1.0000000000000002`}], 
                    Offset[{12, 12}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"net2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["net2", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox["\"C\"", 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"catenate\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"CatenateLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "10"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["catenate", Bold], 
                    Style[
                    HoldForm[
                    CatenateLayer["Inputs" -> {10, 10}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-0.9999999999999999, 1.}], 
                    Offset[{12, 12}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"comp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["comp", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[3]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-4., 2.4492935982947064`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox["\"lenet\"", 
                    Offset[{0, -15}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"net2\"", 
                    Offset[{0, -15}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"catenate\"", 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"comp\"", 
                    Offset[{0, -15}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"20\""}, 
                    "RowWithSeparators"], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"10\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, StripOnInput -> False, FontSize -> 
                    8, FontWeight -> "Thin", FontColor -> GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-3., 
                    1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-4., 1.0000000000000002`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 28.}, {29., 18.}}, 
                    ImageSize -> {276., 102.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "lenet"], 
                    NeuralNetworks`NetPath["Nodes", "net2"], 
                    NeuralNetworks`NetPath["Nodes", "catenate"], 
                    NeuralNetworks`NetPath["Nodes", "comp"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, "InputDepth" -> 
                    1, "Dimensions" -> 10, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    Association[
                    "net2" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 784}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {512}, "$OutputSize" -> 
                    512, "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {128}, "$OutputSize" -> 
                    128, "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 128}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 128, "$InputDimensions" -> {128}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "lenet" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{20}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 20, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, "$InputSize" -> {\
28, 28}, "$OutputSize" -> {24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{50}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 50, 
                    "KernelSize" -> {5, 5}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 50, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 800}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {500}, "$OutputSize" -> 
                    500, "$InputSize" -> 800, "$InputDimensions" -> {800}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{800}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "12" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]], "catenate" -> 
                    Association[
                    "Type" -> "Catenate", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> 1], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]]], "comp" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association["OutputDimensions" -> {10}, "$OutputSize" -> 
                    10, "$InputSize" -> 20, "$InputDimensions" -> {20}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {168., {12.6669921875, 17.8330078125}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.755004870558363*^9, 3.755005308345828*^9, 3.755006192501401*^9, 
   3.755008051838468*^9, {3.7550086400243883`*^9, 3.7550086459874477`*^9}, 
   3.755011566135108*^9, 3.755018122757238*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"7d756ada-ac1a-421f-ba33-af5677d2d1ee"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedcomptest", " ", "=", 
   RowBox[{"trainedCompNet", "/@", " ", 
    RowBox[{"Keys", "[", 
     RowBox[{"Take", "[", 
      RowBox[{"testData", ",", 
       RowBox[{"-", "7500"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7550048961783752`*^9, {3.755004935708952*^9, 3.755004937125242*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"999ea873-6556-4c15-aaa1-4c7e62cce550"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedcompIncorrests", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "\[NotEqual]", "0"}], ",", " ", "1", ",", " ", "0"}], 
      "]"}], " ", "&"}], " ", "/@", " ", 
    RowBox[{"(", 
     RowBox[{"trainedcomptest", "-", " ", "groundtruth"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.755004942686694*^9, 3.755004946607476*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"bdd32fb8-03d1-460e-82ea-180667d8295d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Fold", "[", 
    RowBox[{"Plus", ",", " ", "0", ",", " ", "trainedcompIncorrests"}], "]"}],
    " ", "*", 
   RowBox[{"100", "/", "7500"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{3.755004967226293*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"6ad4ad24-df05-491d-b7d5-d45f5482d736"],

Cell[BoxData["9.493333333333334`"], "Output",
 CellChangeTimes->{3.755004968846634*^9, 3.755005317964113*^9, 
  3.7550062012692137`*^9, 3.755008056969227*^9, 3.755008658009549*^9, 
  3.75501157112227*^9, 3.755018128856574*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"b6367e4d-98ce-4731-bbb5-f0dca3e03f2c"]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 644, 14, 52, "Input",ExpressionUUID->"47c22f41-5950-49e5-a7a0-03c98cf7a033"],
Cell[1205, 36, 308, 6, 30, "Input",ExpressionUUID->"a0319113-24c8-46cb-9d42-d6cbbf99a2a4"],
Cell[CellGroupData[{
Cell[1538, 46, 436, 10, 30, "Input",ExpressionUUID->"5cd401c7-18c0-4a17-af22-f565de7b20b0"],
Cell[1977, 58, 3539, 79, 134, "Output",ExpressionUUID->"f9a7ff67-3098-4f2b-8ee4-950bf21e3976"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5553, 142, 368, 8, 30, "Input",ExpressionUUID->"7fe5356d-52c6-4a11-b6bb-95551d7aa285"],
Cell[5924, 152, 2584, 58, 91, "Output",ExpressionUUID->"23186443-8d1a-406a-82f6-a5277340c8b0"]
}, Open  ]],
Cell[8523, 213, 170, 2, 30, "Input",ExpressionUUID->"444194f5-1b1b-4ac6-8a0b-fee974fef16e"],
Cell[CellGroupData[{
Cell[8718, 219, 1267, 27, 73, "Input",ExpressionUUID->"39abffc4-71f7-4219-857a-019bbdd07c61"],
Cell[9988, 248, 43501, 878, 75, "Output",ExpressionUUID->"951cba2b-38e5-4bc6-a299-6d4996d5a380"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53526, 1131, 254, 4, 30, "Input",ExpressionUUID->"a952d061-b077-45e9-98d3-5ae3db7bd9e2"],
Cell[53783, 1137, 42589, 855, 75, "Output",ExpressionUUID->"f49c46dd-e458-4082-8a33-59c84694294c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96409, 1997, 936, 23, 52, "Input",ExpressionUUID->"51fab5bf-742b-421d-8891-5fa76de46f98"],
Cell[97348, 2022, 44667, 873, 75, "Output",ExpressionUUID->"025e90e0-18ec-49d7-87cf-9f82f7e0dea7"]
}, Open  ]],
Cell[142030, 2898, 806, 22, 52, "Input",ExpressionUUID->"f7abf523-360c-4bac-8bbe-4f283285a042"],
Cell[142839, 2922, 508, 12, 30, "Input",ExpressionUUID->"65cdbf70-936d-4c03-b2f0-8f050ebdcf47"],
Cell[CellGroupData[{
Cell[143372, 2938, 601, 10, 30, "Input",ExpressionUUID->"7e23fee1-ae06-4104-b4d4-56f84ddaf68a"],
Cell[143976, 2950, 13053, 247, 185, "Output",ExpressionUUID->"c28036d5-a6e2-413e-a36f-22b37cc6b021"]
}, Open  ]],
Cell[157044, 3200, 183, 3, 35, "Text",ExpressionUUID->"8b40ba76-0760-4a35-83c6-cf0b46d57d76"],
Cell[CellGroupData[{
Cell[157252, 3207, 1047, 21, 52, "Input",ExpressionUUID->"080a98a1-b8a1-4f6d-9b60-aa0178d8e08f"],
Cell[158302, 3230, 31648, 644, 75, "Output",ExpressionUUID->"4aa6614a-8dab-445c-973c-b13b5e7fa4d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189987, 3879, 252, 4, 30, "Input",ExpressionUUID->"2d9ead02-66f9-4151-b78d-4a69d2557fff"],
Cell[190242, 3885, 30799, 623, 75, "Output",ExpressionUUID->"34fa5b56-7f4b-420f-8c71-45e11ef0e12f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221078, 4513, 935, 23, 52, "Input",ExpressionUUID->"1441c2c4-9b5d-404e-bcea-f112e65e2d51"],
Cell[222016, 4538, 39568, 787, 75, "Output",ExpressionUUID->"34c10fd3-abd9-4329-a1f4-b3a4b4e7b96e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261621, 5330, 922, 14, 30, "Input",ExpressionUUID->"580f21d5-1c7c-4d46-8e7d-ef40fc79c59f"],
Cell[262546, 5346, 12955, 247, 185, "Output",ExpressionUUID->"37e5a1d7-398b-4d81-b222-7bee886ba385"]
}, Open  ]],
Cell[275516, 5596, 172, 3, 35, "Text",ExpressionUUID->"4e4afe30-fd4d-44d6-82d1-93a0270d2db9"],
Cell[CellGroupData[{
Cell[275713, 5603, 712, 17, 30, "Input",ExpressionUUID->"705dae28-815d-470f-b52c-7ce95717d35c"],
Cell[276428, 5622, 30686, 621, 75, "Output",ExpressionUUID->"c14eb033-80ff-487c-9673-4efdb560ef87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307151, 6248, 718, 17, 30, "Input",ExpressionUUID->"0d446b77-9170-4dcc-82d1-524e3ef32a03"],
Cell[307872, 6267, 42422, 853, 75, "Output",ExpressionUUID->"d3d7d772-96b9-4f13-a480-b3472dfbaa11"]
}, Open  ]],
Cell[350309, 7123, 638, 13, 30, "Input",ExpressionUUID->"5acb5ca6-7dc4-4545-b4e1-0afe70ea98f7"],
Cell[350950, 7138, 621, 12, 30, "Input",ExpressionUUID->"fe0850c3-e720-405e-b24b-aaf015f12ca3"],
Cell[351574, 7152, 503, 10, 30, "Input",ExpressionUUID->"c1183cb4-3141-4cc3-b47b-639bebd87123"],
Cell[352080, 7164, 544, 14, 30, "Input",ExpressionUUID->"2f941668-3e8d-4c24-823f-061c3c6c3dad"],
Cell[352627, 7180, 550, 14, 30, "Input",ExpressionUUID->"836c589b-d721-4f0c-8833-2b3c738b562a"],
Cell[CellGroupData[{
Cell[353202, 7198, 904, 20, 30, "Input",ExpressionUUID->"01022081-1cb6-4946-928b-1fa552e41ba1"],
Cell[354109, 7220, 419, 6, 34, "Output",ExpressionUUID->"ec99f375-8803-4e19-85d5-618c0e35955d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354565, 7231, 605, 15, 30, "Input",ExpressionUUID->"98c464b3-7de1-4f4b-9a30-d84342ca9374"],
Cell[355173, 7248, 312, 4, 34, "Output",ExpressionUUID->"8e3c775d-5a3e-40c5-97e4-e56f19c13efc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355522, 7257, 399, 9, 30, "Input",ExpressionUUID->"e79560f6-53d6-4be3-bfde-7fbf9ba17302"],
Cell[355924, 7268, 304, 4, 34, "Output",ExpressionUUID->"72bc29ec-ed66-4367-83b6-52a195b1bc18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356265, 7277, 478, 11, 30, "Input",ExpressionUUID->"a5b41950-e6b4-4ca2-89fe-77d5f91fd512"],
Cell[356746, 7290, 305, 4, 34, "Output",ExpressionUUID->"be602bd1-0035-445f-8779-559b7d1c9236"]
}, Open  ]],
Cell[357066, 7297, 181, 3, 35, "Text",ExpressionUUID->"04bb010e-ca81-4758-97e0-16af3c05de1a"],
Cell[CellGroupData[{
Cell[357272, 7304, 1795, 39, 52, "Input",ExpressionUUID->"8c144e30-0c4a-476e-811e-fec95ade81c1"],
Cell[359070, 7345, 59064, 1145, 76, "Output",ExpressionUUID->"348513f0-353e-4866-85d2-26bbdcaeac8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418171, 8495, 496, 11, 30, "Input",ExpressionUUID->"614d0bd2-033f-4296-8d3d-11197e7d9c3e"],
Cell[418670, 8508, 58011, 1120, 75, "Output",ExpressionUUID->"57f89922-6e50-45ab-a8b0-55b5ae7a3731"]
}, Open  ]],
Cell[476696, 9631, 406, 9, 30, "Input",ExpressionUUID->"bfb0083b-e936-4138-9629-8f2cceb3e3bc"],
Cell[477105, 9642, 493, 13, 30, "Input",ExpressionUUID->"bbcc2635-509f-4eb1-be6e-556c72a3db73"],
Cell[CellGroupData[{
Cell[477623, 9659, 325, 8, 30, "Input",ExpressionUUID->"1e33217e-9ae9-4dc0-89bb-e8bc210fc0a7"],
Cell[477951, 9669, 607, 9, 34, "Output",ExpressionUUID->"4b487f7c-9b0e-4cfd-9593-de61910ee587"]
}, Open  ]],
Cell[478573, 9681, 191, 3, 35, "Text",ExpressionUUID->"6360c352-af01-43bc-849c-bbd54b4db08a"],
Cell[CellGroupData[{
Cell[478789, 9688, 857, 17, 30, "Input",ExpressionUUID->"1088b6bc-ba54-487c-8976-bcf293e1558e"],
Cell[479649, 9707, 23002, 471, 77, "Output",ExpressionUUID->"d98f64a1-e5fc-46c7-b15b-5334a9347de4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502688, 10183, 1634, 37, 73, "Input",ExpressionUUID->"270df649-64b3-4dfc-a13d-970cbd760a47"],
Cell[504325, 10222, 66201, 1286, 76, "Output",ExpressionUUID->"1f5c224b-f6b1-4403-8c45-e40972481366"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570563, 11513, 975, 23, 52, "Input",ExpressionUUID->"d064752b-1ef4-464d-9a4c-766a32c88cb6"],
Cell[571541, 11538, 56244, 1058, 75, "Output",ExpressionUUID->"dcf759db-812f-4df5-a82f-3c7848a2c37b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627822, 12601, 795, 12, 30, "Input",ExpressionUUID->"e23abd49-5294-4357-b886-2c3e0c5fced7"],
Cell[628620, 12615, 12018, 232, 185, "Output",ExpressionUUID->"e27a4394-a520-49c5-be06-54f37ba89596"]
}, Open  ]],
Cell[CellGroupData[{
Cell[640675, 12852, 629, 15, 30, "Input",ExpressionUUID->"63020619-48a5-460f-aa72-8e6447381d98"],
Cell[641307, 12869, 64908, 1254, 75, "Output",ExpressionUUID->"7d756ada-ac1a-421f-ba33-af5677d2d1ee"]
}, Open  ]],
Cell[706230, 14126, 428, 10, 30, "Input",ExpressionUUID->"999ea873-6556-4c15-aaa1-4c7e62cce550"],
Cell[706661, 14138, 509, 13, 30, "Input",ExpressionUUID->"bdd32fb8-03d1-460e-82ea-180667d8295d"],
Cell[CellGroupData[{
Cell[707195, 14155, 332, 8, 30, "Input",ExpressionUUID->"6ad4ad24-df05-491d-b7d5-d45f5482d736"],
Cell[707530, 14165, 305, 4, 34, "Output",ExpressionUUID->"b6367e4d-98ce-4731-bbb5-f0dca3e03f2c"]
}, Open  ]]
}
]
*)

