(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    245272,       4580]
NotebookOptionsPosition[    241178,       4498]
NotebookOutlinePosition[    241562,       4515]
CellTagsIndexPosition[    241519,       4512]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"genSurface", " ", "=", 
  RowBox[{
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "3"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", " ", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.752695769542665*^9, 3.752695818519421*^9}, {
  3.752695858928783*^9, 3.7526959470587807`*^9}, {3.752695981515665*^9, 
  3.7526959895979424`*^9}, {3.752698393727209*^9, 3.752698400246583*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"cc943c63-265d-43db-8d96-a522ee421ead"],

Cell[BoxData[
 RowBox[{"6.290338110450236`", "\[VeryThinSpace]", "-", 
  RowBox[{"7.770080132278935`", " ", 
   SubscriptBox["x", "1"]}], "+", 
  RowBox[{"6.807902528617561`", " ", 
   SubscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.752695949014565*^9, 3.752695992273357*^9, 3.752696618567981*^9, 
   3.752697541899901*^9, {3.752697614675514*^9, 3.752697624747674*^9}, 
   3.75269823601505*^9, {3.75269829887808*^9, 3.752698334997998*^9}, {
   3.752698369465974*^9, 3.752698375585823*^9}, {3.752698429215032*^9, 
   3.752698485139841*^9}, {3.752698523476694*^9, 3.752698538426365*^9}, 
   3.752698582071183*^9, 3.752699620024619*^9, 3.752699665455955*^9, 
   3.752699783491777*^9, 3.7526999425534143`*^9, 3.752700003313574*^9, 
   3.752700057535141*^9, 3.75270009798473*^9, {3.752700142700603*^9, 
   3.752700160818966*^9}, {3.752700316162858*^9, 3.752700332676742*^9}, {
   3.7527003897896967`*^9, 3.752700417424781*^9}, 3.752700470308803*^9, 
   3.752700553996669*^9, 3.752700604708466*^9, 3.752700892213048*^9, 
   3.7527011534184837`*^9, 3.752741286275133*^9, 3.7527413188824253`*^9, 
   3.752741694739205*^9, 3.75274211833527*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"b9feb159-f9d2-4f3f-b239-c12202240e04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NN", " ", "=", "50"}]], "Input",
 CellChangeTimes->{{3.752696080337242*^9, 3.752696082224272*^9}, 
   3.7526976215736933`*^9, {3.752698520744347*^9, 3.752698535564466*^9}, {
   3.752700888955263*^9, 3.7527008897852983`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e6ab9340-3447-49ca-ab87-d03f40fd094c"],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{
  3.752696095491261*^9, 3.752696618770384*^9, 3.752697542183218*^9, {
   3.752697615059845*^9, 3.752697625066362*^9}, 3.752698236233947*^9, {
   3.752698299159432*^9, 3.7526983352496643`*^9}, {3.7526983697299957`*^9, 
   3.752698375834518*^9}, {3.752698429345352*^9, 3.752698485242503*^9}, {
   3.752698523554823*^9, 3.752698538545167*^9}, 3.752698582169858*^9, 
   3.752699620108488*^9, 3.752699665533791*^9, 3.7526997835610523`*^9, 
   3.752699942638747*^9, 3.7527000034087*^9, 3.752700057617969*^9, 
   3.752700098051589*^9, {3.752700142799074*^9, 3.752700160911354*^9}, {
   3.752700316248654*^9, 3.7527003327586927`*^9}, {3.752700389874133*^9, 
   3.752700417505131*^9}, 3.7527004704397984`*^9, 3.752700554062188*^9, 
   3.75270060479915*^9, 3.752700892295733*^9, 3.752701153543736*^9, 
   3.7527412864483337`*^9, 3.752741318980946*^9, 3.7527416948553677`*^9, 
   3.752742118407889*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"89b62ee0-aea5-4b1f-a16d-256c0f906a5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", " ", "=", " ", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"NN", ",", " ", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.752696099163766*^9, 3.7526961007979383`*^9}, {
  3.752696736176564*^9, 3.752696835217126*^9}, {3.7526985649379*^9, 
  3.7526985795008097`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"faf054dd-b5f3-4766-8fa3-16e8e36edc77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"64.90675018930995`", ",", 
     RowBox[{"-", "16.494154636678275`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90.57568607867859`", ",", 
     RowBox[{"-", "61.24536932859516`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74.8660191412012`", ",", "59.40231386233029`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "56.665913305723535`"}], ",", "41.36609036440359`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"47.61844578986245`", ",", 
     RowBox[{"-", "54.92911574155147`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.188439723704732`", ",", 
     RowBox[{"-", "51.194501495476345`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.790023167916274`", ",", "28.62712941841903`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"95.86186376322797`", ",", "2.0267760588899932`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.736206192264376`", ",", "48.245795113981956`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "18.50952961311998`"}], ",", "17.902247736883055`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "71.9470417538214`"}], ",", "87.17083051387687`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "95.15724381958358`"}], ",", "51.07139737038818`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "97.2837534149674`"}], ",", 
     RowBox[{"-", "66.43847981573882`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.783082430501906`", ",", 
     RowBox[{"-", "44.31638519892087`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "51.1064834930074`"}], ",", 
     RowBox[{"-", "51.860709715325726`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "78.99505069866831`"}], ",", "36.2512871711794`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "86.82684552333635`"}], ",", "12.495228597978723`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "33.57724139900063`"}], ",", 
     RowBox[{"-", "57.11623801610068`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "70.62895632638515`"}], ",", "61.55700890500094`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "45.34632262006997`"}], ",", 
     RowBox[{"-", "8.107550362597692`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "53.07605003358398`"}], ",", 
     RowBox[{"-", "57.178056656781536`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"91.44350899512551`", ",", "89.68671317472905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "41.75402272718776`"}], ",", "85.54165808221609`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "17.327306506151956`"}], ",", 
     RowBox[{"-", "12.18564942997142`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "86.85320061340263`"}], ",", 
     RowBox[{"-", "42.0381902435912`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "89.4535190447128`"}], ",", "82.09773327939854`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"76.88806623259262`", ",", 
     RowBox[{"-", "79.40052262374303`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48.558562833200654`", ",", "85.37946513667805`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "76.15923941312803`"}], ",", 
     RowBox[{"-", "61.435433987417014`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "21.136243581578242`"}], ",", 
     RowBox[{"-", "37.65688300583747`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "52.30999455987617`"}], ",", 
     RowBox[{"-", "71.66963011942153`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "47.82867324844341`"}], ",", 
     RowBox[{"-", "88.74078537771669`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.035235991037496`", ",", "20.053304809230497`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51.51329746463375`", ",", "47.81207540791411`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10.963377912896135`"}], ",", "29.027308975284825`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "41.97754786456204`"}], ",", "5.952977660561032`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"80.44058696439788`", ",", "12.16468311656024`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"56.20700257587009`", ",", "14.781105585389412`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44.54654451936773`", ",", "84.90626852470405`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"85.62878370968059`", ",", 
     RowBox[{"-", "23.59644730008506`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "23.247762953713732`"}], ",", 
     RowBox[{"-", "13.83664887026714`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"63.515564658956066`", ",", "88.55188880452533`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73.03740162684733`", ",", "24.741718295858618`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"48.56223406397464`", ",", "34.522235124465624`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"62.104352440612956`", ",", 
     RowBox[{"-", "94.30760896136493`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "56.783751229541934`"}], ",", "94.01194940459482`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"8.947998135298917`", ",", 
     RowBox[{"-", "63.883316708972075`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.8646019031992864`", ",", "19.616594138721496`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.649482144173874`"}], ",", 
     RowBox[{"-", "4.915528358813219`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22.130951403101108`", ",", "18.423689655911744`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.752696781846202*^9, 3.7526968440730886`*^9}, 
   3.752697542267095*^9, {3.7526976151596603`*^9, 3.752697625179379*^9}, 
   3.752698236353087*^9, {3.7526982992474403`*^9, 3.7526983353152*^9}, {
   3.7526983697992907`*^9, 3.7526983758993587`*^9}, {3.7526984294141827`*^9, 
   3.7526984852892*^9}, {3.7526985236184998`*^9, 3.752698538659545*^9}, 
   3.752698582240487*^9, 3.752699620188623*^9, 3.7526996655993767`*^9, 
   3.7526997836234293`*^9, 3.7526999427025642`*^9, 3.752700003484111*^9, 
   3.7527000577009163`*^9, 3.752700098104342*^9, {3.7527001428821993`*^9, 
   3.752700160990335*^9}, {3.752700316326599*^9, 3.752700332822597*^9}, {
   3.752700389937499*^9, 3.752700417570909*^9}, 3.752700470523086*^9, 
   3.7527005541266613`*^9, 3.752700604876215*^9, 3.7527008923786793`*^9, 
   3.752701153630962*^9, 3.752741286519005*^9, 3.7527413190238333`*^9, 
   3.7527416949437437`*^9, 3.7527421184729977`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"ee63a456-9f1a-49bd-b6a7-f7eb4c7d3b33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Y", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"genSurface", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["x", "1"], "\[Rule]", " ", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
          RowBox[{
           SubscriptBox["x", "2"], "\[Rule]", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "}"}]}], ")"}], "+", " ", 
      RowBox[{"10", "*", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", "]"}], "]"}]}]}], "}"}], " ", 
    "&"}], " ", "/@", " ", "X"}]}]], "Input",
 CellChangeTimes->{{3.752696852039074*^9, 3.752696897990561*^9}, {
   3.752696949526112*^9, 3.7526970078888903`*^9}, {3.7526975342538137`*^9, 
   3.752697538791298*^9}, {3.752698208384664*^9, 3.7526982239594507`*^9}, {
   3.752698256457584*^9, 3.752698333060443*^9}, 3.752698411243196*^9, {
   3.7526984547255287`*^9, 3.752698482817006*^9}, {3.7526999974779882`*^9, 
   3.7527000003576927`*^9}, {3.7527003277880163`*^9, 3.752700329778408*^9}, {
   3.7527003849445953`*^9, 3.7527003873842688`*^9}, {3.752741265309206*^9, 
   3.752741282409836*^9}, {3.752741690582799*^9, 3.752741691821169*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"a3741d04-bd92-4059-a6eb-bb9139f07425"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"-", "606.0447713124651`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1103.7687944478575`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "195.74803151925244`"}], "}"}], ",", 
   RowBox[{"{", "721.5223964018885`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "737.1699164029387`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "449.70454941689314`"}], "}"}], ",", 
   RowBox[{"{", "80.17561738523399`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "728.3293443056542`"}], "}"}], ",", 
   RowBox[{"{", "287.0763607345971`", "}"}], ",", 
   RowBox[{"{", "277.1980003029164`", "}"}], ",", 
   RowBox[{"{", "1178.4038342806748`", "}"}], ",", 
   RowBox[{"{", "1099.8380164676769`", "}"}], ",", 
   RowBox[{"{", "308.63798053898165`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "382.257815176056`"}], "}"}], ",", 
   RowBox[{"{", "63.89630742805988`", "}"}], ",", 
   RowBox[{"{", "864.4048982816178`", "}"}], ",", 
   RowBox[{"{", "770.2235519542076`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "135.8051397109336`"}], "}"}], ",", 
   RowBox[{"{", "985.5528963865769`", "}"}], ",", 
   RowBox[{"{", "292.43601861421814`", "}"}], ",", 
   RowBox[{"{", "26.51095551251679`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "94.13555342711688`"}], "}"}], ",", 
   RowBox[{"{", "893.4945945928408`", "}"}], ",", 
   RowBox[{"{", "66.95087364843535`", "}"}], ",", 
   RowBox[{"{", "403.24850921313265`", "}"}], ",", 
   RowBox[{"{", "1244.1224445425235`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1130.4313972523842`"}], "}"}], ",", 
   RowBox[{"{", "223.39998860979853`", "}"}], ",", 
   RowBox[{"{", "193.10629330789277`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "88.87583184610187`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "76.5990625424022`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "237.13698139088515`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "17.720645339863268`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "67.27164486485103`"}], "}"}], ",", 
   RowBox[{"{", "278.9952208341248`", "}"}], ",", 
   RowBox[{"{", "370.08633571546403`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "536.0693933155759`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "336.35427783199873`"}], "}"}], ",", 
   RowBox[{"{", "237.9387463899235`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "820.5271542368237`"}], "}"}], ",", 
   RowBox[{"{", "97.13171186077554`", "}"}], ",", 
   RowBox[{"{", "121.94845071851933`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "400.058034624256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "134.680373156514`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "1103.2090927800627`"}], "}"}], ",", 
   RowBox[{"{", "1086.8968623405437`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "483.7651490588683`"}], "}"}], ",", 
   RowBox[{"{", "121.09092585943804`", "}"}], ",", 
   RowBox[{"{", "30.647969473425825`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "45.76655300017002`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7526970104841413`*^9, 3.7526975423658867`*^9, {3.752697615256545*^9, 
   3.7526976252655563`*^9}, {3.752698225686117*^9, 3.752698236435214*^9}, {
   3.75269829932541*^9, 3.752698335381667*^9}, {3.7526983698611593`*^9, 
   3.7526983759716682`*^9}, {3.752698429472496*^9, 3.7526984853563347`*^9}, {
   3.752698523697938*^9, 3.752698538741276*^9}, 3.752698582305603*^9, 
   3.7526996202536497`*^9, 3.752699665666436*^9, 3.752699783691557*^9, 
   3.752699942769102*^9, 3.752700003563209*^9, 3.752700057800049*^9, 
   3.752700098165935*^9, {3.75270014296119*^9, 3.7527001610704403`*^9}, {
   3.752700316409148*^9, 3.7527003329105673`*^9}, {3.752700390023073*^9, 
   3.752700417638342*^9}, 3.7527004706071157`*^9, 3.752700554193555*^9, 
   3.752700604941084*^9, 3.75270089246253*^9, 3.7527011537135153`*^9, 
   3.752741286603714*^9, 3.752741319078762*^9, 3.752741695025375*^9, 
   3.7527421185383177`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"0b9e07f4-afdc-4a79-adb5-0c0888761f6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"X", ",", "Y", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"Plot3D", "[", 
    RowBox[{"genSurface", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", " ", 
       RowBox[{"-", "100"}], ",", " ", "100"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", " ", 
       RowBox[{"-", "100"}], ",", " ", "100"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7526970509532633`*^9, 3.752697086701254*^9}, {
   3.752697267873152*^9, 3.752697275572101*^9}, {3.7526973086089087`*^9, 
   3.752697379197613*^9}, {3.7526974281644173`*^9, 3.75269743423844*^9}, {
   3.7526975078322363`*^9, 3.752697508056628*^9}, {3.7526975641848993`*^9, 
   3.7526975844068213`*^9}, {3.7526980348658524`*^9, 3.752698063717926*^9}, 
   3.752698419933505*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"6993c5bc-8dd9-45d4-9c99-afca30f1a9eb"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], Point3DBox[CompressedData["
1:eJwNk/k71AkcgGfd43jce0QaK4yZlCsmRz45Z+xgmIPNar/Nat1hK23txGSf
ZlXGEWspnjUt66hQRGH1qZ4ORxvK7MhsTYk2107aHhS1fnj/gfd9XlthRvQe
DRKJ5LaG5hoVmxdc9bw54NJmPiPOccGLcuOLceo8XKKn6StqBbCisg5M+jUC
ywwebTf3L8GHYQXjaZ3RMNTJ1M5tCwfKwsCTfw8m4XOdljpfPhvBv8hQ2RwE
Ic60x84FEsh8wfZxuh8Kdy16A+eyv8Akqe1qHPknFFMn6T8QNNAzvJc2WcFC
6Yczo8FWIsTipukjZXSgfN8hPVnjC58VtHH8DHiwQpPdpi7GgHilL17uSYLg
jKDcszckKJb6kFWvzEChp/TM3sCE1iq924xXWVBzkcjPzHND8T3a5eUpV1ip
jNegc7OA5KjFr1qJwtpiq4n5fj5ojHRLqpNPgVb9bqZJfwwyUqUFdsdZ0EVd
pezcUgL7d1pqOUXH4mG7OiOTKg6emrKgbw3bBypH2mZ1sSMoHZIjc6khSP/y
Tw3K84M4q8kEmZSFHoLEHvo8C2cEje5dC5Fg7UR52XyNi7HGpc40SgDo7430
8dM8CR0JIvJMOx9rrnJOF65SwVt4ZrTPNB8yw4cNJvoAqY8cJlSFbMye3Nl+
c5lAtRV5BBqisCE0zpR9JwL2PFDz0gYLISG/jc07H4KEMe8vEy8KeufXzy+H
fAebpDMf9RwPQ+vxnKL+cjYeWPrw9l6eN6iF0n1CpQASBoesXqcKYNmC+c/5
/BikjlsM/6gKQuXmRkmTkA9++Rrz/82chKHW13H9XFek5G7KMvqaiuub7NeP
93Bg/5Ne+ekOPprUvEuZ0ApG6cLA82X3QzDF6t2vEy9ARYtl4A4JD8Yc1gmP
ZJZCewqayxlc8DhV63R2jIvsE+54tbEEhy78vpITygQmaSOVFcuHvd0v2wdn
U6HmxdG3LvpcVN/QDe/pjECl/bbr39olAYX+YVz1+VYkWsi9Fg8DUPhaU2bE
EGBZuGLqgmMYwiiLMT4dhaZLKfoxDlxklOgvmk6HoqjRTDd5iwD3wKCDsDYd
1faj27TJ7sCJZwvrjDwAuiSeoiuuSCi9utuuswAyAz9eeBEKgqaNMuEwB9Hx
3GP/OXvk9JReWdXxg5H05rTZjCy4y5SzKKtBKO7wIsbufwJRDkWy3bYHQXy3
qdTNmgfYkBEbxaPCBUdLm0IUI3E72zh3HRtUan+zuSJnsBH6bDinfQD1/Lvo
b4JDQHXtUjjJmw/tOY+36vemg4iv+94viQ+U+i23Wiu8ULH0W5VX7XEkvvol
Id3fC9cC+MWfp2Oz7OfFdGYsMCtGtN9fjwSsTrWPthMA5XBtSptoF3yqN9CX
EBANWGgMT/9gQNaDjstzpEOo7qaxFtf8i917KxUBO6CLPFd9a5RAQtGZGmcU
CZ47cv9uKY3BQXWKtdy3BAtOjL6JSlj7XZRx56Y4BirlFt+UvysGKFzUICZt
YehY1TGTV5F4SKI23O6bg6REs8T2aR0Y6jBcP1btDilOl7qGg3cBwDOFaaUN
Qr1NkLjRHMvpw9ynddsBWpZ1JbaeQAw8mc1Oc4MbLrIkm2ch+D8c+TfJ
      
      "]]}, {}, {}, {}, {}}, GraphicsComplex3DBox[CompressedData["
1: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
yXniIC94Jh5dsFhyarc/PBPfv/lPiVYH/ON9PPRln+utzIJn4k+vTqhelpsB
z8Qrtnirpx5KhWfi+dtym5PmJMEz8ZjC40kJ5+Lgmbj7Py1z4gyi4Zn4fr3f
dyWLI+CZeKSx7kzxo4HwTHzVqsS8Pxd48Ezc+Ejhu64yR5w/8abu8uPlE1bg
33TMaFBZErxaD57xXK5afXPCF3t4Jp6aJpcg99YLnolXJdyaMLIlAJ7p9TSW
P75g3JgNz8R31n/cvlwhC56Jy5pI+BltyIBn4sN2TczPW5wKz8S7i40Ncq4n
wjPxV6W8H5mr4uCZ+K29OeXprXx4Jh6w3vOowpVweCZuYH90mOz9AHgmPsrl
p5/0ay94Jv7sAX+f/Ed7eCGuWjL3iI6eHvf/s0eTiTn6T2etgGd4626S7nnA
EZ6JC4JKSntd4onMG+bMG5N9u1etzRWZN8yZDbeqQ812ZIvMG+bMbbMbq0yf
ZorMG+aM3t1HGisnZIjMG+ZM8P5nfXc2pojMG+aMQ4XkyYINiSLzhjmz/LC6
67YXsSLzhjkz69hyha0efJF5w5xhvB/nTHoXJjJvmDMygRM+q/72F5k3zJlX
Ye7mKgO9mH/PG+aMv6TzpoVz7Jh/zxvmjI3R9YNNG3WYf88b5kzkObEJJf3N
ROYNcybn7ifTVkdneKa/l6wKiFnzKE80X8coNiass1LJZUTydUyGZb7W6o3Z
jEi+jul1f+8Ay32ZjEi+jvl0JPjK3kfpjEi+jmmrKggq25jCiOTrmEsnBWp7
OhPgmXhl9dP7uwNjGZF8HZMv6J1U1IPPiOTrmD7xZr6MdBg8E29N2XpnrrI/
I5KvYzaMO+viYefBiOTrmB7TDNUd+TbwSJx5fsLi4ZAZ+DcdV3tql60JsRA0
Ww6d2TLTkmkSHgWT+zXYxwxEfgncV//y15i3uQL6N/1//Oz8HvcW5iIPSPzy
rcyceyPzGPo3/V0q5ZiZ5E3udeh9bIZFdlr1zGOMZWXC3BVXM8uFR4HA9ey4
iw9yBfRv+rvMp4RzcoO58fT6FRMPFUguzMN4en2JoyFz1vDycP70d/t+pzwv
GnF5S3q949kxA+Qj8hj1OVnXuh9y+WFBOs9tcfwwcOQnVwXo3iq1YrJ2DLrd
fdYU4/Nv6b7a1mEhII48Z/bFpcoDZJlPfRWOdi9cgfHy1nv6N25zFhCn8Wv4
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
icxxnXPPp5dweTnhfLKKiZveNF76QyY8M8LnUMZ87HvnjrlcXq638LmV0VPt
Y7ptYCo8XxM+5zLP+2rdsdyVCM+ZbLxRb60tZLTj4NlC+BzNjK5LbrpZz+U/
O0TqOcnzUTb+PVO6Zu/tw+Xlgtn4n3w0mK+iFQDPFP/IY0U6BdZe8EzxH/j4
KVlD1h5+Kf6oZ5mmwUeWIF9Ex5Yeq2vbAkzg2ZyN/1vQL6vfzxzhOV6Yn2H8
lqTWzp7I5eWM2Lq7xTN39R7uz+XlhgjzJ8yQCSeWfRZkwjNbP8g8Hn4j4XZ/
Li9XIMzPMDbSV7Pt96fAs70wn8P8/vh5mJJuIjyrsfHm31He0trE5T8FbL6r
UiQvF8fGb7xj0DpbKS4vR/E3igWcnqsXBs8Uv3RtveCIjz88U/xbBi9PWrvA
E54p/v6bf2Utz7WFXzs2/rdvbR78sl2IvBwd5Y7rVW0PMoP/ZDYPpnz6vOqL
bzng49nPwSTorUD5LpcP0WD/Xtrz6HpfyRzUjdHfZ5tIaF0Yb4Y6M+KBI/yt
Nvlw/cXEO6deyt0+XQf1RsRzBM8dKjTsUB9D3L9Z49a63l6o5yC+684Lnu0X
ro+b+M36ndJOL7g+bjwHO+xfPWMT18dNPNc2qXTWU66Pm/jeDc7ftNcmYv2M
eM3axXrzbnN93MTd9g022jEuA+sTxL+pd/vsfMz1cRPnl73b9k9BNuod8X1f
lD47eaYDfBJftU1snkF/ro+Y+M1Z7s8k1+hzfZcsz9hqJz9yvDF8Ej+dfz02
w8URPoknL9v55PpuHnwSP66zht+QEwifxJ/PlRnTGBPB9V2yvK/iSxv3OdFc
3yU9B8tdqPA8FMf1XVIeYtg/PbzVk7i+S/IwJNzEtyiV67tk+aH4SSZzU7l+
beLzeo8InKePfmHwSzH9ds7vlQPPNH8ErRtheeS+BzwTd1XVu9a2zh+eiStv
LB2+97sNPBPXK9xVI1XH1WNhHUwsor4+hauLIv7a93CJV8lGrt+S5UVHhnbN
0/WBZ+L1B+qydDSD4Zl42B1d+V2ZkfCMOsEGJZfivjHwTLys/vfxPVHx8Exc
cK25T/n3JHgm3nS5avU+Xho8E/9qZ7Dq3ieuX5s4//Hs0KaKLHim+djs1J2T
Hmd84Zl41NG0NT4HQuCZuDF/xsw72zdx/ef0fKMY/S43aC08o75mmqaVyo4P
Z8kz8cCjRoPTe6+DZ+KyK/IvmTzdBM/EjyvHi+9/7AvPxJ8p6uyqbAiBZ+J9
ksOUW2yi4BnrnAlreA+aYuCZ+IzYWTUPTRLgmbgRX0b6yeVkeCZuF/HB5hmT
Ds/E5y1wXu2zLhOe6frmqqdoID44GJ6JG/3z5pN4ZCQ8E19gbFv+Z7QPPBNX
KTUe9sl6IzyjvsP56N673atQl0bcW+KqUVePufBM/JXWwLIJjC08Y51BLerV
VCVPeCZel/Zj6MhIf3gm/iPhyGFlrzB4Rn2rTpXa0Kl8eCZeviAnaFhpLDwT
r5nLuzJcKZFbB2X5vdnG8gpbUuCZ+Jf8XC2pPhnwTPcL/Lu29zfbRsAz8Xsv
U+fVq0bDM3Hzlj3a2bxAeCau9vjd1rQoHjwT/1Hn/GnoWEd4xvs63bitPmA5
6tWIv3Dtof7DxwCeiQ8Z9OmKZJgDPBM/JnYkJmEyD56JP/3prpI6KhCeiUt9
mXAhUyoCnrE+/61zmmE3H56Jz/hcF7U8IA6eiRt+LG9Y0ZHI9cmw3LYjXtnU
ORWe6f5r+bRVWnlWfJF+bZnqJrZfm/zTeIfJ02K2NHAc98Vs3zf2PWHHu298
f3nC+TCRvm+Z6nMifd80nvHQUht721+kH1ymerVIPzjuH199GjL/oqdIn7hM
tYZInziNv9EVeVvzha1I/7hM9Z+B/+4fp/GNvzVNyuUYkb5ymWo9kb5yGn/5
dZ1F9WFu/wQab1L2735zGj//dfOblye4fRVo/CiRPnTkQT0m5H67zu23QOM3
ivSn0/hvGx9r/T7N7cNA4x+J9K2jnrdy+ZtIC25/Bho/UKSfncaXHVCfE13P
7duA+EX63Gn82b2SSbFLuf0caLyWSP87jb9T+ux+/Blunwcar8/2xWM/I/b5
wOFM/nn1vfH4fhIPORUwdNJYrl+buHFNtY+qJtcXT3z2hUdjx5+KxPeKuG6a
ZOmyuGB8f4jL5izvo5vng+8J8VuaExpCjai+sc981HGEO4192WSB7wPxPnt6
eezfronPl/icMq13hWY2+BxRT11QqlGq6YHPi/gXPaljTX398bkQH6d72fzB
d64vnnjpqJofnZ+4vnji1YqFBl1usfBMz1udEgv6fzZLgmfivXsqrv16LRWe
iTdL2p762BIHz8Qv9IvZ1GkfDc/E1yoaz2q9FwHPxCcp52y+9zIQnomLTWj+
eusrD56RT7JiKrYPcoJn1I1e3fJ4vLUJ6guJT55XOOdezVJ4Ju4QrSgVkWEP
z8Qfnro0fvFxL3gmPvBY1EW90gCufojl2hVznZZvCYdn4tPv/uipdoEPz/T8
GmL42PTsrxR4Jq6vYt1gM4fr1ybuaCwhXh2TyO1bwvIVKyccPjkgjtu3hPKu
qwzsj+fwuX1LWL74QPN4N+1wbt8SlssdUYp31g+AZ+JvTzi9tLPygmfioRFW
6adv2cEz8RSNvIV1V3VRd0jc9daIh3ubuf5z5FnX95xiXefE7VvC8i+qc2cd
sfDm9i1h+ZixnxuPLw3i9i1heUma5akNipHwjLxLVkx+YnE6PKP+/dLUz7Vp
mfBMvDNnj0H8pBR4Rh3K5qs/Yo4mwDPWn/PflfPnx8Iz8QMFg9dG1kbBM/Ep
Os6yv/JD4Zl4z2X7/b+W+8Ez8X1bX+x/7ucOz8R3GzxvPT7RGp6J7xz0tmP6
+omoR0Q+Ne6Nktsqro+d+JlZr1cs7OcKz8T75x1YpvLZh6vTYvmMjI0vVZ8H
c/u+sfkV/fahH9QmZMIz8TuuPeUnPuX64omHtRhkrWxM4/qaWO7U5r5oxYZk
eCZu8jjjo9GLeHjGOv+zw0UGHjHwTHzsy0ZTvS+R8Exc/k5Xr5RfwfBM/N19
baf4Ab7wTDzybHdKL21XeEY8ecO3favk9gsgrpTNH3XDi6uzBJ973E6jfgM8
E38lfdNr9DJ3eEZdpPiY1TnZfvBM+aq09Ocy6SFZ8ExcQerOvIxZOfBMXEL6
a3vqWW7/AdT9qUgnyUumwTPyjRO05gxPT4Jn4rXqlm9khsfDM/EDk4Lzh+yI
hmfUfU8tMBg8IZLbF4bl4s6RnxU3BMEz8XtuF82He3jDM3GL53Ju4345cfs7
sPzrY32r2bO5OlHiSQPnGR4ZpAvPxE9+XWT6ZZcd18fOckn/lsvdOl7wTPm8
O9OrZn+6we0zQFz/yOXBXUOz4JP4mRnNrz5YcvsMEHf2uBf1eFYqt78Vy1fy
fkx7eJbbZ4D4HN+RT1qXxcEncZUAJqv5BrfPAHH5TxdjKg6Gwyfxd98HPN97
NgA+idd0my7Zc4PbZwD5zv7TDZectef2d6D1wLXfJneGLkM9KHHFU5uc88VM
4JP4kwY1n8ZHjqi3o3ydt7tC+5RYLdSHEe+96Ou8g142qGcivmHmptDjJh6o
vyG+LrfjgY2cP+pFiCeml4U59qE+MlXkCan+kNaJifc5u+mAdnsC1jVRr31a
789chxSsw6E+5cQ44wWt6Vg3Ij5+rdgKpfJMrHMQr7jf4a/slI28PPG5q9sK
x4zJZc/LGHnC8cXv7w9dyqB+i/g/BR0z0j7Yot6I+M9Me7/NDZ4CJba+hLj6
+U1rbjb5C2rY+w/iVB9I67Xo47xb5sYzSsT6ItZ1b8ed9rmQgvUw4lKvpvWe
OyoD6zfEtzopTZ7XnEn7A4CrPJeymJ+XLaD6LdSrDr1Zna6/FPVSxHW+v5zs
7m2P+h7k8b5MmjW3zAvrysi/sXV3tI6Idf72l+pl+xKxbkf83esLwXtVUrHO
hPxbl8lzC+MMrIsQH+i9cODqflmo36I8khK/8p/+y40EXWy9DvEnqx5NMOpy
wLog1mPFx79+NCAJ61jEG3uIaz+NScW6C/HPfzwveIdnCB6wdT+UV1kZeOWc
rupKrHsR36PgsEfOPUlQyK5zED8zXOerwvNUrIdR3oDqhWj9hnjatCJHkzrs
f4jnYtrnbZTI8z7t80b1lMRpnzeq/yNO+7xRvRrx3uw+b1RfRdySfR6nOhXi
g9jnaKqrIG7DPi9THQBx2s+N1q2J035uI0Sec2k/N1oXJE77udH6Fj3PUv0P
rW/ReNrnjep36fmry+ZEtWpRDOpNiT+wb3Ufrx6F+kjiKXV/5uo5hKCej7j1
7cXbdX19UX9G3PHQsO9hfTahvgTPxeYpSXOnrBdQPQTx7lEnJfYEuAlo/Z74
/r7DxzRN9BPQejPxFvGGmlbFUAGtjxIXj6it6IyNEtB6HnH50KIeXb9jBFRH
S89H/Q1Cujt1YlD3SfyzUeHB91ciUadI/PQO/tmmXcGoqyOeUXx59J3DPow4
O78RXxK34EyonI2A6g+I7wg+9Dv2m7uA1suJh83KLlzW7ieg9V3i5dOWLzBq
DcV6KvE3ueKeqi+iML/R88hYzfk6Jx5Ho56S+MCZNh+OuUQy/dn5jXg7r7eu
y9Mg1EMQf/F4ZtXarbaYx4gvaiz/4hDkiXmMuLHjIMWqff6Yx4gHWV85eWp7
GOYxup+fO6KbHxUVzdA8Rlxl9BjNiL6RqA8gnjB/SsUcBXvMY8Q/bmn4qhzm
hXmM+Mjs5M3j3QMED9l5jO5vzXrVXNBXjsb6N3G1rRPK5Lc5YL2ZuODict/M
+TzMV7gv/TS66JuiE9ZZ6Tq7il2HpfsT4gNVW88XWeUKaB2X7lsyHu+Z67eK
22+HuE1lsc3n5Fwmga07pNdpuVApNeNXFPox6Hq3caFbQuoBZ2YnW49IfHX1
uB93LocJXrP1c+ibaem47raOj/4Nuu5It/u8bOntzVxn6/iJX37qk35gkhPz
k63LJP6z82Xjwq0BbF2aMq5fE97+4784MVxwl60bQ53yx0nJu0/z0R9C1x33
45X9eDMD0SdAXOfMV1e3pTzUtRNXSwjJu7HPgdnD1lMSL1QpP1zuwhPEsfV/
xK+NcjA7aBWIejviX+VGdR3Wj0B9GPYz6Oum3zoiGv0qdF27GtMxqbdTOPoW
UKeQNCNNzD8AdfbEeRkh73/FeqEunHiyRnRB50R7ZgJb90mcX9GkNNHXSdDG
1ikS9zAdP1VB3VtAdXXE840e3RilEIQ6NuL2Y+uqpHtFou6KeLBSuaRMWDT6
bbC/SGleaZ0Bn6G+EaxrWPhU5hWHMdTnQLx+3QnprKP+DNXlE19c++epQrIn
Q3XkxNtvJu2W3mvL/GDrcYlnTDl5REx9FepHiSsPaJDv99kZ9Y7E50cW7Ut8
4436POKuweuM0pqDUE+G9Ys5/f31HSMFIWz9EHG7Wa9qDR9Eo7+Irqfn02bM
2WIXy1CfDPF9mavf5L6JYqivg/hEta9aE56HMtSHQLx78vzcMZ/9GKqbJ17s
0vvt3H4eDNV5Ezf0y9o7Xd2GoXpZ4jdflJecnWiJ+k7iNc5Xhrz2c0E9IvGB
B0apfS/3Qf0cce3Spsu/84NR70Vcc6W+VlRtJOqTiBsYj4+Jnh8joH4qup5S
XTHVQxOXC9X1eW2yBn1WdJ2avXjGjs/TktEvRJzqY6l+mvhFi5E9dsS7MC/Y
+Yp40wXTqIkrLNGvhfyk+p2pAv009B0hPznp66PqhiT0ySA/ydaFUn028bMB
RrscurwZGXYeIz7+p4qkoPdG5jY7jxHfOtAu3X35KvSJ0XXHIEHbtrYiA/MY
8bChed4Jr1MxjxF3lj0xJo6XhHkM+xgtTrr4fUwQQ/MY9qPSvzn+83Rv1N2i
3nmHhtTjWCfUiRJfY8ErOGi4En1rdF2z/dmnvHxeFuYx4o2hCvyyyAzMY+hL
/mV5xCQxlZnDzmPIU3UHOxhLJ6F+nXjQ4Muv00wjmHvsPEbcSFbKIMkuEPXB
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJwtmQX8FsUWhmd3hm6sa4udhAomYdCgCIpIKFIKAoogKiEGII1KSIuFYmAg
BiB2X5UQExUQDMoCAwHv8953fz+G83zz7bf/3dk557znbLUu17bum4cQRvFf
xH6chcC/sI2xBzgHexI28n1D+GR4N6MBfCL2F+YvhHfx48MZt8H1mfuK0RR+
gLnfUwiD+HwMdg9jNHwy9ktsE44piS3BaAyfyjkT3Ag+JfN3OqY2vItRHz4B
ezDzneEW8EHwFXBzeB/4Uvh8eF+4HdwQ/gQ+F57L9RwIXw43Y35/uCPcBN7O
qAMfgd3BOA0+EvsPox58PPYAju8EN4VX5V4frdNq+Dz4fs6/mXu7hs+HYtsz
NvH9VOY7wJvhe+GO8M/wNPgy+Cd4Cnwp/AM8CW4H/whPhpvCn8Aj4UbwCvgO
uAm8Ch4BN4ZXwsPhFvDn8Ch4b66lLdd2Hp8vZ/5X7Azm28Lfw/fAbeB18F1w
a3gtPBE+gnE7v30ZexHz3zI/Ae4E/wJPh1vBa+BxcEv4C3g0fDG8Hr4bvhD+
Ch4LX6BnD4+Bm8OfwXfCDeHl8O3wXlzzJfzdc/lcDr4APhPuAz8Fz4J7wwvg
mfC18DPwHFgb+ml4NjwAfgF+EL4BfhF+CB4GvwYvgG+BX4WfhAfCL8EPw/3h
57WH4dJc05VwdeaGcZ119B1zR2GvYv5ijmkEj4ZvyOwD8oW+8Pkc/xY8QPfO
/F3wUOZvhBfD8+AL4bvhW+BqcFe4FXwk3ANuAx8Bd4dba2/Cg+AecGN4DDwQ
Hgq/Aj8BD4GXwY/Dg+GX4cfgQ3LfS0t4K6MmfBB2C6MGfCD2Po5ZAb8Cb2Qc
A++dOT5UgX9mVOWYi7HnMFcWbgmfAVeAW8FnwxXhi+C68DZGLfhgbPkibpwF
f804DC6PPZz5bvBFcFt4OjwCvhSeAY+EO8H3wePgS+Bp8HD4G60dXEH7nPm5
8Hi4O/woPBnuBj8CT4KvgO+HJ8A94PnwFPgq+DF4qvwBfh1+Gj4zep3/w/Ms
pxgkf+f7siXwaWxd5qvAcxQL4MrwbMUduBI8S/ECrgjPhBvAFeAZcH14F2Mk
XBO7m3EnXAtbnmOmw/XgMvBU+Gy4NDwFPgsuBU+Gz4QzeBxcW7EkeS0OlK8n
r90B2HeTY+hu7qkEx98Dn87ctmT/ORxbkvlJ8BlwDo+H68ABHgufCv/LGAOf
oliVvL4HYSPHTIBPU5xL9qUjFHuS/fAo7NZkf66GHco4FX6O6+kC/8X6zoZf
Ss4H2+Bb4NrwInhJ8p77BR4CnwIvhAfBtRQLFLfgM+TPykvw6fJ/eDB8Mvws
fDNcU/ECfj/Z9/6Ftyf7zLHYP5L96njF6eT9dLDievK+OQS7JTkeHaa4mBx3
jsTuSPbD47C/JceXo7F/M+6AT8L+mRyDTtB9M26HT8TuZAyHq2P/YYyAa2Cf
xVbmMazjOj9I9pmAfSc5FyoXfw3Xg6tgX1Mu4pANzL+a29c2wp11b6zzTMU2
XQc8C/68WJ/yis3FepbDflqsVVnF+GLNK2B/53e1Oefh8indJ/Z7zvNu7rjx
I/yO7hv+Ab6EY77jmPXwarhG7ri6IfMxe2FfkS8xt51jVsDHwyWx7zEOg/cw
3wxezbFr4Y1wR+b3x76I3Y/zfMf8Wj635PPeuv7M87sZq/h8IvOllVcZJ8Fl
lJeKfVgRuzQ59/zKeT6Gj4WT1jM5P/3B/MvJsew3rW1yTNwBL0uOg7/DbyXr
hp3wR8k5I2I/TI7vOfbtZF3yD8e8maxL/ob/mxz3M+wbyfrmL+YXJ2umn+Hv
kmPlftg1ybmhMvarwl8qYTckx1DFrteTNcGf/HZ9cgzdF/ttci7ZC7uccRxc
AruScQJcCvtNcp6ril2XnM/2wU7MnU+fKmK+dFF1uFJu3VUDvp/jeuXWRU2j
Y7t858LoeK44IN30JDyD45tFx3zF46ujc7f2/3dFTtHf6RWdQxUne0bnbsXP
C+A5wf7YODpHyGebwPcGx6j68MTgeNg5WjPIB6+M1hLSCD3gRcH+eFF0vpDW
eFT3Hay7XlA8C9Y5DaLzu+LtDEaHYk9qb+p6xnJfraJzk2LsOdF5X7lovp5D
sMZ7RHs2WMtJL38Av8hvr4vWKoqrt2hfBueXYfDy4LzTL/pZ6JncGp3Hlc+l
P6RDFOf7RmsD5Yj5yfpfmrw380uD43mfaM2gOH9ttK5Q/L8iWoMpHj6leB+s
6xbmzr/Kw/O0j4I16sPaL8G67sHc+kE64nHtx2Dt93TufCoN+YTWLFi7LlLe
CNaizykvBevPBcppwRryecXaYO36pPJbsP68gfF2cP66KloHKpZeHq0bFZPX
cHwz6UPFf+XA4Hj4tvJbsE6uwLg+OEdUYvQPzi/lGP2C41cJuK80JDYy+kiD
YcswrpNfyJeVn4Pz2gfKq8Hx9i3lz2At/aaeQ3BdsEx5ILh2+Ag+W89RsR1u
Dj+kZ6IcElxTlGJcCy/Qc1M+Ca4pFiuPBev8N3JrMGmxpcppwfXFEuWo4Lrj
Q/gseA5chTEgOFfupTUNzrP7MAYG52vVdtoz8znnBrg1/DDzv+fWmdKbl0Xr
K+W+nfJn+FHm2kdrLWnhS+F5wTqhU3QcUP6dx7g5d/3YNlq/Kbe2i9Z10hLd
o7W68umm3HWf6r8tjPbwI3y/H+PGYP1wGGMYvBR7KOMWeAn2EMZQeDF2s64b
ngcfzBgSrCX2Z9wEv4D9h2N66t7h3fA18GNwxugNP449iDE4WHsM1bMM1oGD
tSeCtd8QrXuwJlQ9VBreE1wLyhdi5lyt57hv5tquDKxiXXVhSfCv4HxYCrsz
uJaSNPglON8qtuwKrheRZ+GP4Jyv575fZs2l/fAf7N+Z98/+2J2Z9+EBmetX
+an0r+pX+WOlQtvL9ytmrinl11nmOpVbC78F17LyzRKZa2LFjTKZ9YLiZ9XM
tal8uUrm+lK+XzlzfSx/L5W5xmWZwvbgWrMsNs9cU5aDU+Znr75BHeX83L2I
06Qvir3RKHNvQf5+tOqb4lk31voVvnkMnBVxoBpcOXeNX1PPp/DlY7Pw/0WW
/x6mZ1L4znGZNY32/wVajyLOnA4fWvhI/cz1sfLI38H1t2L+n8G1cnlsycy1
dQW4NPbfzPHh0Mw1umLsjiLmKq7+Wvib8mO9zL0J+fsh2B+1Dxjrg+t4xeTf
g/OZ8tpE5Rf4AfguuB/8IHx35jw2AR4MXwyPhAfAbeARcH+4PTweHgS3hofD
18OXwePgm+EmuX3h6sw1tOJA28zaXL7TrqjLlBOHwe3gsfBNcMPc/tsdbp7b
Z6+Bm+b2zZ7wNPhL+B14UHTeVN00EH4nuD66CX4vuIZqltvfe3H8jcy/G1xP
tcrd97iO+Ra5Y0XvzHX6bVoz+CL4DrhfZi2vXPOsmN+fmTuGqP5QHLiM+bNy
54gO8JXwJPi2zLFPMfDezHHuCXg6fDU8Ex6VOT8vUcyEe8Kz4NFwF3gyfDt8
PfwQfE9mnTUbHgN3hafAd2TWUtJUd2a+RuWp9vBN8OPwtMy6R/rnPvjs3Dml
I3x+7pjfDT4vdy7oCp+bO0d0gW+Fn4XnwufkzpVXZu6HKFdeAd8GL4TvhzvD
98C3wnVz58pOcIPcObczPCb5770qXVboB+334clrqrh9VPR+ewV7dPSe1PEn
Re+9N7HVo/fnW9ga0fv5beyR0c9xGbZ29Hq+hz2NMRX+ADs2+f5fg1tGP6NP
sI2kb+CV2BbRa7gK27zIa1rvE6P38BvYY6J9R+dpGP28VmDrRD+j97GnRK/J
O9iLo9fqU2yb6LVdjW0d/Yzkux2j98bn2G7K8fCX2EsYz8GfYU+N3m/vYjtE
a2btu/7wSsUb7MnRfqc9vik4XnyvWCFdojWP1pHr4I+036K1pXSmelwPYBOJ
pUu0/tQ+Oj86hizH1ovekx9F9znkg4sy17Xyu+cy17vy04WZex5f6Zoz90Le
h5/P3IeQ7l2aufegHPpS5n6DNPDLmXskX+hZa79FX7OuXf2MT+HXM/dLPtNz
ydxH+Vz7RD4Y/bfqFnWN7nGZ9nx0bPw4ur+iPL6E+eVwdfin6DXbUsTZc6Pj
quLZZn3P+EFxJ9qv/4utG+3LH0Z/v5WxMbi/Ij2wOPP5dN5Khd1UsPpGa7RX
M/eWvtFezfzMdNz64nw676rib4s3FHZzMd81usf1RXTvaq2uJ3Pv6ltdp+JG
ci7cwjGf5e6Tqyfzae7afyv8RZFPlVc/z90/V326UfsguC6WGFD/XLV8XszX
4vy9k/Or6v1vcvfbVXevzd3zV329Lvd7B9XU63PXmKoBv2XUDe4FqWfQBm7A
OXfl7u2rhv0+9/sL1ew7cvctJSJ+yP2uQbXwNrhFcN39c+6es+rxrbl7m6rf
f83d21Tf7KfcGkNa48fc7y9Um/9W5F/l4WuT8736FX/k7mmrlv8zd09etf9f
ud9ZqCewvbh+9aD2wB2Cew7qeXSRb3JfefT7C9Xj6hWppnuG+SeTeyjqqzxe
9DvUG6kWHXsVg0cmx1n1hQ5kvldwr2Dv6D62egXqG90K91FeSNYxqnFW5tYS
0hQf5+4Vb4ruZX6t2MX8XLgiXBb+mu8Ogcdj10TvR/HdHPMJ/CrHrMjdf94c
/Td0nZdLm0W/31FPpmz0vavvpF6OavYhHHM88zcH9yJeKPaT9udx0b1x9TGe
Se5PqR91d3IuVy+oZvQ9qndxBjwquAdyenQPX72UitG9aPXBykf35NUH0/XL
hxTvqkb359UvStHvodRTqhWtExRLK0f37dUr0zqoZ1yVOHksfKdiEXZioUWU
m/oXvRfVDlcn61G9R7s+uQel+uKeQqMoR0xK1iKK7ZOTtZfyV99k3anap1+y
xp1fxJmNRRy4N1ljKRaNS9ZYup65yTpDOa5nst5VjdwrWeOq9nwgWS8qH72e
W/+rDpierAUV569L1tyq9aYla0HFuqnJOlK5tYfEfO53Zw/lfv+o/sDTye8n
1KtclPz+T/vtueR3coq3fZL1vWo09bBX89vX+O7Z5Pd56jcuTH6fpz7k+GQN
qlx8TXJ/SrXqDck9LtXvU5J1rXLxg8k6WPn3oWSNpXw6MLl/qFr74WT9pPzb
PVmj6z1jt+TaSTV71+SaSjX1fcnaTjrhrmQtKx0yILnPqb7BrGSNqLw5J1nD
SWNMSNa70jOPJb+fUO6enawFpSXuTNZPemc3M1ljKWeNStZk0jmPJusw6YTR
yRpO2mlEsuZTXXxjcl9UvYvnk9/7yk+fSH5no/7zi8nvhhX/FyS/K1Lf9ank
90nqOT+SrAuVX/4HLQrGZA==
            "]], Polygon3DBox[CompressedData["
1:eJwtmgf8V1Mfx+895/6Fhoam0FB4UPZuEeFJ2Sq7RaVJJZWWSpqiIZW0ULak
SWayIiol5AkZD9mZT8/n7XNeL6ff+Zxz/3ec+z3f7+fzuWq373lRj5Bl2bX6
p9DvCfrnOf0+kmdZXpJl5YW7Cl8uvE39o9WWCy8U/kv9k9TWCD8mHHX88cKr
hRcLZ8IPCj+u/guC7WOWDQk+lr+5TvhAzU9Xf6TGvlK/vtrDwlOFf1S/qtoY
4X7CO9Svor+5QfhEnWeI8HFqq4QXaX6P+gep3Ss8Svhr9SuqDRDuLPyx+seo
rRB+UPhv9R9Se0L9FzXWQedeKnyg8DHCG3SNhRwjvFL4Ss0/I1xT+GjhdzVf
Triz+pdobKv6J6o9L/yocNDz19Pf9BU+U8feqblCY3PV/0xjH2vuCK6v/mwd
v1v9uhq7SbiZjrlDeBHn09y7GuujuYkaf074HeHewnXU+qjfVOOjdeyRas8I
z9Uxv6m/JfrZeAe8iwPUJgnfJrxT/UfV/hauqrZM5zhWxw9X/wL1J2vuMI4R
vk/H/6z+4WqPCc8U/kX9MmodhS8S/kD90modhC8U3sx66HyjWB+db6pwQ7Vl
wgs0/6f6DdSeFZ4v/If6ZdU6CV8svEX9E/T3I8H6+ym8b+ERnF/4buH91K4X
vlTHf6j+v4g34VnCv6p/lNpS4XnCv6t/vP7+du5Xf38P11aro7kTNLZJY/sI
X6v++Rp7X/3P1QapP1FjTfS3f6m1Vv90ja1l7YQvEG4k/Jrwn8KthE8TflW4
r/BG4ck6d4ne/e/CLYVP0fzLmr9BeK3w7cHP/4fw+cKnav4Vnk34VeERwff/
TXTsEaPE6mXRz3eT5ncJt41e377CPwh/KlxeeBd7WrhN9HrfrPnvhb8Wbpg5
pontTsKvCA8Pjp8ZandqbpbGGmtuj9rFxKfGXtdcrnYp8S38pvq/ab4FeUT4
JeFbhbcKT9f5Suv5BwhvYX+z1sK7hE8SrqfjV+j474RPFD5EeLnwLcIfCE/R
8XvreJLUJfo5Q/NvqB/VLhc+S/ht9fvp+E3Cd+v4vXT8Xhq7Svg89pD6pdSu
Fv638Ab1A2so3Fz4LfVL1K4UPpc9xn5Vu0L4HOH16vfX+TcL36Pzl9L5HyDf
aO4RYkZz7aLzY7/g/PU8OUfzzTX2ucYO1nxP4kf9kZrbV609+03HbCJ/ab4H
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

            "]], Polygon3DBox[CompressedData["
1:eJwt13f8leMbB/Dv95xTKUJDSluFltLUjlJJZonSoEUpRUMbCRkhpRTxy+6n
RUNUskppkzYVskKR9uB9vZ7++Lyu+3o/93Pmc9/POaW79L3pnlRWVtaXkkN+
T2dlZYPS2VlZF8r7maysfNKAddR3km/1P5n3t3F+KSDvsprylHmL9Gs81j3m
1GBPsg/ZataHVWdPsA/YKtabVWOPs4XxnDJdX0vGssX6teb1Na82e5otYetY
P3YZe4wtYCtZL1aFPcLmsS/YXawqe5TNZytYT/aEbNNn5Cw2y/En2XZ9TsnL
ZrOn2A79GXI2m8OmsSy1FKth+I3xa+wM9RJWj+0wfp3lVsuz+uxb4/+xf/Ul
pTrbyKayI/rCUpGtZi+xw/rzpQJbxV5hx/QXSGW2lr3MjuqLSCW2hr3IDukL
Sfn4jtmlPoPR6ly2nN1pzquSi13M6rLtxhXNG6nOZEvZ7eaUZ8PZO2wJ68Tq
sefZ52wzu5/VZxPZMraFDWYN2WS2gm1jQ9koWa/fr4+P8g3H65g3Xv2Uf8MG
OnAFe4mtimuPjWCN2BS2km1nw1gT9jJbw3ayB1hj9iL7ku1gw9kY2aLPkjzK
DMcfZ1v1KTmTzWQPsw36v/UeJuvN+IwMhqrT+dvypr6SjGLv6j83r4fzKrOH
2XtsGevOLmfPsU/YRjaA1WUT2GdsExvERstX+n9Or8m3HH+MbWan9LnlHfYo
28iO6HPJdPYI+5od0ueUt1kFzzFCncE/Yp3NuZJNZavZd2wkGy8/69NxbbFF
jj/LdusP68+TBay4c7urE/hbrLk5pVjvuObYTHYdK836xDXMZrHr2YUsNpyp
bDa7gRVj3dj4+DxZC1aS3c2msMkyTV9CerDn47M372rzzpQ8EceqOjZELSDN
jQeZ97h55R0vxwbGWoz9hd3KLmKD2BtsIWvHyrIBsY7ZAtaWnc/axmfLXmCX
syKsQ+wV7AmZoi8st8T3Eq/ZvLrmFWWd2Fj2CmvMLmAdY09hL7NGrBC7mY1m
k1gdVob1Z6+y+ewWdh67jo1gz7CqrCC7lg1nw2ScPi8/Kz4f48scG6qO03/v
+FHnFZL3eS6WM/Ynxyvr71dz6DOxj8W1HZ+j+oJ+n3PPkTLO/ZxPZvv150pZ
tiy+G/arPpcUY0vYJLY31pWUYEvje2V/6fNJObacPcd+0mfHPsY+jGuM/aLP
IUXZYvYM26U/qC8o89nTbCc7oC8g89hE9hvLLcXZR7Evey/D1P+zxayjOeey
2qwHG8KKxj0wnWxKOR2r4NgA9aR6QnIYl1f7q/+qpyRjfIl6n5p2Xir2VOOK
bGDcQ+N5JK9x9fiu4jrV55ezjWvEd6qeF9+nnBP3Uzby9P23oXEfr6+3PKrP
L83isfVjvNQKcU48VnzvjlVzbJiakrLGrc3rbt7h03vYkFSyrmJ9Hcgk998x
qWRPi73tlP69dPI4WzLJa4/3MDedvP6tmeS1x3v4Qm5g/Zz3sOeorl8hN7J7
2WhWQ/+WFGaXs2vit0asvXjdahXWhP1o/GasObU2a8n2Gs9OJ9fnRs97Rlyv
8nasYdbMvHbmHYv7ELta7clGsMr6ZdKS9WIj2aX65XINu5s9wKroP5MW7C42
nFXSL4x9m90anz0rpv8w9m3Wnt3DSuhXy61sMHuK1devkXaxJ7GxrIF+rbSP
9cieZg31K+WmuHbYI6ym/ktpHddYfN+sln6VtIlrkT3GauvnpJN9b1MmWe+x
7hdILdbWvJ7mFda/m072gc2Z5BqJa2VmOrk+v8ok6z3W/RYZzF5w7gzndtBv
l2fZHPYZ6x/3GLmLjWEvsVZxL5KecS9lU9m1cU+VB+P3DpvLusbalW/0x/TH
417m+bexh8ybxuexbvp/Ys2wquyy+B1i3qm4N7BG+saykm1gXdgo/fPOvUr/
lXSNezibyJrpN8t9sc+wN9jN+nfSyVpen0nWe6z76XIxa25e+3iNsV+kk/W9
LpPsAbEXzEgne8OGTLLeY92vk9vZg84d79wm+vVyB3uITWBN9ZvkXjaOvc7a
xGci/eKey15jrfVj08meGXvnNMd26Gelk33560yyd8cePj+d7BfbWaFYPzIv
newr2zLJnhJ7ywdSh7XzeH08bnH9CSnGrmGd2H7jA3EtqfXZ9Wy38d+xt6j1
2HVsl/FedlJfSRqxDfHZsOJqK9aZ/WX8Lyut3sC6sH9SyXdZSr0+Hk/6ep3Z
UobdpO9m3iHj4+YVVVuyjmyf8W/xuvUVpSFbx35lx/UVpAFbn0r+z6RSyfUT
19GdmeTefVsquVfGPXNPJrmHtkol+2vss7syyW+QXqnk/h73+b2xt0s51kbf
w3McMf7Tc2TU6uwqttl4X6wntQZrxrYY/8XOVOuya9l3xvtZHrUOa8V2Gv8R
15JajTVlm1LJD9AL1RtZV+1B42PmXaBezTqwP4yPsiJqC3Yb+9P4IMuvXsFa
sz3GH7Er1DvYAFZWv0Qas9tZf1ZG38DzTmLL2VY2hC2VK1kXNpCV0y+W+qwD
68dK6T+Rpqwbu59drF8k9dht8X2zkvpP5SrWnQ1ml+g/liasKxvELtJ/Lz9m
J/8343/nzZnEfjA+Yc7J+N3OfmB7WEG5iC1MJf9XD2Qn/2njv21n847EmnCs
qb6teb8YH2IF1CtZG/ZTKtmH8qWS/Sb2nd7OPcwKsibxOsz72fgXdjB+C0kt
toL9HPtY/GaSmuwLtof9Eb+PpAr7mP3Ifo/fOHIp+ySV7JObspP3Fe+vpefd
zb5lZ0lJ9l4q+R8R/yfGGb8a78e8/wA/mOMk
            "]]},
          Annotation[#, "Charting`Private`Tag$53717#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0UsrplEAwPHjZQzvuMySFNlJje2k2EqxUlLsJMWChY1ZzMJqfAK+wPAB
xNrlfd0vyf32uqQxNS5NmiZR+J1Y/Pudns55zumcys7+lr6sEMJ33SmOfyZC
+MwJVnCWNdxkPc/YHOezg898Ua9xWXYI31jNYdZylI0cZxun2M10/Bd/8Vbb
utZvzTjITtybu5zjHlPcZ5oHnOchF7ioI+MlHnOZJ1xhhqs85RrPuM5zbvCC
Q86yxQGm2MVJtnKMDRzhV/5gFQdZyhL1GD+5h3besIkZ1sU9+IXTLI/fzb+M
81SsP7pS0lmKmMdC5rKAOfzEBJPh7aHy493HuXFfPeqjHuI6/dcH/YvrdS/b
hr/xP+/v/QobcEis
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{676, 463, 675, 1093, 898, 677, 1094, 899, 678, 1095, 900, 
        679, 1096, 901, 680, 1097, 902, 681, 1098, 992, 1195, 682, 1099, 903, 
        683, 1100, 904, 684, 1101, 905, 685, 1102, 906, 686, 1103, 907, 687, 
        1104, 908, 688, 1298, 988, 909, 989}], 
       Line3DBox[{690, 993, 1196, 689, 478, 691, 1105, 910, 692, 1106, 911, 
        693, 1107, 912, 694, 1108, 913, 695, 1109, 994, 1197, 696, 995, 1198, 
        697, 1110, 914, 698, 1111, 915, 699, 1112, 916, 700, 1113, 917, 701, 
        1114, 918, 702, 1115, 919, 703}], 
       Line3DBox[{705, 996, 1199, 704, 997, 1200, 706, 494, 707, 1116, 920, 
        708, 1117, 921, 709, 1118, 922, 710, 1119, 998, 1201, 711, 999, 1202, 
        712, 1000, 1203, 713, 1120, 923, 714, 1121, 924, 715, 1122, 925, 716, 
        1123, 926, 717, 1124, 927, 718}], 
       Line3DBox[{720, 1001, 1204, 719, 1002, 1205, 721, 1003, 1206, 722, 510,
         723, 1125, 928, 724, 1126, 929, 725, 1127, 1004, 1207, 726, 1005, 
        1208, 727, 1006, 1209, 728, 1007, 1210, 729, 518, 730, 1128, 930, 731,
         1129, 931, 732, 1130, 932, 733}], 
       Line3DBox[{735, 1008, 1211, 734, 1009, 1212, 736, 1010, 1213, 737, 
        1011, 1214, 738, 526, 739, 1131, 933, 740, 1132, 1012, 1215, 741, 
        1013, 1216, 742, 1014, 1217, 743, 1015, 1218, 744, 1016, 1219, 745, 
        534, 746, 1133, 934, 747, 1134, 935, 748}], 
       Line3DBox[{750, 1017, 1220, 749, 1018, 1221, 751, 1019, 1222, 752, 
        1020, 1223, 753, 1021, 1224, 754, 542, 755, 1135, 1022, 1225, 756, 
        1023, 1226, 757, 1024, 1227, 758, 1025, 1228, 759, 1026, 1229, 760, 
        1027, 1230, 761, 1136, 936, 762, 1137, 937, 763}], 
       Line3DBox[{767, 1138, 938, 765, 1139, 939, 769, 1140, 940, 771, 1141, 
        941, 773, 1142, 942, 775, 1143, 943, 777, 1144, 559, 779, 1145, 944, 
        781, 1146, 945, 783, 1147, 946, 785, 1148, 947, 787, 1149, 948, 789, 
        1150, 949, 791, 1152, 951, 793}], 
       Line3DBox[{792, 950, 1151, 790, 1243, 1039, 788, 1242, 1038, 786, 1241,
         1037, 784, 1240, 1036, 782, 1239, 1035, 780, 1238, 1034, 778, 1237, 
        558, 776, 1236, 1033, 774, 1235, 1032, 772, 1234, 1031, 770, 1233, 
        1030, 768, 1232, 1029, 764, 1231, 1028, 766}], 
       Line3DBox[{795, 1040, 1244, 794, 1153, 952, 796, 1154, 953, 797, 1155, 
        954, 798, 1156, 955, 799, 1157, 956, 800, 1158, 1041, 1245, 801, 575, 
        802, 1159, 957, 803, 1160, 958, 804, 1161, 959, 805, 1162, 960, 806, 
        1163, 961, 807, 1164, 962, 808}], 
       Line3DBox[{810, 1042, 1246, 809, 1043, 1247, 811, 1165, 963, 812, 1166,
         964, 813, 1167, 965, 814, 1168, 966, 815, 1169, 1044, 1248, 816, 
        1045, 1249, 817, 591, 818, 1170, 967, 819, 1171, 968, 820, 1172, 969, 
        821, 1173, 970, 822, 1174, 971, 823}], 
       Line3DBox[{825, 1046, 1250, 824, 1047, 1251, 826, 1048, 1252, 827, 
        1175, 972, 828, 1176, 973, 829, 1177, 974, 830, 1178, 1049, 1253, 831,
         1050, 1254, 832, 1051, 1255, 833, 607, 834, 1179, 975, 835, 1180, 
        976, 836, 1181, 977, 837, 1182, 978, 838}], 
       Line3DBox[{840, 1052, 1256, 839, 1053, 1257, 841, 1054, 1258, 842, 615,
         843, 1183, 979, 844, 1184, 980, 845, 1185, 1055, 1259, 846, 1056, 
        1260, 847, 1057, 1261, 848, 1058, 1262, 849, 623, 850, 1186, 981, 851,
         1187, 982, 852, 1188, 983, 853}], 
       Line3DBox[{855, 1059, 1263, 854, 1060, 1264, 856, 1061, 1265, 857, 
        1062, 1266, 858, 631, 859, 1189, 984, 860, 1190, 1063, 1267, 861, 
        1064, 1268, 862, 1065, 1269, 863, 1066, 1270, 864, 1067, 1271, 865, 
        639, 866, 1191, 985, 867, 1192, 986, 868}], 
       Line3DBox[{870, 1068, 1272, 869, 1069, 1273, 871, 1070, 1274, 872, 
        1071, 1275, 873, 1072, 1276, 874, 1073, 1277, 875, 1193, 1074, 1278, 
        876, 1075, 1279, 877, 1076, 1280, 878, 1077, 1281, 879, 1078, 1282, 
        880, 1079, 1283, 881, 655, 882, 1194, 987, 883}], 
       Line3DBox[{897, 671, 896, 1297, 1091, 895, 1296, 1090, 894, 1295, 1089,
         893, 1294, 1088, 892, 1293, 1087, 891, 1292, 1086, 890, 1291, 1290, 
        1085, 889, 1289, 1084, 888, 1288, 1083, 887, 1287, 1082, 886, 1286, 
        1081, 885, 1285, 1080, 884, 1092, 1284, 990, 991}]}, 
      {GrayLevel[0.2], 
       Line3DBox[{238, 463, 239, 1196, 477, 268, 1199, 492, 283, 1204, 507, 
        298, 1211, 522, 313, 1220, 537, 328, 1231, 552, 1138, 343, 1244, 567, 
        358, 1246, 582, 373, 1250, 597, 388, 1256, 612, 403, 1263, 627, 418, 
        1272, 642, 433, 1284, 674, 657, 448}], 
       Line3DBox[{240, 464, 1093, 241, 478, 269, 1200, 493, 284, 1205, 508, 
        299, 1212, 523, 314, 1221, 538, 329, 1232, 553, 1139, 344, 568, 1153, 
        359, 1247, 583, 374, 1251, 598, 389, 1257, 613, 404, 1264, 628, 419, 
        1273, 643, 434, 1285, 658, 449}], 
       Line3DBox[{242, 465, 1094, 243, 479, 1105, 270, 494, 285, 1206, 509, 
        300, 1213, 524, 315, 1222, 539, 330, 1233, 554, 1140, 345, 569, 1154, 
        360, 584, 1165, 375, 1252, 599, 390, 1258, 614, 405, 1265, 629, 420, 
        1274, 644, 435, 1286, 659, 450}], 
       Line3DBox[{244, 466, 1095, 245, 480, 1106, 271, 495, 1116, 286, 510, 
        301, 1214, 525, 316, 1223, 540, 331, 1234, 555, 1141, 346, 570, 1155, 
        361, 585, 1166, 376, 600, 1175, 391, 615, 406, 1266, 630, 421, 1275, 
        645, 436, 1287, 660, 451}], 
       Line3DBox[{246, 467, 1096, 247, 481, 1107, 272, 496, 1117, 287, 511, 
        1125, 302, 526, 317, 1224, 541, 332, 1235, 556, 1142, 347, 571, 1156, 
        362, 586, 1167, 377, 601, 1176, 392, 616, 1183, 407, 631, 422, 1276, 
        646, 437, 1288, 661, 452}], 
       Line3DBox[{248, 468, 1097, 249, 482, 1108, 273, 497, 1118, 288, 512, 
        1126, 303, 527, 1131, 318, 542, 333, 1236, 557, 1143, 348, 572, 1157, 
        363, 587, 1168, 378, 602, 1177, 393, 617, 1184, 408, 632, 1189, 423, 
        1277, 647, 438, 1289, 662, 453}], 
       Line3DBox[{250, 469, 1098, 252, 483, 1109, 274, 498, 1119, 289, 513, 
        1127, 304, 528, 1132, 319, 543, 1135, 334, 558, 1144, 349, 573, 1158, 
        364, 588, 1169, 379, 603, 1178, 394, 618, 1185, 409, 633, 1190, 424, 
        648, 1193, 439, 1290, 663, 454}], 
       Line3DBox[{254, 471, 1099, 255, 1198, 485, 276, 1202, 500, 291, 1208, 
        515, 306, 1216, 530, 321, 1226, 545, 336, 1238, 560, 1145, 351, 575, 
        366, 1249, 590, 381, 1254, 605, 396, 1260, 620, 411, 1268, 635, 426, 
        1279, 650, 441, 1292, 665, 456}], 
       Line3DBox[{256, 472, 1100, 257, 486, 1110, 277, 1203, 501, 292, 1209, 
        516, 307, 1217, 531, 322, 1227, 546, 337, 1239, 561, 1146, 352, 576, 
        1159, 367, 591, 382, 1255, 606, 397, 1261, 621, 412, 1269, 636, 427, 
        1280, 651, 442, 1293, 666, 457}], 
       Line3DBox[{258, 473, 1101, 259, 487, 1111, 278, 502, 1120, 293, 1210, 
        517, 308, 1218, 532, 323, 1228, 547, 338, 1240, 562, 1147, 353, 577, 
        1160, 368, 592, 1170, 383, 607, 398, 1262, 622, 413, 1270, 637, 428, 
        1281, 652, 443, 1294, 667, 458}], 
       Line3DBox[{260, 474, 1102, 261, 488, 1112, 279, 503, 1121, 294, 518, 
        309, 1219, 533, 324, 1229, 548, 339, 1241, 563, 1148, 354, 578, 1161, 
        369, 593, 1171, 384, 608, 1179, 399, 623, 414, 1271, 638, 429, 1282, 
        653, 444, 1295, 668, 459}], 
       Line3DBox[{262, 475, 1103, 263, 489, 1113, 280, 504, 1122, 295, 519, 
        1128, 310, 534, 325, 1230, 549, 340, 1242, 564, 1149, 355, 579, 1162, 
        370, 594, 1172, 385, 609, 1180, 400, 624, 1186, 415, 639, 430, 1283, 
        654, 445, 1296, 669, 460}], 
       Line3DBox[{264, 476, 1104, 265, 490, 1114, 281, 505, 1123, 296, 520, 
        1129, 311, 535, 1133, 326, 550, 1136, 341, 1243, 565, 1150, 356, 580, 
        1163, 371, 595, 1173, 386, 610, 1181, 401, 625, 1187, 416, 640, 1191, 
        431, 655, 446, 1297, 670, 461}], 
       Line3DBox[{266, 672, 1298, 673, 267, 491, 1115, 282, 506, 1124, 297, 
        521, 1130, 312, 536, 1134, 327, 551, 1137, 342, 566, 1151, 1152, 357, 
        581, 1164, 372, 596, 1174, 387, 611, 1182, 402, 626, 1188, 417, 641, 
        1192, 432, 656, 1194, 447, 671, 462}], 
       Line3DBox[{455, 664, 1291, 440, 649, 1278, 425, 634, 1267, 410, 619, 
        1259, 395, 604, 1253, 380, 589, 1248, 365, 574, 1245, 350, 559, 1237, 
        335, 544, 1225, 320, 529, 1215, 305, 514, 1207, 290, 499, 1201, 275, 
        484, 1197, 253, 470, 1195, 251}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
     "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{324.17461546561145`, 171.72567600992028`},
  ImageSizeRaw->Automatic,
  PlotRange->{{-97.2837534149674, 95.86186376322797}, {-94.30760896136493, 
    94.01194940459482}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.9190901612163056, -3.1668172447034673`, 0.759303505986985},
  ViewVertical->{0.11542024326468711`, -0.3777822397591305, 
   2.2966806846611467`}]], "Output",
 CellChangeTimes->{{3.7526984703179197`*^9, 3.75269848547589*^9}, {
   3.752698523842031*^9, 3.752698538847871*^9}, 3.752698582410046*^9, 
   3.752699620389246*^9, 3.752699665799597*^9, 3.7526997837758913`*^9, 
   3.752699942857581*^9, 3.752700003704784*^9, 3.752700057922907*^9, 
   3.7527000982671833`*^9, {3.752700143077948*^9, 3.752700161186358*^9}, {
   3.752700316525819*^9, 3.752700333046401*^9}, {3.752700390163055*^9, 
   3.752700417714987*^9}, 3.7527004707229223`*^9, 3.752700554271154*^9, 
   3.752700605028862*^9, 3.752700892589911*^9, 3.752701153839548*^9, 
   3.752741287040262*^9, 3.7527413191520023`*^9, 3.752741695177779*^9, 
   3.752742118611268*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"fd9c1a6f-4c98-4328-ab8e-f90266766862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"W", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["w", "1"], ",", " ", 
    SubscriptBox["w", 
     RowBox[{"2", " "}]], ",", "b"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.752698611279356*^9, 3.752698645697431*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"a99eebd2-17a8-41b5-973d-9b923543d0b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["w", "1"], ",", 
   SubscriptBox["w", "2"], ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{
  3.75269864853185*^9, 3.752699620523488*^9, 3.752699665940118*^9, 
   3.752699783910019*^9, 3.7526999429951963`*^9, 3.752700003792674*^9, 
   3.75270005805341*^9, 3.752700098383998*^9, {3.752700143215019*^9, 
   3.7527001613230333`*^9}, {3.7527003166628313`*^9, 3.752700333135968*^9}, {
   3.752700390284915*^9, 3.7527004178032093`*^9}, 3.7527004708582773`*^9, 
   3.7527005543589687`*^9, 3.752700605161345*^9, 3.752700892711438*^9, 
   3.7527011539638557`*^9, 3.752741287157243*^9, 3.7527413192471647`*^9, 
   3.752741695294455*^9, 3.752742118689454*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"25ad6c84-c4ff-47a1-82cf-a2aeb27cdb10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"W", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "}"}]}], " ", "-",
        " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "^", "2"}], " ", "&"}], " ", 
   "/@", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"X", ",", "Y", ",", "2"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.752699416247966*^9, 3.7526995314369698`*^9}, {
  3.752699594670211*^9, 3.752699595295953*^9}, {3.752700054340033*^9, 
  3.7527000550831947`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"c0a251b0-ce0f-4b67-b0bd-bedf3b8881ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"606.0447713124651`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"64.90675018930995`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"16.494154636678275`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1103.7687944478575`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"90.57568607867859`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"61.24536932859516`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"195.74803151925244`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"74.8660191412012`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"59.40231386233029`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "721.5223964018885`"}], "+", "b", "-", 
      RowBox[{"56.665913305723535`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"41.36609036440359`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"737.1699164029387`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"47.61844578986245`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"54.92911574155147`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"449.70454941689314`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"13.188439723704732`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"51.194501495476345`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "80.17561738523399`"}], "+", "b", "+", 
      RowBox[{"13.790023167916274`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"28.62712941841903`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"728.3293443056542`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"95.86186376322797`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"2.0267760588899932`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "287.0763607345971`"}], "+", "b", "+", 
      RowBox[{"4.736206192264376`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"48.245795113981956`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "277.1980003029164`"}], "+", "b", "-", 
      RowBox[{"18.50952961311998`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"17.902247736883055`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1178.4038342806748`"}], "+", "b", "-", 
      RowBox[{"71.9470417538214`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"87.17083051387687`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1099.8380164676769`"}], "+", "b", "-", 
      RowBox[{"95.15724381958358`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"51.07139737038818`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "308.63798053898165`"}], "+", "b", "-", 
      RowBox[{"97.2837534149674`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"66.43847981573882`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"382.257815176056`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"11.783082430501906`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"44.31638519892087`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "63.89630742805988`"}], "+", "b", "-", 
      RowBox[{"51.1064834930074`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"51.860709715325726`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "864.4048982816178`"}], "+", "b", "-", 
      RowBox[{"78.99505069866831`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"36.2512871711794`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "770.2235519542076`"}], "+", "b", "-", 
      RowBox[{"86.82684552333635`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"12.495228597978723`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"135.8051397109336`", "\[VeryThinSpace]", "+", "b", "-", 
      RowBox[{"33.57724139900063`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"57.11623801610068`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "985.5528963865769`"}], "+", "b", "-", 
      RowBox[{"70.62895632638515`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"61.55700890500094`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "292.43601861421814`"}], "+", "b", "-", 
      RowBox[{"45.34632262006997`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"8.107550362597692`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "26.51095551251679`"}], "+", "b", "-", 
      RowBox[{"53.07605003358398`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"57.178056656781536`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"94.13555342711688`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"91.44350899512551`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"89.68671317472905`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "893.4945945928408`"}], "+", "b", "-", 
      RowBox[{"41.75402272718776`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"85.54165808221609`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "66.95087364843535`"}], "+", "b", "-", 
      RowBox[{"17.327306506151956`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"12.18564942997142`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "403.24850921313265`"}], "+", "b", "-", 
      RowBox[{"86.85320061340263`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"42.0381902435912`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1244.1224445425235`"}], "+", "b", "-", 
      RowBox[{"89.4535190447128`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"82.09773327939854`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1130.4313972523842`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"76.88806623259262`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"79.40052262374303`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "223.39998860979853`"}], "+", "b", "+", 
      RowBox[{"48.558562833200654`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"85.37946513667805`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "193.10629330789277`"}], "+", "b", "-", 
      RowBox[{"76.15923941312803`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"61.435433987417014`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"88.87583184610187`", "\[VeryThinSpace]", "+", "b", "-", 
      RowBox[{"21.136243581578242`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"37.65688300583747`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"76.5990625424022`", "\[VeryThinSpace]", "+", "b", "-", 
      RowBox[{"52.30999455987617`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"71.66963011942153`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"237.13698139088515`", "\[VeryThinSpace]", "+", "b", "-", 
      RowBox[{"47.82867324844341`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"88.74078537771669`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"17.720645339863268`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"19.035235991037496`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"20.053304809230497`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"67.27164486485103`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"51.51329746463375`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"47.81207540791411`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "278.9952208341248`"}], "+", "b", "-", 
      RowBox[{"10.963377912896135`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"29.027308975284825`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "370.08633571546403`"}], "+", "b", "-", 
      RowBox[{"41.97754786456204`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"5.952977660561032`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"536.0693933155759`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"80.44058696439788`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"12.16468311656024`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"336.35427783199873`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"56.20700257587009`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"14.781105585389412`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "237.9387463899235`"}], "+", "b", "+", 
      RowBox[{"44.54654451936773`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"84.90626852470405`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"820.5271542368237`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"85.62878370968059`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"23.59644730008506`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "97.13171186077554`"}], "+", "b", "-", 
      RowBox[{"23.247762953713732`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"13.83664887026714`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "121.94845071851933`"}], "+", "b", "+", 
      RowBox[{"63.515564658956066`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"88.55188880452533`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"400.058034624256`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"73.03740162684733`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"24.741718295858618`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"134.680373156514`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"48.56223406397464`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"34.522235124465624`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1103.2090927800627`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"62.104352440612956`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"94.30760896136493`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1086.8968623405437`"}], "+", "b", "-", 
      RowBox[{"56.783751229541934`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"94.01194940459482`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"483.7651490588683`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"8.947998135298917`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"63.883316708972075`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "121.09092585943804`"}], "+", "b", "+", 
      RowBox[{"2.8646019031992864`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"19.616594138721496`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "30.647969473425825`"}], "+", "b", "-", 
      RowBox[{"7.649482144173874`", " ", 
       SubscriptBox["w", "1"]}], "-", 
      RowBox[{"4.915528358813219`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"45.76655300017002`", "\[VeryThinSpace]", "+", "b", "+", 
      RowBox[{"22.130951403101108`", " ", 
       SubscriptBox["w", "1"]}], "+", 
      RowBox[{"18.423689655911744`", " ", 
       SubscriptBox["w", "2"]}]}], ")"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7526995329224863`*^9, {3.7526996077965307`*^9, 3.752699620657467*^9}, 
   3.75269966602003*^9, 3.752699783997941*^9, 3.752699943076055*^9, 
   3.7527000038600197`*^9, 3.752700058141162*^9, 3.7527000984514513`*^9, {
   3.752700143297798*^9, 3.7527001614058647`*^9}, {3.752700316744233*^9, 
   3.752700333205765*^9}, {3.7527003903516617`*^9, 3.75270041788872*^9}, 
   3.7527004709421587`*^9, 3.7527005544447727`*^9, 3.752700605244776*^9, 
   3.7527008927959957`*^9, 3.752701154047497*^9, 3.752741287236315*^9, 
   3.7527413193608093`*^9, 3.752741695381069*^9, 3.752742118754429*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"421a913f-3370-4a03-b0e3-8401f7bd1187"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mse", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Fold", "[", 
     RowBox[{"Plus", ",", " ", "0", ",", " ", "%"}], "]"}], "/", "NN"}], "//",
    "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.752699563919313*^9, 3.752699612504283*^9}, {
  3.752699648429902*^9, 3.752699654307*^9}, {3.75269992998036*^9, 
  3.752699939925788*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"51cad285-2285-4e51-a38d-beb319fe721c"],

Cell[BoxData[
 RowBox[{"340126.43831534684`", "\[VeryThinSpace]", "-", 
  RowBox[{"96.54025017744323`", " ", "b"}], "+", 
  SuperscriptBox["b", "2"], "+", 
  RowBox[{"3479.103710729529`", " ", 
   SubsuperscriptBox["w", "1", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "39355.897105396354`"}], "+", 
     RowBox[{"8.833610733404338`", " ", "b"}]}], ")"}], " ", 
   SubscriptBox["w", "2"]}], "+", 
  RowBox[{"2988.3170769322414`", " ", 
   SubsuperscriptBox["w", "2", "2"]}], "+", 
  RowBox[{
   SubscriptBox["w", "1"], " ", 
   RowBox[{"(", 
    RowBox[{"53089.53268872073`", "\[VeryThinSpace]", "-", 
     RowBox[{"3.1925337522428934`", " ", "b"}], "+", 
     RowBox[{"153.34666552726347`", " ", 
      SubscriptBox["w", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7526996132351103`*^9, 3.752699620738302*^9}, 
   3.752699666100225*^9, 3.752699784077161*^9, 3.7526999431569366`*^9, 
   3.752700003944604*^9, 3.752700058234344*^9, 3.752700098518898*^9, {
   3.7527001433811274`*^9, 3.75270016148955*^9}, {3.75270031682872*^9, 
   3.752700333290803*^9}, {3.752700390436522*^9, 3.752700417972542*^9}, 
   3.752700471025938*^9, 3.75270055452903*^9, 3.7527006053283873`*^9, 
   3.7527008928791447`*^9, 3.752701154131351*^9, 3.7527412873203793`*^9, 
   3.752741319449525*^9, 3.7527416954600983`*^9, 3.752742118822023*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"4bdf25fe-0fc9-4bc1-9427-a4424bb06ff5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grad", "[", 
  RowBox[{"mse", ",", "W"}], "]"}]], "Input",
 CellChangeTimes->{{3.7526996986501226`*^9, 3.752699723933957*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"ba111e0f-9221-470a-8f55-2f06a7e350ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"53089.53268872073`", "\[VeryThinSpace]", "-", 
    RowBox[{"3.1925337522428934`", " ", "b"}], "+", 
    RowBox[{"6958.207421459058`", " ", 
     SubscriptBox["w", "1"]}], "+", 
    RowBox[{"153.34666552726347`", " ", 
     SubscriptBox["w", "2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "39355.897105396354`"}], "+", 
    RowBox[{"8.833610733404338`", " ", "b"}], "+", 
    RowBox[{"153.34666552726347`", " ", 
     SubscriptBox["w", "1"]}], "+", 
    RowBox[{"5976.634153864483`", " ", 
     SubscriptBox["w", "2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "96.54025017744323`"}], "+", 
    RowBox[{"2", " ", "b"}], "-", 
    RowBox[{"3.1925337522428934`", " ", 
     SubscriptBox["w", "1"]}], "+", 
    RowBox[{"8.833610733404338`", " ", 
     SubscriptBox["w", "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.752699726112381*^9, 3.75269978415948*^9, 3.7526999432551394`*^9, 
   3.752700004027173*^9, 3.752700058301194*^9, 3.752700098585112*^9, {
   3.752700143464984*^9, 3.752700161572741*^9}, {3.752700316912785*^9, 
   3.752700333420137*^9}, {3.752700390519731*^9, 3.7527004180607777`*^9}, 
   3.752700471110545*^9, 3.752700554612507*^9, 3.752700605412818*^9, 
   3.7527008929624567`*^9, 3.752701154218121*^9, 3.752741287456933*^9, 
   3.752741319531618*^9, 3.752741695544414*^9, 3.752742118887385*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"23dbc061-e8f6-48bc-9886-debe8dfeac9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"%", "\[Equal]", "0"}], "]"}], ",", "W"}], "]"}], "//", 
  "Flatten"}]], "Input",
 CellChangeTimes->{{3.752699746195965*^9, 3.752699779677822*^9}, {
  3.75270009225209*^9, 3.752700094982872*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"da49db0d-05c8-4776-99a4-ba48dd06dd89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["w", "1"], "\[Rule]", 
    RowBox[{"-", "7.776375711650808`"}]}], ",", 
   RowBox[{
    SubscriptBox["w", "2"], "\[Rule]", "6.775719366296659`"}], ",", 
   RowBox[{"b", "\[Rule]", "5.929920463608969`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.75269975597178*^9, 3.7526997842407303`*^9}, 
   3.752699943336493*^9, 3.752700004113188*^9, 3.752700058386945*^9, 
   3.752700098666788*^9, {3.752700143548327*^9, 3.7527001616566*^9}, {
   3.752700316994417*^9, 3.752700333626163*^9}, {3.752700390605764*^9, 
   3.752700418138008*^9}, 3.752700471195798*^9, 3.7527005546964703`*^9, 
   3.752700605495002*^9, 3.7527008930461073`*^9, 3.75270115429858*^9, 
   3.752741287536985*^9, 3.752741319616775*^9, 3.7527416956271067`*^9, 
   3.752742118956094*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"c8bfd04e-7273-4fda-ab65-3bc89c17e9aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"estSurface", " ", "=", " ", 
  RowBox[{
   RowBox[{"W", ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "1"], ",", 
      SubscriptBox["x", "2"], ",", " ", "1"}], "}"}]}], " ", "/.", 
   "%"}]}]], "Input",
 CellChangeTimes->{{3.7527001214968224`*^9, 3.752700157475891*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"9d512eb3-d3c4-423a-bbea-f13b0a0a4ff3"],

Cell[BoxData[
 RowBox[{"5.929920463608969`", "\[VeryThinSpace]", "-", 
  RowBox[{"7.776375711650808`", " ", 
   SubscriptBox["x", "1"]}], "+", 
  RowBox[{"6.775719366296659`", " ", 
   SubscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.752700143633514*^9, 3.752700161737399*^9}, {
   3.7527003170796413`*^9, 3.752700333842628*^9}, {3.752700390688035*^9, 
   3.752700418223797*^9}, 3.752700471276265*^9, 3.752700554779538*^9, 
   3.752700605578834*^9, 3.752700893129237*^9, 3.752701154378442*^9, 
   3.752741287618145*^9, 3.752741319698749*^9, 3.752741695707758*^9, 
   3.752742119022805*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ac2c81c9-8c5f-4af4-8f34-f2c17878bda6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"genSurface", "-", " ", "estSurface"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", " ", 
     RowBox[{"-", "1000"}], ",", " ", "1000"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "2"], ",", " ", 
     RowBox[{"-", "1000"}], ",", " ", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.752700189542981*^9, 3.7527002692779913`*^9}, {
  3.752700307584318*^9, 3.752700312755333*^9}, {3.752700406593081*^9, 
  3.752700411958582*^9}, {3.752700449745244*^9, 3.752700477835672*^9}, {
  3.752700532015443*^9, 3.752700548488418*^9}, {3.752700594256749*^9, 
  3.752700602316457*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"fb1b0977-62a8-4b10-b478-f4c22781db1d"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Ix3dovWu2djCM7j3MX1Rix08E15cZq87aLw1PIOvqdd6kGUJz4RPGJ7Xe+RV
c3gG7zNT/fVPU3gmPOaNneokOxN4Jvxvv6d9KgoN4Rm8fITWG/O+8Aw+8ona
p5U68Az+brhyS1NveAaPeqwoO0YNnglvfXtYQT+tOzyD/zz0lxskC8+E/1AN
+pjt0YL112R8127oLVI2NIVn8DGp3ss+SfYZAP/A8lwfbAzPhP8dkjqf3cMA
nsFfsmZ7zO4Dz+CTUmYGPNOCZ8Kjv3ZMDRVpwDPhz7+1X6cHq8Az4Rfl2guf
6SnAM+HNVq3Tqx78LSaeCa9b13DC9NVX7DNAOJU8ZYLmvpPYZ4Bw3QbtLQZn
PmGfAcKVA1TehBX+wT4DhCtsVFyYrdaN+nc/AWHh3xjxfgKEk/Fyc/xA/0e8
huJ/9yXobF8r3peAcLSfOnj0vi3txf/uS9DZ/o94XwLCSXtq14pQX7XC4n/3
KxAWtnYM69qvgHDSXjd2zoVsi4+if/cx6GzfV7yPAeGkvbLipa85La2if/c3
EBY2jxTvb0A4aa8QG8biH5On/t33QFhY20F17XtAONqPm9Dd8G1PipwPpH0q
k+ckHH7M2d2XZKpL1skz7ZWZfRIIJ+3n5pxUWWCiJVnvzbRXYPZPIJy0l9Pg
aMy4qCu1r0Jne2ZfBcLRPvOU9oQQfan9FjrbM/stEI72ss59Q+qNpPZhEBbK
MfswEE7ay3o+X7u31ERqf4bO9sz+DISj/YI+6w3Wmknt29DZ/t99G9C+9Ozo
jdljLXA+k+c5xSk9BsRrKmH9DPi07tS6dyys6wD36Tksor8q1iEQLq+/7Ji5
R2/UzYNnKZzWfayNOm/C0+UzCpRn6eH8QftExUssRUOcJ4S/+31lQmu5Mc4H
wpt48hPnbTfF94u6p1i/yK/TzCV1e4QfTZ8yzcVSUmfGcNm6q9PeyVjjewE3
7zZj3D0b+AcP6xf9ZJsdPBOetm1pTNBUB3gmz8fysq/HHDfRh2fwjHEjLmbq
wjPh6bHjJ+y5aATPyM/9+Mq5c9gEngn3YTvx+sWZwTN4VAy/2McCngnfs/+E
0FXVCp7Rf9U3tzMvreGZ8GH6bE+HQ7bwTHjFyFjRwXn28Ay+/qS3ibcjPBP+
YOqv3XcV2PAMvlR3b48vbHgG3yPc5/+QA8+Em5SM2p9+wRmeSb5Bbso2pSx9
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
kazPPBR7T8/6TEhxMn/W5yiK4a9F64lvuOfi6J7+brhQ1ucuitWTonu5mqtn
onu2Wp93Bff5tXfyZX22pPj/XHSvUrHim+j+l2qxr6N7RqqtCmZ9ZqOcsjG6
/6Ua7c3oswrt/Zj1uZE0QMj6PEn5Yl70OYdiwhvR+mkTXDXrelI6sErWNaQ0
3pxoHab9+Hq0rtoIV8y6LpWePDvrelUaqULWtag00sTofrXWz7lZ18zSsZWz
rqulJ0/L+pxMejVX1md10pAlsj4nk3Y6J+vaW7o0d9ZnctLAZbOut6XB8mR9
xiatWyrrsyLp7ZJZn3VJf46P7l2rj3RP8NmKvtdH0ec0io1NsWdzvPauCT5j
0vysiO4bqlcwP/p8S3vwi+i+oXoF1wafK23GXx18zqW1MSG6f6u9tjT6XEc5
4uVo3anY2CL4vExxY1a0xtV9WgafW2nOl0VrGmmhBdFnaYqxjYPPp7QXRgX3
N1RfrI3usaqunxLds9M+WhPdY1XNPjW6F6Y92Cv4HEoxfGV0v1U17ypYTR/1
kb6K7t+prn8r+lxN8Wp1dM9UPYHJ0T12xZz10X091fv/ByxD3nI=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmQXYHcUZhXd2FgsBEtxD8ODubkWKuxcIXqCF4u7umuDuEtzdoRR3K9ri
1mIF+r6cfR6WnXfn3pv73535vnPODt1yl7V2bpumGc7/Os6H16Z5hfN58NDR
muZKzu/Bn3DcwHgb5m9jfADjcZnfDX4EPg6eCN4Dfgw+AZ4EPgx+GT4Xngbe
Cb4XPgIeHx4O3wrvD48D/wW+ET4GvosvtD/8DHwGPCXz28K3wwfC48G7w4/C
x8MTw/vBf4dPh6eAN4Wvg/eAB8AbwCPhv8LX8/m7wPfDR8ETMv9X+Cb4WPhu
5v8M3+PvAg9mfnP4BngveCC8JnwqvCN8Da/fDr4DPggexPyB8LPwWfDU8B2c
J4X/WZrmQV5/Hfwv+N8c1zPemdffx/hIxhPw+rXh0+Gd4Ot4/XLwEfBm8CXw
WvBp8J/ha+HN4OvhPeGxef8RXNuQf2sLrhXm9uK4k/HJzN/D3N7wXfAp8L3w
ofBL8DnwEN5/APwP+Ex4KngN+BR4B/hqXj85124p+Y327T//CcYnMT8Zc4vw
mgvgESW/1xLwlfCFJb/PgvAIvw88Frw4fAV8Qcn9XRS+zPVYsj6O5PNfc57P
nw5ejPnL4fNL1uMC8Fn++/CY8Ao1vDmvr/CKNf/en1zv8Mpd1uNtJetrpS5/
y60l62fpLr/nFSX3Y/Wav2c73j86PD/zZ8InMj8GPCU8HN4U/oLxarz+fHhb
Xj8a8wt34bNK7s/RzL8BX8z89PA+zC/M3NKuEa7tCy8CLwO/B+8JzwMvDL8G
7wHPDS8EvwrvDc8HLwq/Ae8GzwrPC78AHwgvA6/kmoO/rVmPA7n2CHOHcazJ
eAOu/cD84a4xeEP4R3iVLuvz9pL1cAC8NOMVufYv5r/n82ZiPA3XnmDuO3gI
PAn8KPwfeBp4UvgxeD+ORRkvy7X3ef+YHAvBS8HvMv6R18/BeEauPcVrf4Bn
hofCT8J/45iN8Xxce5HX/8T8nIxn4trTzO0JP+79cd/xff/YZb/fUbIfrQeu
x7+0WX/zMX8SfHTJ/Z3OGmB9hP/DeEFefzS8Bq8vzE/PtZ3grZn/L+NpOXaE
t4K/YzyNNQHeAv6G8VCOHeAt4W8ZT8GxFbwJ/Ln3tsvnH1yyPpes+T4b8O+1
o2WPPQ2f1mbvHQQ/CI+E7+e9R8Cvuh/gaV1P8N3wqfB9zH8MPwk/ULL/p+LY
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
9L+vXtgM44q+H5o16YH0Qnoqszs9mF7MzMOszoxqzJI9495Rwz0Pv95E233A
tfkZD+S8P3PX1egPMwz76/U1+sQMw355Y40eMYOwX94ErwIvW9IPb4CXa5IJ
2D/1fKP69eD90sM+VKIp9bajavSUGYT99eqa386MZM++v93Zr0/r7+8ZXL9+
7XdmRmZHekSzTTMmsyY95PBeP4zs9Yi10EzsnpLM0azMjPS+kozB7FRPdbW9
tYnXMvO8tyQTNQs187qw10+udzOuC3o9ZLZpRjai10PqFTMpsykzF7NQMymz
KTMrs0731ICSDMe9ZoZxcq8X1Vd6YLMpMzC9sZnN7X3/M9szgzqr11Nmh3rk
k3p9qXc+0p5ibXUJ27tqtIiaRD3oHh9Sssfd++t0yV8f5dqM+vEu+e1jvkY/
3kVrqDmGmW92yTMegWcwT+2yN92j5nsn1dRDPYb18awa/zWor/frdcknH7em
uVdq1qOZkH5qRI3fGr+vxxfW1Eprpn7oohq9N22Jf7usprYO6/Xw5TV6b5YS
/3VxjV6crsT/nVHjdQb2/eSSGj06fYm/uxSe3f5Y4teuqdF/7nH3+pk1/nHc
vp/dzm84prUb3tz6X+NfzeT0C7fBGzXJ5NTzt8BrwyuX6P+251na3Dtr0Bwl
NdnadC3zizXJCNXLt9fcWzNi/dLNNf5ppRL/8G2b/TgF50Phq/ybmTuPa6vy
2tOtIfaLvt+eVuMXu75fnVrjh9u+/51S44ebvh9dUaOXzSj1uyfX+Ndfm/TH
O/1OJRnWjsy9xPeYkfEvXNuduXNq/Mtkfb88mmN77x3XBtd851VKfhP/FjMt
sy39n9mwGZ/+UX+on9BPmpeoAdQCZnD6Rf2mfssMaLv+82eqyXzMH/Ss+kkz
HrMeNeusNZmg2aCad2hNhmiWqOYdUqPBli/ROGqzSdvUTmuoXk7NbW2zxv3Q
a7LlSnqWWk397b3ynul91WQrwmv6G9dkcGZxatzpajTaCiU9/9deo/2hRHP9
1msu89elm2gxMzCzMDX5DAqX0ZJ9qfHnr9HEi5f0PLWyz1jOLMm4ffZi5n1U
iT83CzfDNE86uIlfN/N+uKQGmIW/VvLMSU00qtekfyzR4GrVn+AdSjzFsJpn
MpeVZIg+qzGT8jXOmXeZsZm16ZHmrMnkzOb0RPPWZG5mb3qmuWvW1OwlNcS1
NnPNfTbzMvsyIzQr1IPNXuNpNi7R0HodX2NWdlCT9+4IT12yZh/tNfqqJZme
2v18+Ej4RHgJ+EZe837TP3Or6SH2kg85PmV8bRs/YUbzZU3mafb5Efy536dm
/DHHFzWeZv0Sza7XOZHj8ybPnHy/fuXBvp/az6251l71k/7Fnr5YSQ2w11uT
xirZ89YqM+b7S2q22bM12FpsjT++psZb6/U/J9T0BHuDPeHYGo+nf9yiifez
B9gL7CHH1PQMe4c1/riaDHSJEs1lNqpnXLfEg+gl9YTrlHgcvaKe12xaj6gX
1vOuUeJp9cJ6ZLNsPbHeWc+4eonH1UvqAZcs0Wx6Qz3vUiUaUC+sR16txDPq
nfXgZul6UL25Ht1nQXpqvbue2Dx0+yZeWc9qbbfG62X1qGuXeDC9q3nlhn3/
tZ7pgX1WMLyJNzYPMd8ybzI/0VOvV+LB9No+Y/BZgx54sppnEj6b0ENPBY+s
yRMnLPFHri+fSb7b36/za/LJKUvyzKdq/KgZmFnY0zVr1wzMLMw17Npfv83a
du9YK1dss4fu7+fNVM1W/17z3f0b9Fv/qMm+zKj0V+N3uRfeM+/dMzXZlRmb
fu2hGj9m5m32/XhNlmdGaFZ4X012a6ZrtvtkjX820zPbe7YmezNzU+8/B5/R
JJMzm1uji7ZzjbvWXbNvwZe2Wcuu0TfhS9qsXXugvdAeqBe9qybfNBM3G7+z
plfYM8yuB3WpBa4h19LALrXZmvy7f+6iDdQYel81ilpFDWP2rOZQe6j/1OcP
1vhZnwn4bOCemmzbDN0s/e6a/NzM3uz+3pqs2wzcLPyOmrXpGjUvH9xlbbsn
3Bvuwbfhy9rszcG9fli4Te91z78DX96mFriGXEtXtKkFD9T0VnuszyaeqPH/
ZrBmsQ/X+C+fSfhs4rca/6Te1G/ZH/RKg/r6+BT8WZOaZx38tcbvmaHpr9SM
asfBfT9RU6gt1JR68TG77GV7rL32lxqtZCannzPv1k/rL/WeakK1of7a7HSC
LrXEPexenrhL7bEmWZsm61J7rXHWuom67G1rlLVqLPtbk55ub1djqjXVoGb/
E9pfmtQEa4OaVe2qJ9Wbau4X5zR/iX9tu/j3BUv8/Kpdnt3pWfQuq3XxLnoS
vYmaTG2mJjOrWL2LV9HT6G0eqXm24DMVn608Ch/Z5JmDzx4eq9FGaiSz9dIl
D1mgJK9RA6oF1YBmGZN2qU32JHvT6F1quTXWWjtGl1prjbXWnlvz/GPykucZ
tUseo0ZRq6gh1ZJqRrOOifydm/TMq8xeumgTe4a9Y+wuWksNpBaapEvvsGZa
O9WQasmhTbKYTWq07u6Mb2LudfjSJs8kfDbxWk2+ZkZtVv1y/3ozdPO68bpo
F3u+vV9PoDfQQzzV6z31mvpLvaWGV8ur58z2/Zv929W4PtvRQ+gl9Bg+C3qz
Jo80kzc/fKsmjzSTN/97W83QJBM3T3yhJm/0mYLPFnbs5w9ro7VfqskffQZi
vqgn15vr2c2uX6zJF32mYV73YY231mObDb1ak/eZ4Zvl67n0Xno2s7F3a54F
+IzAPFAPp5fTA5nlfcT8Q00yJbMle5K9SQ9nlmcPshdN3+RZm8/UpihZIz5r
83mUz7emaZI1rtr3p23aeBc9m95Nz+ezPP26z0LtgRswfr7GO+uhfdbiM6+p
Snqgz8J+rqkF1gSzNj2S+lu9rV5/pSYrMDPw2cYFNdrPz/Cz3qnJasxszFPd
o+5V1/SX/Rq7tOSeuPbeqMkKzAx8djJOl7XimlHrqynVYl+UaE33nHvPGmB2
+l5NdmKGYtY2oIt30HPoPT6o8VZmcmZz/4RvbvLMxrz4vJrf2t/Y3/r9muzO
jM6szppj7XHPm6X9H9IEtuM=
           "]], Polygon3DBox[CompressedData["
1:eJwt13e8FNUVAODH7gLSERASpSmghqo0ld5RqnSjgEqNVKWqVOlSDSAQe6Ro
7AkIRJpSLbTQrdgNCmoEUXq+85v3x/ndc745s2/e7J17Z6/uNbTjkFRWVtZe
kVOsSmdl/RHUyZGV1VT9i7wku0pcncnKaqyeaSwiqsnv1tdPXy7Hc7MyrD3r
yk7LL2dVjT1Z3/gb+kqLUqKcY00dm228Vl1BXCdvyR4zro6/KW/i3FbOPSO/
Mq5PXON4E/UsY1Fxg/weff315Xb8uNgqX89eceyEek2cJ2/KWjt2Vl6WlRHl
fUYz9RzjWXUueW19DfR9Ki/Gqxt7sQEsn55LojBrxFqy7+TV2Y2iiv526sXG
yupKoqK8NVtovKguJG/o3BbO/Va+Pp3cj18zyTXFtVWNz4rzWRvHHjeei3st
v8m5DZ17VF6R/SnC8VbqBcYrRA15b30D9eV1/AZRTVR2rK1ji4w3irvl8/Qt
1tfS8bXxWawV68RS6vOiAKvP6olxztuoLuj4S8aXxR2shKgl76tnsGMFnHdB
FGQNWHP2jby4vprGPmwQy6+nOrsnvn+2hLWI74KVZu1YF/arfCNvbvzNsXLx
/cW1ya9j3fTdre+S/A+strEfG8IK6tsn7mWT2Cx2m/o90YmNiP+L1Y175dw7
2Aw2XTyr3s97scnq2fpaqQ+I3mwKm8Naqw+KPmwqm8vaqA+Jvmwam8faxnyM
OR5zP5P8P3ONO9Qd5MP0jdF3i7oWjwf1GbaCdWU1WP+YY2yReEl9ml+UVxVV
xEh2k7hf33PqF53bTc+GdDLfT2eSvx/XUTM+M+Yca+/YEuPmdDJnz2eSeRjz
8Z10MsfOZZJ5HfP793RMEvfM37hJelh+s+OjjCvYcrFSnVOUYm3VnfWdkm9y
bgvj75lkDYi1oKb8L3ENcd/1tWPb08l1xUJVS15bbEsnz9mlTHLt8T+8nU7W
kDMxH+TXi1vko9kLPu81H9GD1WEPshfZ66wnu4yVZbezbuy3+Bye01iL1Wef
yevqG2d8lb3J+urJE3ORdWJ3sfOxXrE6xgHsPvFoPNuiIRuqHqWveDzrrBG7
n41mJVheVp51Zt3ZOXm+uEfGLqwHuyDfo7e7cRybyprGGhnfO+vPhrJCse6y
BmxIzAt2Bdst7mJj2RTWRJ0/1mPWlfVkF+U5Yj0xNmdt2fFYH9lQ47PsBdYl
5gArxpqxNsoT8mrsduNENoPdHGtzOll/LmaS9TLWzb2iBxuvb5q+Zur/iJ5s
QjyDrLl6p+jKRrOJrIH6A9GFjWITWH31+6IzG8nGs3rqLelkHb2QSdbBWA9L
yuuxQfqG6ysa+xOrzwazEaxY7IGsLhvIhrEi7F3RkQ1nY1kd9S5xJxvDJrPG
6t9iv1BXE7XZIcc/ZINiz2GPs07qev7GePYaW836sG/FLPYKW8WGqVP6irMW
rB37Uf4z/0KdV+SJNVDPN2xmrM3x/Ol7QH1EDIx9ly1kHdUZvVelknU91vdD
6sf4R/JzeuKrXen4ScnPrKy4ju2IeaL3BeNh9hmbracbe5EdYUfZHPZX8bH6
QjJNslbF3iGpaGwd80V8rj6m7wm2Tr1F3yOxBvHFbAfbzcaxz8SI2BPZM6x7
fL54gM1nT7I/qz8Rw2JPZE+xO9WfiuGxF7On2V0xL/yNJexdtoeNZ1+JSWxp
vEewAer/ivlsJVvPHk4nz/kt7M549sXxeD8RM9ha9SZ9Q/R9F/eB/YutYw+p
vxaT2TL2Khuo/lI8wp5nL7P71L+In9RlROnY033+wrgP8rTIrW9N9j2tlEqu
I65nurqjWMr2q/eJd+KZFM/G+qE+7NypPmulKMpqxh7PfpB30PeccS87wqbp
KRTvNaw76x3zg/0v/j91ibhG9nb2nPw8rk1cJjZnkn1hZCrZs2Lvyms9v5Ut
YKtiPRVXsoZsSirZO2IPuZzNj+9Tfin7ffVNx9vre8a4O+Ytm6LnlDitvjb2
QrYnlezn3YwPsodEygcsiLkgzyFy6Vvt+PX6bk0l63Ws22fVj+s7Ks8Z/4e+
tbEu8+XGg+wTNlNP4dgnWQ/WJ+Z5rEtsBTvEPmWzYu1jT7Gd7ACbFPsYe5rt
YgfZZNaJLWMH2MfsUfZrrCfx/MV6wnY73kjfNONqtoEN0tOYTWdr2EY2OJ3c
06mp5B7HvX4r5gA/Ls+I4vq2xbsCOxH3JL5Ptp09zb5XZ4lihi3sb+yb+G5E
AbYh3lHYD3F/xRVsa+yx7Jy6pKjADrC30snviZOZ5J0+3u1fj32PVdJXU99X
8n+zG40dYz6zPOp16eT9/1Qm+S0RvyneEPlYZX219H0dzxkrYqzB6rLv5U+x
Y+qLsdaLzeyJWGdZ0RzJ+2y81y5lJ9VF4rrZB6yBvzfR+AZby/rrqc8msNfZ
GtaPLYs5GPdJlGI7492DnVVfJcqz/TG34/uM+x7PNNsVz3w86+rC0cveTyXr
c8lUskbGWjlZ/fd45uJ643nR957jK9iZqEU5ti++67i38c7CmrGTqeTdsV8q
ea+N99ucnoV/6rucVVfX0Xcs9iGWx1iR1WBfppJ16MfsPSb2mq3Z750Xstel
WJ/eZV+wsTFv1Mud21vdjM9hG9g2NjzWBzEmvhe2jPVS3xbPHNvGdrIxrCmb
nUp+021lI1grtohtZ7vY2NizxGA2ly1indPJ+vc82xLnxv3PXnMWppI6fJP6
qN6H2ZPqpc69N5387smfSt6n4716t76WsT+yt+N/1Tdazz+iN77vWHfYQcdf
YjmM17CK7MPYJ9kA4yy2gHVQvxx7OivHKrGP5K/GvmyswKqwT+IdgKWN5Vll
9rF8Sewh6kIiP1sf7wWub55xE9vBRqWT30jxW+naTPK+PS9+c4i58o36tusb
6fji2PfieRb52LpYq2NPijq+c/YWS8dvPWNL1p79JP8/T7jlVA==
           "]]},
         Annotation[#, "Charting`Private`Tag$53750#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsrRnEcwOHjfr8lpYj8AWxkYJSBSTKwkYGBkoHRIDYbfwEriV2xud/v
tyS5Du7XeH5l+LzPt3NOvd9f55S0djd0xURRNKhXhflRF5qOjaJszrGYqyzj
Cat5z3p+s4VpcVHUyQIWqt9cyWHWcoxNnGA7Z9nLBT7wiu/a1LPutGihLS5x
m8vc4Qp3w07c4xr3uc4DbnBTh+YtHnGbx9zhCXd5yj2ecdI5rvmhc72EM2rE
bhsc4Dx7OMM2jrORo6zhECtYrj5zPjuYwmZ++o863rKKRywN52JRuO65S74p
S0/hmvLsmMlcZjCH6eEZpjGDqeEdMIXJTFKyOSHMjGNieMdM4K/i9RPu6UvW
iKb83Px/D3/Iv0ry
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1002, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 917, 696, 1119, 1008, 
       1218, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1112, 1125, 923, 1003}], 
      Line3DBox[{704, 1009, 1219, 703, 488, 705, 1126, 924, 706, 1127, 925, 
       707, 1128, 926, 708, 1129, 927, 709, 1130, 928, 710, 1131, 1010, 1220, 
       711, 1011, 1221, 712, 1132, 929, 713, 1133, 930, 714, 1134, 931, 715, 
       1135, 932, 716, 1136, 933, 717}], 
      Line3DBox[{719, 1012, 1222, 718, 1013, 1223, 720, 504, 721, 1137, 934, 
       722, 1138, 935, 723, 1139, 936, 724, 1140, 937, 725, 1141, 1014, 1224, 
       726, 1015, 1225, 727, 1016, 1226, 728, 1142, 938, 729, 1143, 939, 730, 
       1144, 940, 731, 1145, 941, 732}], 
      Line3DBox[{734, 1017, 1227, 733, 1018, 1228, 735, 1019, 1229, 736, 520, 
       737, 1146, 942, 738, 1147, 943, 739, 1148, 944, 740, 1149, 1020, 1230, 
       741, 1021, 1231, 742, 1022, 1232, 743, 1023, 1233, 744, 1150, 945, 745,
        1151, 946, 746, 1152, 947, 747}], 
      Line3DBox[{749, 1024, 1234, 748, 1025, 1235, 750, 1026, 1236, 751, 1027,
        1237, 752, 536, 753, 1153, 948, 754, 1154, 949, 755, 1155, 1028, 1238,
        756, 1029, 1239, 757, 1030, 1240, 758, 1031, 1241, 759, 1032, 1242, 
       760, 1156, 950, 761, 1157, 951, 762}], 
      Line3DBox[{764, 1033, 1243, 763, 1034, 1244, 765, 1035, 1245, 766, 1036,
        1246, 767, 1037, 1247, 768, 552, 769, 1158, 952, 770, 1159, 1038, 
       1248, 771, 1039, 1249, 772, 1040, 1250, 773, 1041, 1251, 774, 1042, 
       1252, 775, 1043, 1253, 776, 1160, 953, 777}], 
      Line3DBox[{779, 1044, 1254, 778, 1045, 1255, 780, 1046, 1256, 781, 1047,
        1257, 782, 1048, 1258, 783, 1049, 1259, 784, 568, 785, 1161, 1050, 
       1260, 786, 1051, 1261, 787, 1052, 1262, 788, 1053, 1263, 789, 1054, 
       1264, 790, 1055, 1265, 791, 1056, 1266, 792}], 
      Line3DBox[{796, 1162, 954, 794, 1163, 955, 798, 1164, 956, 800, 1165, 
       957, 802, 1166, 958, 804, 1167, 959, 806, 1168, 960, 808, 1170, 585, 
       810, 1171, 961, 812, 1172, 962, 814, 1173, 963, 816, 1174, 964, 818, 
       1175, 965, 820, 1176, 966, 822}], 
      Line3DBox[{821, 1280, 1070, 819, 1279, 1069, 817, 1278, 1068, 815, 1277,
        1067, 813, 1276, 1066, 811, 1275, 1065, 809, 1274, 1064, 1169, 807, 
       1273, 1063, 805, 1272, 1062, 803, 1271, 1061, 801, 1270, 1060, 799, 
       1269, 1059, 797, 1268, 1058, 793, 1267, 1057, 795}], 
      Line3DBox[{824, 1071, 1281, 823, 1177, 967, 825, 1178, 968, 826, 1179, 
       969, 827, 1180, 970, 828, 1181, 971, 829, 1182, 972, 830, 1183, 1072, 
       1282, 831, 601, 832, 1184, 973, 833, 1185, 974, 834, 1186, 975, 835, 
       1187, 976, 836, 1188, 977, 837}], 
      Line3DBox[{839, 1073, 1283, 838, 1074, 1284, 840, 1189, 978, 841, 1190, 
       979, 842, 1191, 980, 843, 1192, 981, 844, 1193, 982, 845, 1194, 1075, 
       1285, 846, 1076, 1286, 847, 617, 848, 1195, 983, 849, 1196, 984, 850, 
       1197, 985, 851, 1198, 986, 852}], 
      Line3DBox[{854, 1077, 1287, 853, 1078, 1288, 855, 1079, 1289, 856, 1199,
        987, 857, 1200, 988, 858, 1201, 989, 859, 1202, 990, 860, 1203, 1080, 
       1290, 861, 1081, 1291, 862, 1082, 1292, 863, 633, 864, 1204, 991, 865, 
       1205, 992, 866, 1206, 993, 867}], 
      Line3DBox[{869, 1083, 1293, 868, 1084, 1294, 870, 1085, 1295, 871, 1086,
        1296, 872, 1207, 994, 873, 1208, 995, 874, 1209, 996, 875, 1210, 1087,
        1297, 876, 1088, 1298, 877, 1089, 1299, 878, 1090, 1300, 879, 649, 
       880, 1211, 997, 881, 1212, 998, 882}], 
      Line3DBox[{884, 1091, 1301, 883, 1092, 1302, 885, 1093, 1303, 886, 1094,
        1304, 887, 1095, 1305, 888, 1213, 999, 889, 1214, 1000, 890, 1215, 
       1096, 1306, 891, 1097, 1307, 892, 1098, 1308, 893, 1099, 1309, 894, 
       1100, 1310, 895, 665, 896, 1216, 1001, 897}], 
      Line3DBox[{911, 1007, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 1217, 904, 
       673, 903, 1315, 1105, 902, 1314, 1104, 901, 1313, 1103, 900, 1312, 
       1102, 899, 1311, 1101, 898, 1322, 1005, 1004, 1006}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1223, 503, 295, 1228, 518, 
       310, 1235, 533, 325, 1244, 548, 340, 1255, 563, 355, 1268, 578, 1163, 
       370, 593, 1177, 385, 1284, 608, 400, 1288, 623, 415, 1294, 638, 430, 
       1302, 653, 445, 1311, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1126, 281, 504, 296, 1229, 519, 
       311, 1236, 534, 326, 1245, 549, 341, 1256, 564, 356, 1269, 579, 1164, 
       371, 594, 1178, 386, 609, 1189, 401, 1289, 624, 416, 1295, 639, 431, 
       1303, 654, 446, 1312, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1127, 282, 505, 1137, 297, 520, 
       312, 1237, 535, 327, 1246, 550, 342, 1257, 565, 357, 1270, 580, 1165, 
       372, 595, 1179, 387, 610, 1190, 402, 625, 1199, 417, 1296, 640, 432, 
       1304, 655, 447, 1313, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1128, 283, 506, 1138, 298, 521, 
       1146, 313, 536, 328, 1247, 551, 343, 1258, 566, 358, 1271, 581, 1166, 
       373, 596, 1180, 388, 611, 1191, 403, 626, 1200, 418, 641, 1207, 433, 
       1305, 656, 448, 1314, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1129, 284, 507, 1139, 299, 522, 
       1147, 314, 537, 1153, 329, 552, 344, 1259, 567, 359, 1272, 582, 1167, 
       374, 597, 1181, 389, 612, 1192, 404, 627, 1201, 419, 642, 1208, 434, 
       657, 1213, 449, 1315, 672, 464}], 
      Line3DBox[{261, 479, 1118, 262, 493, 1130, 285, 508, 1140, 300, 523, 
       1148, 315, 538, 1154, 330, 553, 1158, 345, 568, 360, 1273, 583, 1168, 
       375, 598, 1182, 390, 613, 1193, 405, 628, 1202, 420, 643, 1209, 435, 
       658, 1214, 450, 673, 465}], 
      Line3DBox[{263, 480, 1119, 265, 494, 1131, 286, 509, 1141, 301, 524, 
       1149, 316, 539, 1155, 331, 554, 1159, 346, 569, 1161, 361, 584, 1169, 
       1170, 376, 599, 1183, 391, 614, 1194, 406, 629, 1203, 421, 644, 1210, 
       436, 659, 1215, 451, 674, 1217, 466}], 
      Line3DBox[{267, 482, 1120, 268, 1221, 496, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 363, 1275, 586, 
       1171, 378, 601, 393, 1286, 616, 408, 1291, 631, 423, 1298, 646, 438, 
       1307, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1132, 289, 1226, 512, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 364, 1276, 587, 
       1172, 379, 602, 1184, 394, 617, 409, 1292, 632, 424, 1299, 647, 439, 
       1308, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1133, 290, 513, 1142, 305, 1233, 
       528, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 365, 1277, 588, 
       1173, 380, 603, 1185, 395, 618, 1195, 410, 633, 425, 1300, 648, 440, 
       1309, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1134, 291, 514, 1143, 306, 529, 
       1150, 321, 1242, 544, 336, 1252, 559, 351, 1264, 574, 366, 1278, 589, 
       1174, 381, 604, 1186, 396, 619, 1196, 411, 634, 1204, 426, 649, 441, 
       1310, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1135, 292, 515, 1144, 307, 530, 
       1151, 322, 545, 1156, 337, 1253, 560, 352, 1265, 575, 367, 1279, 590, 
       1175, 382, 605, 1187, 397, 620, 1197, 412, 635, 1205, 427, 650, 1211, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 683, 1125, 278, 501, 1136, 293, 516, 1145, 308, 
       531, 1152, 323, 546, 1157, 338, 561, 1160, 353, 1266, 576, 368, 1280, 
       591, 1176, 383, 606, 1188, 398, 621, 1198, 413, 636, 1206, 428, 651, 
       1212, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 1322, 684, 444, 652, 1301, 429, 637, 1293, 414, 
       622, 1287, 399, 607, 1283, 384, 592, 1281, 369, 1162, 577, 1267, 354, 
       562, 1254, 339, 547, 1243, 324, 532, 1234, 309, 517, 1227, 294, 502, 
       1222, 279, 487, 1219, 250, 473, 681, 688}], 
      Line3DBox[{467, 675, 1316, 452, 660, 1306, 437, 645, 1297, 422, 630, 
       1290, 407, 615, 1285, 392, 600, 1282, 377, 585, 1274, 362, 570, 1260, 
       347, 555, 1248, 332, 540, 1238, 317, 525, 1230, 302, 510, 1224, 287, 
       495, 1220, 266, 481, 1218, 264}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
528x0h7jGuAWDNzylP5ffhbrT2Twcqx3Bl4Z3naneG48MjsN9cwFW8RzFkNP
GgNffeHp9s8Ut2aZ6JftjrxF/vwunNu5Ijq3M0R10XnK5+mHMp9TnlFMuAA/
P7XcpUHjitq2eDPtjz9TTEP9YFO09UEph69pq42+clpBnUFTP8eJ/OAnen+g
u3DfZ8CsnVjvdBx/wk6tmun8OXPBzkciO6MZ+iV+Xsnws6rIz38OzR/gdJur
l1z7vyb8rfuyZU39LNaTxsCl055hn1TTLhH94K3+fLw1COeCikXngg6GD711
l8PTfraFHpdOr6DnZuaOsTSu8pGnwZ9U7ZdC3+Fruwzvk1SZvkVfs9zzML9/
FBdrRPKjXiaB74pK2A6+a8Rw22fk5+fvM4A3MzoE/NW+Wa0pvz3TKAYeVxsN
fENOZE/i3+6MawQekNIIPCsiqifpH5qtf1eP+92ZhTeHE/6rRXgljev0QG/g
g4vVVAj/6W67j/xcEDYfuEJQEeTvfGg3PpSrJ8fJdwZPXuLvg/hpLf0/65Fm
4IuWO0fdobp3gf54DVrXnA6OJtyRYX8lY7zPGH7THhC3h/ix4suR4Ak9Jo5z
RN3CuC/vL/XBhPRcKN0J+X07v4FXZN2jP3PcZBvpfxfR3T2Pk38Zboy+Rk+4
pz9WuKf/SLinHxa8oYH4NBu3ZOg3WbAa9rDeK5DMY5bID1+FdwP+CO8G2Ajv
BmQK8ztamN8ZwvwaM85PSub9kmheWO8eeOlEnqjhcMUGA+npnLz0oplDSJ7F
c0riRFcUJ+YMeyTxI7ZnMUM+f7VJBeGhvTqWT+Hkh/Y4OAzxzPCP0doePcg/
7nHLYH/zeZ6wn/XewvcLcj0Ilx3TUzOD7pUvSVuD+oExv+fumHWjfnzPlxjM
V5aZE+aL9T7DUyFutURxy4q37A2hpZQH5lX7I35KFNsgfiTnTs1E506HDxj/
nuqNg0Gl2O+Y0fIo8pXk/KS16PzkHQYvKsnPd0X5uZ5xTrJMOKd6QXRO9beQ
n1cy8rP4d3dGhWFdfu/WPZHqtE3Bm4Err5uP/uiIcgny85qze6c2rU9mieqT
Y8J6oSGsFwHCehHHGNfYdpNvk5+3qefBP74plvAP6z0BPV/vSNLfQToR+00f
3NTRXy/vU4b6OblwN9bfsgx16Bn5IwXrYF0fF6yzRg5rYb9n87H21Bc8lF6G
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
fb4/gb/Necq/OzTdDfi2HneAs/Zt/w+Luouq
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{360.12036973902855`, 244.8980381129909},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1000, 1000}, {-1000, 1000}, {-38.11831854897082, 
    38.839153842654014`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.0723273049922457`, 0.2822813532768544, 1.3896482175684781`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.752700246803887*^9, {3.752700317261805*^9, 3.752700334404861*^9}, {
   3.752700390805078*^9, 3.752700418388217*^9}, 3.752700471446883*^9, 
   3.75270055490506*^9, 3.752700605738327*^9, 3.7527008932210197`*^9, 
   3.752701154470942*^9, 3.7527412877033243`*^9, 3.752741319816328*^9, 
   3.752741695793153*^9, 3.7527421191665173`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"4e768e21-c3f8-489a-9191-9cad77437042"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", " ", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"X", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"Y", "//", "Flatten"}], ")"}]}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.752741765318112*^9, 3.752741786954081*^9}, {
  3.752741819095723*^9, 3.752741872150586*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"d7d7843e-50f2-450d-94f4-4e35e64a61d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["50", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 50, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Length" -> 2]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 50, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {-1.5962668761214485`, 4.416805366702164}, 
                   "Method" -> "Naive", "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {-1.5962668761214485`, 4.416805366702164}, 
                   "StandardDeviation" -> {58.962323926298296`, 
                    54.48677736189683}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 2, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 2]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> 
                Association[
                 "Matrix" -> {{0.7071067811865447, -0.7071067811865505}, {
                   0.7071067811865505, 0.7071067811865447}}, "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {-1.5962668761214485`, 4.416805366702164}, 
                    "StandardDeviation" -> {58.962323926298296`, 
                    54.48677736189683}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 2, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.007164, "MaxTrainingMemory" -> 61680, 
                  "DataMemory" -> 944, "FunctionMemory" -> 21752, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{
                    2018, 12, 2, 7, 21, 59.302318`8.525646642400321}, 
                    "Instant", "Gregorian", -5.], "ProcessorCount" -> 2, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 2, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
             "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             7263179337424669307]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {-1.5962668761214485`, 4.416805366702164}, 
             "StandardDeviation" -> {58.962323926298296`, 54.48677736189683}, 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1519634882283037191]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5764960275667318102]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {48.2701250887216}, 
             "StandardDeviation" -> {581.2025751313099}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1973973609475737390]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2169264213102441839]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (48.2701250887216 + 
       581.2025751313099 #& ), 
      "ProcessorFunction" -> (-0.08305215281920598 + 
       0.0017205704908896387` #& ), "Name" -> "value", 
      "Quantiles" -> {-2.0280390569068008`, 2.0575482123141406`}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["MeanFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association[
          "Weights" -> 
           RawArray["Real32",{{-0.7731069922447205, 0.6223536729812622}}], 
           "Biases" -> RawArray["Real32",{0.}]], "Parameters" -> 
         Association[
          "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 2, 
           "$InputDimensions" -> {2}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
        Association["Version" -> "11.3.5"]], 
      "DistributionData" -> {NormalDistribution, 0.026467773442398743`}, 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "NumericalVector", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {8.881784197001253*^-18, 1.2212453270876722`*^-17}, 
             "StandardDeviation" -> {0.9999999999999997, 0.9999999999999999}, 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 2206491291617491093]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "NumericalVector", "Weight" -> 1],
              "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Method" -> "LinearRegression", "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 1., "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "NormalEquation", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> PlusMinus[6.77607198432188, 0.2535062467087519],
          "StandardDeviation" -> 
         PlusMinus[213.79785601293142`, 32.10736681353784], "EvaluationTime" -> 
         6.57*^-6, "TestSize" -> 160, "TrainingSize" -> 10, "TrainingTime" -> 
         0.0049868000000000004`, "TrainingMemory" -> 56707.200000000004`, 
         "ModelMemory" -> 14904., "ExperimentCount" -> 4, "ModelUtility" -> 
         0.0019614147761554284`, "MeanCrossEntropyHistory" -> {
           PlusMinus[6.884539459010076, 0.016511707696016353`], 
           PlusMinus[5.897609579290163, 0.06021943336416062], 
           PlusMinus[6.47377912576587, 0.15199732638525706`], 
           PlusMinus[5.811235805928995, 0.08227903156420863]}, 
         "StandardDeviationHistory" -> {
           PlusMinus[253.95489328621628`, 34.00990760817107], 
           PlusMinus[160.45179744571362`, 60.70516931911593], 
           PlusMinus[201.40002665644874`, 46.333754654512745`], 
           PlusMinus[159.70889235988375`, 61.14638123030049]}, 
         "Configuration" -> {
          "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           1., "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 50], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
          "ModelMemory", "ExperimentCount", "ModelUtility", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 4], 
          TypeSystem`Vector[TypeSystem`AnyType, 4], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 159807298350490]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.00001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.806045691429442, 0.41438187783501146`], 
              "StandardDeviation" -> 
              PlusMinus[224.45417280503034`, 38.1772975155274], 
              "EvaluationTime" -> 7.875000000000002*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0048801999999999995`, 
              "TrainingMemory" -> 56758.4, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 4, "ModelUtility" -> 
              0.0018610975499985416`, "MeanCrossEntropyHistory" -> {
                PlusMinus[6.939205789786674, 0.01106018307848935], 
                PlusMinus[5.764894667361319, 0.05066515265694436], 
                PlusMinus[5.794920945410475, 0.04800328537490863], 
                PlusMinus[4.9211891083756605`, 0.08786228732885605]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[272.35347665772565`, 30.99411394446865], 
                PlusMinus[158.1575180990276, 61.94427676772062], 
                PlusMinus[158.3606229303592, 61.82072384627185], 
                PlusMinus[144.95663034810303`, 72.1051733314424]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.487698255428076, 0.16452219567688203`], 
              "StandardDeviation" -> 
              PlusMinus[268.49959570179556`, 51.423069720853086`], 
              "EvaluationTime" -> 0.0000226, "TestSize" -> 70, "TrainingSize" -> 
              40, "TrainingTime" -> 0.0049924999999999995`, "TrainingMemory" -> 
              58571.99999999999, "ModelMemory" -> 14904., "ExperimentCount" -> 
              7, "ModelUtility" -> 0.0015493755555844695`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[4.9596929123744316`, 0.3089839106980928], 
                PlusMinus[5.534756876417574, 0.22323434195202735`], 
                PlusMinus[5.395098458920913, 0.2445730668564071], 
                PlusMinus[5.104085957621543, 0.3031035710105422], 
                PlusMinus[5.970195042559049, 0.16288603486209832`], 
                PlusMinus[5.315207889351769, 0.2501193045176326], 
                PlusMinus[4.946407870807279, 0.3251936974526635]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[266.31711753892097`, 138.579408134749], 
                PlusMinus[268.9797643314054, 135.23659797338013`], 
                PlusMinus[268.00806969177086`, 136.41717061494646`], 
                PlusMinus[266.6297093216136, 138.16830220108946`], 
                PlusMinus[274.78080248202156`, 128.92786047434163`], 
                PlusMinus[267.54291619496223`, 136.99683048053288`], 
                PlusMinus[266.28694265212977`, 138.61928714948425`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0000226, "ModelMemory" -> 14904., 
             "StandardDeviation" -> 
             PlusMinus[268.49959570179556`, 51.423069720853086`], 
             "TrainingMemory" -> 58571.99999999999, "TrainingTime" -> 
             0.00737645], "Index" -> 1], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.8726788268988805`, 0.09032263246260565], 
              "StandardDeviation" -> 
              PlusMinus[577.2869909516829, 43.27938420688625], 
              "EvaluationTime" -> 6.6750000000000005`*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0046505, 
              "TrainingMemory" -> 56736., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.0007371733155724905,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[7.878263220759158, 0.05250277911173572], 
                PlusMinus[7.852377262195464, 0.05549590058754489], 
                PlusMinus[8.110646614393735, 0.22829257026773642`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[543.2104954180061, 62.04100688231837], 
                PlusMinus[557.2720336467721, 57.9485317763382], 
                PlusMinus[628.3133833041367, 58.69068228475236]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.731250208102645, 0.0974372847308821], 
              "StandardDeviation" -> 
              PlusMinus[582.6182944251543, 54.59570825648352], 
              "EvaluationTime" -> 0.00002175714285714286, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.004688142857142858, 
              "TrainingMemory" -> 58601.142857142855`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.0007277408530922463, "MeanCrossEntropyHistory" -> {
                PlusMinus[7.647923928562571, 0.1253067289149472], 
                PlusMinus[7.685432298857195, 0.1811901091196324], 
                PlusMinus[8.05680831745852, 0.2506871248280219], 
                PlusMinus[7.913852539783858, 0.2673327344963093], 
                PlusMinus[7.7233306490069324`, 0.17813836620616846`], 
                PlusMinus[7.709720194216733, 0.16576981075936545`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[498.0000518918211, 89.93762586515356], 
                PlusMinus[527.7139171433237, 121.86682576451588`], 
                PlusMinus[713.0206056017516, 93.32379104461056], 
                PlusMinus[657.6825654103162, 121.91344736731516`], 
                PlusMinus[554.5886005047033, 108.65498151740573`], 
                PlusMinus[545.2615188134458, 103.44687826314073`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00002175714285714286, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[582.6182944251543, 54.59570825648352], 
             "TrainingMemory" -> 58601.142857142855`, "TrainingTime" -> 
             0.006994571428571429], "Index" -> 2], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.77607198432188, 0.2535062467087519], 
              "StandardDeviation" -> 
              PlusMinus[213.79785601293142`, 32.10736681353784], 
              "EvaluationTime" -> 6.57*^-6, "TestSize" -> 160, "TrainingSize" -> 
              10, "TrainingTime" -> 0.0049868000000000004`, "TrainingMemory" -> 
              56707.200000000004`, "ModelMemory" -> 14904., "ExperimentCount" -> 
              4, "ModelUtility" -> 0.0019614147761554284`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[6.884539459010076, 0.016511707696016353`], 
                PlusMinus[5.897609579290163, 0.06021943336416062], 
                PlusMinus[6.47377912576587, 0.15199732638525706`], 
                PlusMinus[5.811235805928995, 0.08227903156420863]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[253.95489328621628`, 34.00990760817107], 
                PlusMinus[160.45179744571362`, 60.70516931911593], 
                PlusMinus[201.40002665644874`, 46.333754654512745`], 
                PlusMinus[159.70889235988375`, 61.14638123030049]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.445803461405398, 0.15889136419661337`], 
              "StandardDeviation" -> 
              PlusMinus[268.0513015423341, 51.5923152467258], 
              "EvaluationTime" -> 0.000022662500000000002`, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.0046685, 
              "TrainingMemory" -> 58556., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 
              0.0015516823111697633`, "MeanCrossEntropyHistory" -> {
                PlusMinus[4.9306885425275135`, 0.30370951875688346`], 
                PlusMinus[5.458051138722407, 0.23088301673654676`], 
                PlusMinus[5.424035951707569, 0.28303106063495564`], 
                PlusMinus[5.309359563819034, 0.3025496857827706], 
                PlusMinus[5.887200105282636, 0.1739255396633468], 
                PlusMinus[5.2972152426770345`, 0.26053469367557636`], 
                PlusMinus[4.899812810431309, 0.32140486030633697`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[266.100436818756, 138.8673189950241], 
                PlusMinus[268.1374013352542, 136.25711852683463`], 
                PlusMinus[268.1562462729463, 136.24481497291046`], 
                PlusMinus[267.32098938735805`, 137.27908945277628`], 
                PlusMinus[272.6192099311077, 131.15050414385766`], 
                PlusMinus[267.32072889143035`, 137.27956520340683`], 
                PlusMinus[266.1801830598461, 138.7612707778392]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000022662500000000002`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[268.0513015423341, 51.5923152467258], "TrainingMemory" -> 
             58556., "TrainingTime" -> 0.007321050000000001], "Index" -> 3], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.860510580474118, 0.09284940114583184], 
              "StandardDeviation" -> 
              PlusMinus[571.6732770261808, 44.011621980855146`], 
              "EvaluationTime" -> 6.20625*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0049115, 
              "TrainingMemory" -> 56720., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.0007441164550777687,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[7.864569369439121, 0.05205797843877052], 
                PlusMinus[7.841479181544311, 0.055294477328000545`], 
                PlusMinus[8.107201019973377, 0.22844953679491886`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[535.379581384835, 61.08567971617531], 
                PlusMinus[551.4116752107063, 57.31668543315299], 
                PlusMinus[626.0509308597861, 58.491726136268106`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.694102462227762, 0.09727534414984201], 
              "StandardDeviation" -> 
              PlusMinus[565.8543446235325, 53.02493641177972], 
              "EvaluationTime" -> 0.00002201428571428571, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.004839285714285714, 
              "TrainingMemory" -> 58564.57142857143, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.0007493008024231418,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[7.610586518943979, 0.12236571581683159`], 
                PlusMinus[7.6483504074013595`, 0.17849343643462592`], 
                PlusMinus[8.025452326510441, 0.24853513474539868`], 
                PlusMinus[7.882261877222733, 0.2658773088272764], 
                PlusMinus[7.685542488565864, 0.17476624849901606`], 
                PlusMinus[7.674536634087847, 0.1634825040712137]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[483.5600148475776, 88.02912812342943], 
                PlusMinus[511.72925048266137`, 117.35419512846508`], 
                PlusMinus[692.4975565317476, 90.29696342262598], 
                PlusMinus[638.8285891443749, 117.5663400611792], 
                PlusMinus[536.789171260371, 104.83752351707744`], 
                PlusMinus[529.4243454648068, 100.35110659965758`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00002201428571428571, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[565.8543446235325, 53.02493641177972], 
             "TrainingMemory" -> 58564.57142857143, "TrainingTime" -> 
             0.007331142857142857], "Index" -> 4], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^-6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.80604487350569, 0.4143824946284593], 
              "StandardDeviation" -> 
              PlusMinus[224.45435869646388`, 38.17732721510036], 
              "EvaluationTime" -> 6.635*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0057822, 
              "TrainingMemory" -> 56694.4, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 4, "ModelUtility" -> 
              0.0018610960140361356`, "MeanCrossEntropyHistory" -> {
                PlusMinus[6.939206570639263, 0.011060228679864679`], 
                PlusMinus[5.7648955704207, 0.05066520758839988], 
                PlusMinus[5.794921939878971, 0.048003052507494405`], 
                PlusMinus[4.921186584270212, 0.08786193620619781]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[272.3536996709965, 30.99408388970858], 
                PlusMinus[158.15755730224762`, 61.94425340582693], 
                PlusMinus[158.36067376013202`, 61.82069291140733], 
                PlusMinus[144.95661263306621`, 72.10519154625256]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.487699359226957, 0.1645221356407499], 
              "StandardDeviation" -> 
              PlusMinus[268.4996036338972, 51.423066470088436`], 
              "EvaluationTime" -> 0.000021725, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.0048893750000000005`, 
              "TrainingMemory" -> 58571.99999999999, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 
              0.0015493755164699007`, "MeanCrossEntropyHistory" -> {
                PlusMinus[4.959694656097717, 0.30898402143454856`], 
                PlusMinus[5.5347579869344825`, 0.22323431503050814`], 
                PlusMinus[5.395099286890276, 0.24457280659656375`], 
                PlusMinus[5.104085450355129, 0.303103492723107], 
                PlusMinus[5.9701959803742, 0.16288594642981946`], 
                PlusMinus[5.315208654636791, 0.2501191810420079], 
                PlusMinus[4.946409722525951, 0.3251938289713816]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[266.3171225018091, 138.57940157823836`], 
                PlusMinus[268.979774756455, 135.23658556342457`], 
                PlusMinus[268.0080754069975, 136.41716351677334`], 
                PlusMinus[266.6297082825356, 138.16830355594016`], 
                PlusMinus[274.7808254341694, 128.92783763032128`], 
                PlusMinus[267.54292091291904`, 136.99682453490516`], 
                PlusMinus[266.2869459643644, 138.61928276516053`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000021725, "ModelMemory" -> 14904., 
             "StandardDeviation" -> 
             PlusMinus[268.4996036338972, 51.423066470088436`], 
             "TrainingMemory" -> 58571.99999999999, "TrainingTime" -> 
             0.0082268875], "Index" -> 5], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.727505025687743, 0.09741936403489773], 
              "StandardDeviation" -> 
              PlusMinus[580.8873896115639, 54.433285487676976`], 
              "EvaluationTime" -> 0.0000272, "TestSize" -> 60, "TrainingSize" -> 
              40, "TrainingTime" -> 0.0046762857142857136`, "TrainingMemory" -> 
              58573.71428571428, "ModelMemory" -> 14904., "ExperimentCount" -> 
              6, "ModelUtility" -> 0.0007299093972159221, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.644155987666197, 0.1250042255649323], 
                PlusMinus[7.681692467502481, 0.18091484430796684`], 
                PlusMinus[8.053653535943493, 0.25046818481730265`], 
                PlusMinus[7.9106716214920265`, 0.267183832957228], 
                PlusMinus[7.71952191811026, 0.1777964289343387], 
                PlusMinus[7.706173188250418, 0.16553469130017234`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[496.5077546263017, 89.72796192800153], 
                PlusMinus[526.0642990948029, 121.39283293375193`], 
                PlusMinus[710.9192692558739, 93.00984748462838], 
                PlusMinus[655.749061493128, 121.4640431359239], 
                PlusMinus[552.7532610419269, 108.25253174917287`], 
                PlusMinus[543.6301237936715, 103.11983651596492`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.871465632055814, 0.09057387946658409], 
              "StandardDeviation" -> 
              PlusMinus[576.7262012505142, 43.35114192297654], 
              "EvaluationTime" -> 5.925*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0044020000000000005`, 
              "TrainingMemory" -> 56768., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.0007378614303819007,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[7.876895325931059, 0.05245833670415047], 
                PlusMinus[7.851291734269868, 0.05547575716446678], 
                PlusMinus[8.110305324069786, 0.2283085812888811]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[542.4228478370683, 61.94476939628578], 
                PlusMinus[556.6851491183438, 57.885161391320665`], 
                PlusMinus[628.0882487559772, 58.67090838684459]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.925*^-6, "ModelMemory" -> 14904., 
             "StandardDeviation" -> 
             PlusMinus[576.7262012505142, 43.35114192297654], 
             "TrainingMemory" -> 56768., "TrainingTime" -> 
             0.006877285714285714], "Index" -> 6], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.266987952029246, 0.1013450443740588], 
              "StandardDeviation" -> 
              PlusMinus[286.07142803798877`, 45.79817619218707], 
              "EvaluationTime" -> 0.0000217875, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.004711, 
              "TrainingMemory" -> 58588., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 0.001463062305387966, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[6.137813466545276, 0.15805213034051024`], 
                PlusMinus[6.183568670822514, 0.15855638528354576`], 
                PlusMinus[6.661347591629964, 0.23167031060356075`], 
                PlusMinus[6.571463164353278, 0.2599083872683942], 
                PlusMinus[6.232721519553456, 0.1339463262760671], 
                PlusMinus[6.261813581453717, 0.17791682888547497`], 
                PlusMinus[6.226993388727634, 0.17591386036901072`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[275.949148362394, 127.89115011159372`], 
                PlusMinus[276.7314100571957, 127.21486179973847`], 
                PlusMinus[303.81088397376186`, 107.98413941251385`], 
                PlusMinus[298.19104613621766`, 111.50642966413434`], 
                PlusMinus[275.67790138233585`, 128.1260700224471], 
                PlusMinus[281.4788102333979, 123.14055701912272`], 
                PlusMinus[280.4821791763035, 123.90351711758979`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.174502049540878, 0.15634505176369826`], 
              "StandardDeviation" -> 
              PlusMinus[335.5442044762058, 48.57742159423431], 
              "EvaluationTime" -> 5.920000000000001*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.004346, 
              "TrainingMemory" -> 56720., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 4, "ModelUtility" -> 
              0.0012510624927591285`, "MeanCrossEntropyHistory" -> {
                PlusMinus[7.165295156277101, 0.03334733435187684], 
                PlusMinus[7.126153236317284, 0.04710547608141857], 
                PlusMinus[7.790662820842636, 0.22712851188998423`], 
                PlusMinus[7.259517125310748, 0.06848805781412384]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[271.5635294831178, 38.58354223284807], 
                PlusMinus[290.1728498032056, 37.581186449754135`], 
                PlusMinus[468.3044088005462, 44.57392703210166], 
                PlusMinus[347.96946512340463`, 38.7316649448377]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 5.920000000000001*^-6, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[335.5442044762058, 48.57742159423431], 
             "TrainingMemory" -> 56720., "TrainingTime" -> 
             0.0068839999999999995`], "Index" -> 7], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.487688240091036, 0.1645224933055983], 
              "StandardDeviation" -> 
              PlusMinus[268.4995219363785, 51.423099589453464`], 
              "EvaluationTime" -> 0.000021625, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.004767749999999999, 
              "TrainingMemory" -> 58612., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 
              0.0015493759338554155`, "MeanCrossEntropyHistory" -> {
                PlusMinus[4.959680051562262, 0.30898281934834987`], 
                PlusMinus[5.534746163294122, 0.22323473126544324`], 
                PlusMinus[5.395091657093823, 0.2445752408134981], 
                PlusMinus[5.104095323467141, 0.3031045966485232], 
                PlusMinus[5.970185823651701, 0.1628869363722864], 
                PlusMinus[5.315200393469937, 0.2501205025486015], 
                PlusMinus[4.9463888355572365`, 0.3251922870577868]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[266.3170809345224, 138.57945648233746`], 
                PlusMinus[268.97966376078773`, 135.23671773078928`], 
                PlusMinus[268.0080227402637, 136.4172289340077], 
                PlusMinus[266.629728507929, 138.16827717577402`], 
                PlusMinus[274.7805768572805, 128.92808508046178`], 
                PlusMinus[267.54286998240923`, 136.99688871656159`], 
                PlusMinus[266.28690860389787`, 138.61933221737374`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.8060532905133035`, 0.41437576117081176`], 
              "StandardDeviation" -> 
              PlusMinus[224.4523961357108, 38.177017059680885`], 
              "EvaluationTime" -> 6.225*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0047932, 
              "TrainingMemory" -> 56681.600000000006`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 4, "ModelUtility" -> 
              0.0018611122498611175`, "MeanCrossEntropyHistory" -> {
                PlusMinus[6.939198327435918, 0.011059769746686874`], 
                PlusMinus[5.764885680632498, 0.0506646142813637], 
                PlusMinus[5.794910689947896, 0.04800562627825789], 
                PlusMinus[4.9212144992426055`, 0.08786579592102324]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[272.3513453686191, 30.994401845444088`], 
                PlusMinus[158.15712793289208`, 61.9445092947711], 
                PlusMinus[158.36009863799916`, 61.82104275427214], 
                PlusMinus[144.95680852800243`, 72.10499012333837]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 6.225*^-6, "ModelMemory" -> 14904., 
             "StandardDeviation" -> 
             PlusMinus[224.4523961357108, 38.177017059680885`], 
             "TrainingMemory" -> 56681.600000000006`, "TrainingTime" -> 
             0.00716435], "Index" -> 8], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.806129763072175, 0.4143141057206067], 
              "StandardDeviation" -> 
              PlusMinus[224.4346423834075, 38.17420569348014], 
              "EvaluationTime" -> 6.245*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0045357999999999996`, 
              "TrainingMemory" -> 56720., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 4, "ModelUtility" -> 
              0.0018612591376395168`, "MeanCrossEntropyHistory" -> {
                PlusMinus[6.939123798852068, 0.011055667125594705`], 
                PlusMinus[5.764795715350572, 0.05065922658061008], 
                PlusMinus[5.794810959955305, 0.048029493902388296`], 
                PlusMinus[4.921470978373726, 0.08790102399411738]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[272.3300571201969, 30.997278573079377`], 
                PlusMinus[158.15321819878525`, 61.94683955540139], 
                PlusMinus[158.35498904967056`, 61.82415411465766], 
                PlusMinus[144.95860619046454`, 72.10314184402398]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.48758694598048, 0.16452576055213852`], 
              "StandardDeviation" -> 
              PlusMinus[268.4987777327134, 51.42340110839313], 
              "EvaluationTime" -> 0.000023375000000000002`, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.006188000000000001, 
              "TrainingMemory" -> 61711., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 
              0.0015493797320080074`, "MeanCrossEntropyHistory" -> {
                PlusMinus[4.959546991593149, 0.3089720409514989], 
                PlusMinus[5.534638928308691, 0.22323846887824894`], 
                PlusMinus[5.395022261348324, 0.24459747752479397`], 
                PlusMinus[5.104185854399168, 0.303114751797131], 
                PlusMinus[5.970092946727865, 0.16289603651024157`], 
                PlusMinus[5.315126049858672, 0.2501323897432902], 
                PlusMinus[4.946197939491904, 0.3251781972703712]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[266.3167021546269, 138.57995680501784`], 
                PlusMinus[268.9786570331551, 135.2379164983186], 
                PlusMinus[268.00754366634925`, 136.4178240140438], 
                PlusMinus[266.62991412366154`, 138.16803507719086`], 
                PlusMinus[274.7783037137678, 128.93034806197326`], 
                PlusMinus[267.5424115807708, 136.9974663905946], 
                PlusMinus[266.28656722864105`, 138.61978408289986`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000023375000000000002`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[268.4987777327134, 51.42340110839313], 
             "TrainingMemory" -> 61711., "TrainingTime" -> 0.0076298], 
           "Index" -> 9], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.8725684693521485`, 0.09034548026650659], 
              "StandardDeviation" -> 
              PlusMinus[577.2359692823835, 43.285899346827094`], 
              "EvaluationTime" -> 5.93125*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.004465, 
              "TrainingMemory" -> 56688., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.00073723587233215, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.878138767194475, 0.05249873557110574], 
                PlusMinus[7.852278527125105, 0.055494067695402965`], 
                PlusMinus[8.110615589618089, 0.2282940300379224]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[543.1387839723624, 62.03224360445441], 
                PlusMinus[557.2186241734494, 57.942763901369034`], 
                PlusMinus[628.2929080346773, 58.68888413587809]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.730909142493807, 0.09743563801913833], 
              "StandardDeviation" -> 
              PlusMinus[582.4602802386828, 54.58087915711538], 
              "EvaluationTime" -> 0.00002304285714285714, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005094285714285714, 
              "TrainingMemory" -> 58592., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.000727938284538332, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.647580755008618, 0.1252791259311499], 
                PlusMinus[7.685091707247551, 0.18116501011543532`], 
                PlusMinus[8.056521078030663, 0.2506671683506089], 
                PlusMinus[7.91356289739715, 0.26731915448859406`], 
                PlusMinus[7.7229838045641115`, 0.1781072086838279], 
                PlusMinus[7.709397176518551, 0.16574835751968284`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[497.8638075018795, 89.91837084425289], 
                PlusMinus[527.5633314188372, 121.82348365150922`], 
                PlusMinus[712.8289400013302, 93.29512024566664], 
                PlusMinus[657.5061793662736, 121.87241824868113`], 
                PlusMinus[554.4210760378351, 108.61816879713605`], 
                PlusMinus[545.1126247127145, 103.41695688004272`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00002304285714285714, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[582.4602802386828, 54.58087915711538], 
             "TrainingMemory" -> 58592., "TrainingTime" -> 
             0.007012142857142857], "Index" -> 10], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.757837500778467, 0.11438889309311066`], 
              "StandardDeviation" -> 
              PlusMinus[525.4910691006544, 50.6970769691079], 
              "EvaluationTime" -> 5.96875*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0043315, 
              "TrainingMemory" -> 56672., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.000806416847800934, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[7.751268306753374, 0.048396394648294025`], 
                PlusMinus[7.748513885284641, 0.05365166879347152], 
                PlusMinus[8.076101508477086, 0.2294777248270213]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[475.04479455293614`, 53.880673513014386`], 
                PlusMinus[504.1833627878183, 52.31946992290512], 
                PlusMinus[606.5459947021953, 56.758210481687655`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[7.4101583343836435`, 0.08686830215964604], 
              "StandardDeviation" -> 
              PlusMinus[459.2294401752328, 40.03706595300284], 
              "EvaluationTime" -> 0.000021187500000000003`, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.004689625, 
              "TrainingMemory" -> 58595.99999999999, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 0.0009244592698690986,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[7.328448346716478, 0.10507478146064758`], 
                PlusMinus[7.366647824850718, 0.16062977446021637`], 
                PlusMinus[7.7821330682974175`, 0.23381974126073196`], 
                PlusMinus[7.63909818705905, 0.2565360389153401], 
                PlusMinus[7.39704439691559, 0.1507516884124554], 
                PlusMinus[7.406429598938276, 0.14970341997219588`], 
                PlusMinus[7.397858422706972, 0.16495893449039015`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[396.79105842746486`, 84.55041365526779], 
                PlusMinus[414.5391708514276, 96.57427912255794], 
                PlusMinus[558.3033207291077, 74.22828032769804], 
                PlusMinus[517.3342407035954, 92.94359162785278], 
                PlusMinus[427.8510463161005, 88.62396682805415], 
                PlusMinus[431.4775068291407, 87.40431597979023], 
                PlusMinus[428.3983689136958, 93.14132731432751]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000021187500000000003`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[459.2294401752328, 40.03706595300284], 
             "TrainingMemory" -> 58595.99999999999, "TrainingTime" -> 
             0.0066763125], "Index" -> 11], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.01], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.8069750632655435`, 0.41364978615911513`], 
              "StandardDeviation" -> 
              PlusMinus[224.25703209249085`, 38.14541914123991], 
              "EvaluationTime" -> 7.3750000000000005`*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.004972400000000001, 
              "TrainingMemory" -> 56732.8, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 4, "ModelUtility" -> 
              0.0018627309555365823`, "MeanCrossEntropyHistory" -> {
                PlusMinus[6.938381276245046, 0.011016091910423036`], 
                PlusMinus[5.763921174774339, 0.050610067685532015`], 
                PlusMinus[5.793986323178816, 0.04831544807263989], 
                PlusMinus[4.9242826991934905`, 0.08826387115990193]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[272.1177168620519, 31.026039787793543`], 
                PlusMinus[158.11482714282536`, 61.96974532863766], 
                PlusMinus[158.3116174202552, 61.85083275894913], 
                PlusMinus[144.97811326061975`, 72.08309846673663]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.4865807023360675`, 0.16455737601874865`], 
              "StandardDeviation" -> 
              PlusMinus[268.4913679212995, 51.42640151645051], 
              "EvaluationTime" -> 0.000022187500000000004`, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.004860999999999999, 
              "TrainingMemory" -> 58564., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 0.001549417580839084, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[4.958228475536173, 0.3088652933207817], 
                PlusMinus[5.5335718278502, 0.2232765765282116], 
                PlusMinus[5.394338000971137, 0.2448226613124273], 
                PlusMinus[5.105105413687752, 0.3032146189642924], 
                PlusMinus[5.969164151396995, 0.16298748875965466`], 
                PlusMinus[5.314387348294616, 0.250251517885281], 
                PlusMinus[4.944304092077283, 0.32504232710632724`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[266.3129421136745, 138.58492384670706`], 
                PlusMinus[268.96863420623487`, 135.2498538931576], 
                PlusMinus[268.0028147500153, 136.42369967726907`], 
                PlusMinus[266.6318154251308, 138.16555525530595`], 
                PlusMinus[274.7555654085846, 128.95299298304923`], 
                PlusMinus[267.53784981021187`, 137.00321581440645`], 
                PlusMinus[266.28318828378605`, 138.6242571018398]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000022187500000000004`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[268.4913679212995, 51.42640151645051], 
             "TrainingMemory" -> 58564., "TrainingTime" -> 
             0.0074029000000000005`], "Index" -> 12], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.1], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[6.819126151643827, 0.4028445510877472], 
              "StandardDeviation" -> 
              PlusMinus[222.47876098912334`, 37.793049188213445`], 
              "EvaluationTime" -> 7.3800000000000005`*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0052882, 
              "TrainingMemory" -> 56707.200000000004`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 4, "ModelUtility" -> 
              0.0018777011958105996`, "MeanCrossEntropyHistory" -> {
                PlusMinus[6.931226976795021, 0.010764295383684614`], 
                PlusMinus[5.757673812028434, 0.05057238301446043], 
                PlusMinus[5.802143348781942, 0.05506088056771725], 
                PlusMinus[4.974026340790053, 0.09221125219052792]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[270.04682599429134`, 31.313039707573445`], 
                PlusMinus[157.7992899454137, 62.15996842564776], 
                PlusMinus[158.61580270853187`, 61.69234339407715], 
                PlusMinus[145.3220734544645, 71.73356391011153]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[5.477199243841457, 0.16481573811573036`], 
              "StandardDeviation" -> 
              PlusMinus[268.4207885585185, 51.45487999351123], 
              "EvaluationTime" -> 0.000025975000000000005`, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.00716, 
              "TrainingMemory" -> 64604., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 
              0.0015497782769837629`, "MeanCrossEntropyHistory" -> {
                PlusMinus[4.945971440248689, 0.3079142355865372], 
                PlusMinus[5.523228291871704, 0.22372943499272302`], 
                PlusMinus[5.388501568033387, 0.2473334787312185], 
                PlusMinus[5.115706401555138, 0.30405896363612667`], 
                PlusMinus[5.960046432221262, 0.1639249276379868], 
                PlusMinus[5.307555690742964, 0.2514501827194109], 
                PlusMinus[4.926428960863623, 0.324133269169392]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[266.2772222813423, 138.6321551473488], 
                PlusMinus[268.87091709801297`, 135.36648895669273`], 
                PlusMinus[267.961908767335, 136.47467759053248`], 
                PlusMinus[266.65537726348157`, 138.13483474633762`], 
                PlusMinus[274.5316602559523, 129.1767809099509], 
                PlusMinus[267.49490527241915`, 137.0574061030383], 
                PlusMinus[266.25191815862627`, 138.6656906847181]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000025975000000000005`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[268.4207885585185, 51.45487999351123], 
             "TrainingMemory" -> 64604., "TrainingTime" -> 0.0088682], 
           "Index" -> 13]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LinearRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ModelMemory", "ExperimentCount", "ModelUtility", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 13], 
        Association["ID" -> 159803003383194]], "MaxTrainingSize" -> 50, 
      "LastReportingTime" -> 3.752724121333691`16.32692162791721*^9, 
      "PreprocessorEvaluationTime" -> 
      3.21582031249999060473765410961278`4.*^-6, "PreprocessorMemory" -> 
      39272, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.7999999999999999, 
          "ElapsedTimes" -> 0.8206520000000002, "ExperimentCounts" -> 47], 
         Association[
         "TrainingSizes" -> 40, "TimeBudgets" -> 1., "ElapsedTimes" -> 
          0.9982390000000001, "ExperimentCounts" -> 87]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[159811593317786]], "ID" -> 
         159815888285082]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{-47.82867324844341, -88.74078537771669}}, "ID" -> 
           6317603181246307725]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 2.628242, "MaxTrainingMemory" -> 986248, "DataMemory" -> 
      10048, "FunctionMemory" -> 250432, "LanguageVersion" -> {11.3, 0}, 
      "Date" -> DateObject[{2018, 12, 2, 7, 22, 1.810976`7.010487683742048}, 
        "Instant", "Gregorian", -5.], "ProcessorCount" -> 2, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.752741771768711*^9, 3.752741787638563*^9}, 
   3.7527418238654823`*^9, 3.752741880056365*^9, 3.752742121845873*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"3e320f14-ce0b-4149-a127-015157a3d251"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", " ", "=", " ", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10000"}], ",", "10000"}], "}"}], ",", " ", "2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.752741897561061*^9, 3.752741923846483*^9}, {
  3.7527419565937853`*^9, 3.7527419772490807`*^9}, {3.752742111145742*^9, 
  3.752742113231091*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"bfd75e4d-cb83-4c4f-99f3-ec16a115ac95"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5981.13980837569`"}], ",", 
   RowBox[{"-", "1419.393658100962`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7527419725310698`*^9, 3.75274197873357*^9}, 
   3.752742121926128*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"b28837f3-970f-4ed0-9533-59b3686a18a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.75274199042347*^9, 3.7527419937811413`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"0cfc7250-64b5-4a57-8b3a-cea26d81c97d"],

Cell[BoxData["36164.287071149665`"], "Output",
 CellChangeTimes->{3.752741994312134*^9, 3.7527421219871197`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"58af8d61-f38a-4f86-85a6-92cb53cb853f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"genSurface", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", " ", 
     RowBox[{"t", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", 
     RowBox[{"t", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "}"}]}]], "Input",
 CellChangeTimes->{{3.752742004336566*^9, 3.752742068411545*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"45f8c96f-7203-453d-8b98-c7da7a74b1bd"],

Cell[BoxData["36817.13225746376`"], "Output",
 CellChangeTimes->{{3.752742048332547*^9, 3.7527420700531178`*^9}, 
   3.752742122036611*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"73fbe1f8-0eee-4eeb-8d50-68dea55a4436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"estSurface", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "\[Rule]", " ", 
     RowBox[{"t", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
    RowBox[{
     SubscriptBox["x", "2"], "\[Rule]", 
     RowBox[{"t", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "}"}]}]], "Input",
 CellChangeTimes->{{3.752742080017754*^9, 3.752742085735334*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"c9cb63ed-8263-42e2-9e9b-248e996fd832"],

Cell[BoxData["36900.10715671076`"], "Output",
 CellChangeTimes->{3.75274208788128*^9, 3.752742122085746*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"47494f90-55ab-4eb1-8152-246c66ac0e9d"]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 634, 15, 37, "Input",ExpressionUUID->"cc943c63-265d-43db-8d96-a522ee421ead"],
Cell[1217, 39, 1229, 20, 42, "Output",ExpressionUUID->"b9feb159-f9d2-4f3f-b239-c12202240e04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2483, 64, 327, 5, 37, "Input",ExpressionUUID->"e6ab9340-3447-49ca-ab87-d03f40fd094c"],
Cell[2813, 71, 1020, 15, 42, "Output",ExpressionUUID->"89b62ee0-aea5-4b1f-a16d-256c0f906a5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3870, 91, 504, 12, 37, "Input",ExpressionUUID->"faf054dd-b5f3-4766-8fa3-16e8e36edc77"],
Cell[4377, 105, 6776, 176, 251, "Output",ExpressionUUID->"ee63a456-9f1a-49bd-b6a7-f7eb4c7d3b33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11190, 286, 1385, 30, 37, "Input",ExpressionUUID->"a3741d04-bd92-4059-a6eb-bb9139f07425"],
Cell[12578, 318, 4083, 90, 147, "Output",ExpressionUUID->"0b9e07f4-afdc-4a79-adb5-0c0888761f6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16698, 413, 1008, 23, 37, "Input",ExpressionUUID->"6993c5bc-8dd9-45d4-9c99-afca30f1a9eb"],
Cell[17709, 438, 59465, 975, 236, "Output",ExpressionUUID->"fd9c1a6f-4c98-4328-ab8e-f90266766862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77211, 1418, 335, 8, 37, "Input",ExpressionUUID->"a99eebd2-17a8-41b5-973d-9b923543d0b1"],
Cell[77549, 1428, 785, 14, 42, "Output",ExpressionUUID->"25ad6c84-c4ff-47a1-82cf-a2aeb27cdb10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78371, 1447, 821, 23, 37, "Input",ExpressionUUID->"c0a251b0-ce0f-4b67-b0bd-bedf3b8881ca"],
Cell[79195, 1472, 15083, 389, 465, "Output",ExpressionUUID->"421a913f-3370-4a03-b0e3-8401f7bd1187"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94315, 1866, 437, 10, 37, "Input",ExpressionUUID->"51cad285-2285-4e51-a38d-beb319fe721c"],
Cell[94755, 1878, 1434, 29, 44, "Output",ExpressionUUID->"4bdf25fe-0fc9-4bc1-9427-a4424bb06ff5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96226, 1912, 229, 4, 37, "Input",ExpressionUUID->"ba111e0f-9221-470a-8f55-2f06a7e350ab"],
Cell[96458, 1918, 1441, 31, 42, "Output",ExpressionUUID->"23dbc061-e8f6-48bc-9886-debe8dfeac9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97936, 1954, 376, 9, 37, "Input",ExpressionUUID->"da49db0d-05c8-4776-99a4-ba48dd06dd89"],
Cell[98315, 1965, 893, 17, 42, "Output",ExpressionUUID->"c8bfd04e-7273-4fda-ab65-3bc89c17e9aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99245, 1987, 390, 10, 37, "Input",ExpressionUUID->"9d512eb3-d3c4-423a-bbea-f13b0a0a4ff3"],
Cell[99638, 1999, 680, 12, 42, "Output",ExpressionUUID->"ac2c81c9-8c5f-4af4-8f34-f2c17878bda6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100355, 2016, 775, 17, 37, "Input",ExpressionUUID->"fb1b0977-62a8-4b10-b478-f4c22781db1d"],
Cell[101133, 2035, 64233, 1054, 327, "Output",ExpressionUUID->"4e768e21-c3f8-489a-9191-9cad77437042"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165403, 3094, 498, 12, 37, "Input",ExpressionUUID->"d7d7843e-50f2-450d-94f4-4e35e64a61d7"],
Cell[165904, 3108, 72541, 1305, 77, "Output",ExpressionUUID->"3e320f14-ce0b-4149-a127-015157a3d251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238482, 4418, 457, 11, 37, "Input",ExpressionUUID->"bfd75e4d-cb83-4c4f-99f3-ec16a115ac95"],
Cell[238942, 4431, 316, 7, 42, "Output",ExpressionUUID->"b28837f3-970f-4ed0-9533-59b3686a18a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239295, 4443, 200, 3, 37, "Input",ExpressionUUID->"0cfc7250-64b5-4a57-8b3a-cea26d81c97d"],
Cell[239498, 4448, 191, 2, 42, "Output",ExpressionUUID->"58af8d61-f38a-4f86-85a6-92cb53cb853f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239726, 4455, 494, 13, 37, "Input",ExpressionUUID->"45f8c96f-7203-453d-8b98-c7da7a74b1bd"],
Cell[240223, 4470, 218, 3, 42, "Output",ExpressionUUID->"73fbe1f8-0eee-4eeb-8d50-68dea55a4436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240478, 4478, 494, 13, 37, "Input",ExpressionUUID->"c9cb63ed-8263-42e2-9e9b-248e996fd832"],
Cell[240975, 4493, 187, 2, 76, "Output",ExpressionUUID->"47494f90-55ab-4eb1-8152-246c66ac0e9d"]
}, Open  ]]
}
]
*)

